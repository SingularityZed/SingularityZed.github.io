{"meta":{"title":"奇点之光","subtitle":null,"description":null,"author":"John Doe","url":"https://singularityzed.github.io"},"pages":[{"title":"我的朋友们","date":"2019-01-23T05:57:36.130Z","updated":"2019-01-23T05:57:36.130Z","comments":true,"path":"friends/index.html","permalink":"https://singularityzed.github.io/friends/index.html","excerpt":"","text":"各位大佬想交换友链的话可以在下方留言，必须要有名称、头像链接、和至少一个标签哦～ 名称： 奇点之光头像： https://singularityzed.github.io/assets/avatar.jpg网址： https://singularityzed.github.io标签： #Java #Python #Angular #LoL"},{"title":"Page","date":"2013-12-26T14:52:56.000Z","updated":"2019-01-22T09:40:12.179Z","comments":true,"path":"about/index.html","permalink":"https://singularityzed.github.io/about/index.html","excerpt":"","text":"This is a page test."},{"title":"","date":"2019-01-23T05:51:04.766Z","updated":"2019-01-23T05:51:04.766Z","comments":true,"path":"wiki/axkit/alert.html","permalink":"https://singularityzed.github.io/wiki/axkit/alert.html","excerpt":"","text":"AXKit | xaoxuuVue.config.productionTip=!1,window.PAGE_TYPE=\"AXKit\"AXKit xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件AXKitAXKitImage ViewBundleColorDictionaryViewApplicationCore GraphicsControlErrorDateGCDImageEmailBar Button ItemLayerObjectNavigationStatus BarRuntimeResponderAlertStringTabBar ControllerTimerUser DefaultsTableTheme更新日志AlertAlert12345678/** 弹窗(标题+消息+自定义按钮)（如果action为nil，则只有一个确定按钮） @param title 标题 @param message 消息 @param actions 按钮 */+ (instancetype)ax_showAlertWithTitle:(nullable NSString *)title message:(nullable NSString *)message actions:(void (^ __nullable)(UIAlertController *alert))actions;Action Sheet12345678/** 弹窗(标题+消息+自定义按钮)（如果action为nil，则只有一个确定按钮） @param title 标题 @param message 消息 @param actions 按钮 */+ (instancetype)ax_showActionSheetWithTitle:(nullable NSString *)title message:(nullable NSString *)message actions:(void (^ __nullable)(UIAlertController *alert))actions;添加按钮1234567891011121314151617181920212223242526272829303132333435/** 添加一个按钮 @param title 按钮标题 @param style 按钮样式 @param handler 按钮事件 */- (void)ax_addActionWithTitle:(nullable NSString *)title style:(UIAlertActionStyle)style handler:(void (^ __nullable)(UIAlertAction *sender))handler;/** 添加一个取消样式的按钮(标题传nil则为默认标题) @param title 按钮标题 @param handler 按钮事件 */- (void)ax_addCancelActionWithTitle:(nullable NSString *)title handler:(void (^ __nullable)(UIAlertAction *sender))handler;- (void)ax_addCancelAction;/** 添加一个默认样式的按钮(标题传nil则为默认标题) @param title 按钮标题 @param handler 按钮事件 */- (void)ax_addDefaultActionWithTitle:(nullable NSString *)title handler:(void (^ __nullable)(UIAlertAction *sender))handler;/** 添加一个破坏性按钮（红色）(标题传nil则为默认标题) @param title 按钮标题 @param handler 按钮事件 */- (void)ax_addDestructiveActionWithTitle:(nullable NSString *)title handler:(void (^ __nullable)(UIAlertAction *sender))handler;根据类名读取实例1234567/** 根据view controller的类名创建实例 @param name view controller的类名 @return view controller实例对象 */CG_EXTERN UIViewController *UIViewControllerNamed(NSString *name);本文最后更新于：2018-10-17 星期三评论var GUEST_INFO=[\"nick\",\"mail\",\"link\"],guest_info=\"nick,mail,link\".split(\",\").filter(function(i){return-1"},{"title":"","date":"2019-01-23T05:51:04.767Z","updated":"2019-01-23T05:51:04.767Z","comments":true,"path":"wiki/axkit/application.html","permalink":"https://singularityzed.github.io/wiki/axkit/application.html","excerpt":"","text":"AXKit | xaoxuuVue.config.productionTip=!1,window.PAGE_TYPE=\"AXKit\"AXKit xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件AXKitAXKitImage ViewBundleColorDictionaryViewApplicationCore GraphicsControlErrorDateGCDImageEmailBar Button ItemLayerObjectNavigationStatus BarRuntimeResponderAlertStringTabBar ControllerTimerUser DefaultsTableTheme更新日志Application通过Safari打开URL1234567891011121314/** 打开app内置Safari浏览器 @param URL 网址 */+ (void)ax_presentSafariViewControllerWithURL:(NSURL *)URL;/** 打开app内置Safari浏览器 @param URL 网址 @param viewController 从哪个视图控制器，传入nil可从根控制器打开 */+ (void)ax_presentSafariViewControllerWithURL:(NSURL *)URL fromViewController:(nullable UIViewController *)viewController;设置跳转12345678910111213141516171819202122232425262728293031#pragma mark - 跳转/** 打开蓝牙设置 */+ (void)ax_openBluetoothSetting NS_DEPRECATED_IOS(8.0, 10.0, \"Please use ax_openAppSetting instead\") NS_EXTENSION_UNAVAILABLE_IOS(\"\");/** 打开WIFI设置 */+ (void)ax_openWIFISetting NS_DEPRECATED_IOS(8_0, 10_0, \"Please use ax_openAppSetting instead\") NS_EXTENSION_UNAVAILABLE_IOS(\"\");/** 打开通知设置 */+ (void)ax_openNotificationSetting NS_DEPRECATED_IOS(8_0, 10_0, \"Please use ax_openAppSetting instead\") NS_EXTENSION_UNAVAILABLE_IOS(\"\");/** 打开相册设置 */+ (void)ax_openPhotosSetting NS_DEPRECATED_IOS(8_0, 10_0, \"Please use ax_openAppSetting instead\") NS_EXTENSION_UNAVAILABLE_IOS(\"\");/** 打开浏览器设置 */+ (void)ax_openSafariSetting NS_DEPRECATED_IOS(8_0, 10_0, \"Please use ax_openAppSetting instead\") NS_EXTENSION_UNAVAILABLE_IOS(\"\");/** 打开当前app的设置页面 */+ (void)ax_openAppSetting NS_AVAILABLE_IOS(11.0);本文最后更新于：2018-10-17 星期三评论var GUEST_INFO=[\"nick\",\"mail\",\"link\"],guest_info=\"nick,mail,link\".split(\",\").filter(function(i){return-1"},{"title":"","date":"2019-01-23T05:51:04.768Z","updated":"2019-01-23T05:51:04.768Z","comments":true,"path":"wiki/axkit/bundle.html","permalink":"https://singularityzed.github.io/wiki/axkit/bundle.html","excerpt":"","text":"AXKit | xaoxuuVue.config.productionTip=!1,window.PAGE_TYPE=\"AXKit\"AXKit xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件AXKitAXKitImage ViewBundleColorDictionaryViewApplicationCore GraphicsControlErrorDateGCDImageEmailBar Button ItemLayerObjectNavigationStatus BarRuntimeResponderAlertStringTabBar ControllerTimerUser DefaultsTableTheme更新日志Bundle获取常用的Bundle信息123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110/** bundle display name @return bundle display name */- (NSString *)ax_bundleDisplayName;/** bundle name @return bundle name */- (NSString *)ax_bundleName;/** bundle short version string @return bundle short version string */- (NSString *)ax_bundleShortVersionString;/** bundle build version string @return bundle build version string */- (NSString *)ax_bundleVersion;/** main bundle id @return main bundle id */+ (NSString *)ax_mainBundleId;/** app name (CFBundleDisplayName) @return app name */+ (NSString *)ax_appDisplayName;/** app name (CFBundleDisplayName) @return app name */+ (NSString *)ax_appName;/** app version (CFBundleShortVersionString) @return app version */+ (NSString *)ax_appVersion;/** app build (CFBundleVersion) @return app build */+ (NSString *)ax_appBuild;/** bundle localized info dictionary @return bundle localized info dictionary */+ (NSDictionary *)ax_localizedInfoDictionary;/** bundle info dictionary @return bundle info dictionary */+ (NSDictionary *)ax_infoDictionary;/** appicon path @return appicon path */+ (NSString *)ax_appIconPath;/** appicon @return appicon */+ (UIImage *)ax_appIcon;/** 启动图片路径 @return 启动图片路径 */+ (NSString *)ax_appLaunchImagePath;/** 启动图片 @return 启动图片 */+ (UIImage *)ax_appLaunchImage;LocalizeView方便但是耗性能，慎用。12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849/** 将UILabel中的文字转换成NSLocalizedString @param label 目标UILabel */FOUNDATION_EXTERN void AXLocalizeLabel(UILabel *label);/** 将UITextView中的文字转换成NSLocalizedString @param textView 目标UITextView */FOUNDATION_EXTERN void AXLocalizeTextView(UITextView *textView);/** 将UITextField中的文字转换成NSLocalizedString @param textField 目标UITextField */FOUNDATION_EXTERN void AXLocalizeTextField(UITextField *textField);/** 将view里所有的UILabel中的文字转换成NSLocalizedString（含所有子视图，耗费性能，慎用） @param view 目标view */FOUNDATION_EXTERN void AXLocalizeAllLabelsInView(UIView *view);/** 将view里所有的UITextField中的文字转换成NSLocalizedString（含所有子视图，耗费性能，慎用） @param view 目标view */FOUNDATION_EXTERN void AXLocalizeAllTextFieldsInView(UIView *view);/** 将view里所有的UITextView中的文字转换成NSLocalizedString（含所有子视图，耗费性能，慎用） @param view 目标view */FOUNDATION_EXTERN void AXLocalizeAllTextViewsInView(UIView *view);/** 将view里所有的控件中的文字转换成NSLocalizedString（含所有子视图中的所有控件，耗费性能，慎用） @param view 目标view */FOUNDATION_EXTERN void AXLocalizeAllSubviewsInView(UIView *view);本文最后更新于：2018-10-17 星期三评论var GUEST_INFO=[\"nick\",\"mail\",\"link\"],guest_info=\"nick,mail,link\".split(\",\").filter(function(i){return-1"},{"title":"","date":"2019-01-23T05:51:04.769Z","updated":"2019-01-23T05:51:04.769Z","comments":true,"path":"wiki/axkit/color.html","permalink":"https://singularityzed.github.io/wiki/axkit/color.html","excerpt":"","text":"AXKit | xaoxuuVue.config.productionTip=!1,window.PAGE_TYPE=\"AXKit\"AXKit xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件AXKitAXKitImage ViewBundleColorDictionaryViewApplicationCore GraphicsControlErrorDateGCDImageEmailBar Button ItemLayerObjectNavigationStatus BarRuntimeResponderAlertStringTabBar ControllerTimerUser DefaultsTableTheme更新日志Color深浅调整1234567891011121314151617181920212223/** 颜色变深 @return 变深之后的颜色 */- (UIColor *)dark;/** 颜色变浅 @return 变浅之后的颜色 */- (UIColor *)light;/** 颜色变深，传入参数ratio为比例（0~1） */- (UIColor *(^)(CGFloat ratio))darkRatio;/** 颜色变浅，传入参数ratio为比例（0~1） */- (UIColor *(^)(CGFloat ratio))lightRatio;创建颜色12345678910111213141516171819202122/** 随机色 @return 随机色 */+ (UIColor *)randomColor;/** 以HEX创建颜色 @param hex 16进制 @return UIColor实例 */+ (UIColor *)colorWithHex:(NSUInteger)hex;/** 以HEX字符串创建颜色 @param hexStr HEX字符串 @return UIColor实例 */+ (UIColor *)colorWithHexString:(NSString *)hexStr;解析123456789101112131415161718192021222324252627282930313233343536373839404142/** 获取UIColor中的R值 @return R值（0~1） */- (CGFloat)redValue;/** 获取UIColor中的G值 @return R值（0~1） */- (CGFloat)greenValue;/** 获取UIColor中的B值 @return R值（0~1） */- (CGFloat)blueValue;/** 获取UIColor中的Alpha值 @return R值（0~1） */- (CGFloat)alphaValue;/** 获取颜色的HEX字符串（不含Alpha值） @return HEX字符串 */- (NSString *)hexString;/** 获取颜色的HEX字符串 @return HEX字符串 */- (NSString *)hexStringWithAlpha;AXKit Color Pack123456789101112131415161718192021222324/** 蓝色 */@property (class, strong, readonly, nonatomic) UIColor *ax_blue;/** 青色 */@property (class, strong, readonly, nonatomic) UIColor *ax_cyan;/** 绿色 */@property (class, strong, readonly, nonatomic) UIColor *ax_green;/** 浅红色 */@property (class, strong, readonly, nonatomic) UIColor *ax_lightRed;/** 红色 */@property (class, strong, readonly, nonatomic) UIColor *ax_red;Material Design Color Pack1234567891011121314151617181920212223242526#pragma mark red -&gt; purple@property (class, strong, readonly, nonatomic) UIColor *md_red;@property (class, strong, readonly, nonatomic) UIColor *md_pink;@property (class, strong, readonly, nonatomic) UIColor *md_purple;@property (class, strong, readonly, nonatomic) UIColor *md_deepPurple;#pragma mark blue -&gt; cyan@property (class, strong, readonly, nonatomic) UIColor *md_indigo;@property (class, strong, readonly, nonatomic) UIColor *md_blue;@property (class, strong, readonly, nonatomic) UIColor *md_lightBlue;@property (class, strong, readonly, nonatomic) UIColor *md_cyan;@property (class, strong, readonly, nonatomic) UIColor *md_teal;#pragma mark green -&gt; yellow@property (class, strong, readonly, nonatomic) UIColor *md_green;@property (class, strong, readonly, nonatomic) UIColor *md_lightGreen;@property (class, strong, readonly, nonatomic) UIColor *md_lime;@property (class, strong, readonly, nonatomic) UIColor *md_yellow;@property (class, strong, readonly, nonatomic) UIColor *md_amber;#pragma mark orange -&gt; gray@property (class, strong, readonly, nonatomic) UIColor *md_orange;@property (class, strong, readonly, nonatomic) UIColor *md_deepOrange;@property (class, strong, readonly, nonatomic) UIColor *md_brown;@property (class, strong, readonly, nonatomic) UIColor *md_blueGray;@property (class, strong, readonly, nonatomic) UIColor *md_gray;本文最后更新于：2018-10-17 星期三评论var GUEST_INFO=[\"nick\",\"mail\",\"link\"],guest_info=\"nick,mail,link\".split(\",\").filter(function(i){return-1"},{"title":"","date":"2019-01-23T05:51:04.767Z","updated":"2019-01-23T05:51:04.767Z","comments":true,"path":"wiki/axkit/bar_button_item.html","permalink":"https://singularityzed.github.io/wiki/axkit/bar_button_item.html","excerpt":"","text":"AXKit | xaoxuuVue.config.productionTip=!1,window.PAGE_TYPE=\"AXKit\"AXKit xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件AXKitAXKitImage ViewBundleColorDictionaryViewApplicationCore GraphicsControlErrorDateGCDImageEmailBar Button ItemLayerObjectNavigationStatus BarRuntimeResponderAlertStringTabBar ControllerTimerUser DefaultsTableTheme更新日志Bar Button Item静态构造方法123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475#pragma mark - 静态构造方法#pragma mark 推荐/** 创建一个baritem @param image 图片名 @param action 响应的事件 @return baritem实例 */+ (instancetype)ax_itemWithImageName:(NSString *)image action:(void (^)(UIBarButtonItem *sender))action;/** 快速创建一个baritem @param title 标题 @param action 响应的事件 @return baritem实例 */+ (instancetype)ax_itemWithTitle:(NSString *)title action:(void (^)(UIBarButtonItem *sender))action;/** 快速创建一个baritem @param view 自定义视图 @param action 响应的事件 @return baritem实例 */+ (instancetype)ax_itemWithCustomView:(UIView *)view action:(void (^)(UIBarButtonItem *sender))action;#pragma mark 普通/** 创建一个system样式的baritem @param systemItem 系统item样式 @param action 响应的事件 @return item实例 */+ (instancetype)ax_itemWithSystem:(UIBarButtonSystemItem)systemItem action:(void (^)(UIBarButtonItem *sender))action;/** 创建一个自定义baritem @param image 图片 @param style 样式 @param action 响应的事件 @return item实例 */+ (instancetype)ax_itemWithImage:(UIImage *)image style:(UIBarButtonItemStyle)style action:(void (^)(UIBarButtonItem *sender))action;/** 创建一个自定义baritem @param image 图片 @param landscapeImagePhone 横屏图片 @param style 样式 @param action 响应的事件 @return item实例 */+ (instancetype)ax_itemWithImage:(UIImage *)image landscapeImagePhone:(UIImage *)landscapeImagePhone style:(UIBarButtonItemStyle)style action:(void (^)(UIBarButtonItem *sender))action;/** 创建一个文字baritem @param title 文字 @param style 样式 @param action 响应的事件 @return item实例 */+ (instancetype)ax_itemWithTitle:(NSString *)title style:(UIBarButtonItemStyle)style action:(void (^)(UIBarButtonItem *sender))action;实例构造方法123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051#pragma mark - 实例构造方法/** 创建一个system样式的baritem @param systemItem 系统item样式 @param action 响应的事件 @return item实例 */- (instancetype)ax_initWithSystem:(UIBarButtonSystemItem)systemItem action:(void (^)(UIBarButtonItem *sender))action AX_INITIALIZER;/** 创建一个自定义baritem @param image 图片 @param style 样式 @param action 响应的事件 @return item实例 */- (instancetype)ax_initWithImage:(UIImage *)image style:(UIBarButtonItemStyle)style action:(void (^)(UIBarButtonItem *sender))action AX_INITIALIZER;/** 创建一个自定义baritem @param image 图片 @param landscapeImagePhone 横屏图片 @param style 样式 @param action 响应的事件 @return item实例 */- (instancetype)ax_initWithImage:(UIImage *)image landscapeImagePhone:(UIImage *)landscapeImagePhone style:(UIBarButtonItemStyle)style action:(void (^)(UIBarButtonItem *sender))action AX_INITIALIZER;/** 创建一个文字baritem @param title 文字 @param style 样式 @param action 响应的事件 @return item实例 */- (instancetype)ax_initWithTitle:(NSString *)title style:(UIBarButtonItemStyle)style action:(void (^)(UIBarButtonItem *sender))action AX_INITIALIZER;/** 快速创建一个baritem @param view 自定义视图 @param action 响应的事件 @return baritem实例 */- (instancetype)ax_initWithCustomView:(UIView *)view action:(void (^)(UIBarButtonItem *sender))action AX_INITIALIZER;本文最后更新于：2018-10-17 星期三评论var GUEST_INFO=[\"nick\",\"mail\",\"link\"],guest_info=\"nick,mail,link\".split(\",\").filter(function(i){return-1"},{"title":"","date":"2019-01-23T05:51:04.772Z","updated":"2019-01-23T05:51:04.772Z","comments":true,"path":"wiki/axkit/email.html","permalink":"https://singularityzed.github.io/wiki/axkit/email.html","excerpt":"","text":"AXKit | xaoxuuVue.config.productionTip=!1,window.PAGE_TYPE=\"AXKit\"AXKit xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件AXKitAXKitImage ViewBundleColorDictionaryViewApplicationCore GraphicsControlErrorDateGCDImageEmailBar Button ItemLayerObjectNavigationStatus BarRuntimeResponderAlertStringTabBar ControllerTimerUser DefaultsTableTheme更新日志Email发送邮件12345678/** 发送邮件 @param email 邮件内容 @param completion 发送完成回调 @param fail 发送失败回调 */- (void)sendEmail:(void (^)(MFMailComposeViewController *mailCompose))email completion:(void (^)(MFMailComposeResult result))completion fail:(void (^)(NSError *error))fail;全部接口1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465/** 默认的收件人 */@property (strong, nonatomic) NSArray&lt;NSString *&gt; *defaultToRecipients;/** 默认的抄送 */@property (strong, nonatomic) NSArray&lt;NSString *&gt; *defaultCcRecipients;/** 默认的密送 */@property (strong, nonatomic) NSArray&lt;NSString *&gt; *defaultBccRecipients;/** 默认的主题 */@property (copy, nonatomic) NSString *defaultSubject;/** 默认的body */@property (copy, nonatomic) NSString *defaultMessageBody;/** 附件源（可提前设置好，但直到发送文件的时候才从路径中取出文件） */@property (strong, nonatomic) NSMutableArray&lt;EmailAttachmentDataSource *&gt; *attachmentDataSource;#pragma mark - life circle+ (instancetype)sharedInstance;+ (instancetype)defaultManager;/** 配置默认compose @param defaultCompose 默认的compose */- (void)configDefaultCompose:(void (^)(EmailManager *manager))defaultCompose;/** 添加附件源 可提前设置好，但直到发送文件的时候才从路径中取出文件。 @param filePath 文件路径 @param mimeType 文件类型 @param fileName 文件名 */- (void)addAttachmentDataSourceWithFilePath:(NSString *)filePath mimeType:(nullable NSString *)mimeType fileName:(nullable NSString *)fileName;/** 发送邮件 @param email 邮件内容 @param completion 发送完成回调 @param fail 发送失败回调 */- (void)sendEmail:(void (^)(MFMailComposeViewController *mailCompose))email completion:(void (^)(MFMailComposeResult result))completion fail:(void (^)(NSError *error))fail;本文最后更新于：2018-10-17 星期三评论var GUEST_INFO=[\"nick\",\"mail\",\"link\"],guest_info=\"nick,mail,link\".split(\",\").filter(function(i){return-1"},{"title":"","date":"2019-01-23T05:51:04.770Z","updated":"2019-01-23T05:51:04.770Z","comments":true,"path":"wiki/axkit/control.html","permalink":"https://singularityzed.github.io/wiki/axkit/control.html","excerpt":"","text":"AXKit | xaoxuuVue.config.productionTip=!1,window.PAGE_TYPE=\"AXKit\"AXKit xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件AXKitAXKitImage ViewBundleColorDictionaryViewApplicationCore GraphicsControlErrorDateGCDImageEmailBar Button ItemLayerObjectNavigationStatus BarRuntimeResponderAlertStringTabBar ControllerTimerUser DefaultsTableTheme更新日志Control事件绑定123456// 添加- (void)ax_addEventHandler:(void (^)(__kindof UIControl *sender))handler forControlEvents:(UIControlEvents)controlEvents;// 移除- (void)ax_removeEventHandlersForControlEvents:(UIControlEvents)controlEvents;// 是否响应事件- (NSUInteger)ax_hasEventHandlersForControlEvents:(UIControlEvents)controlEvents;Button123456789101112131415161718192021222324252627282930/** 添加一个任意事件 @param handler 处理事件的block @param controlEvents 事件 */- (void)ax_addEventHandler:(void (^)(__kindof UIButton *sender))handler forControlEvents:(UIControlEvents)controlEvents;/** 添加一个TouchDown事件 @param handler 处理事件的block */- (void)ax_addTouchDownHandler:(void (^)(__kindof UIButton *sender))handler;/** 添加一个TouchUpInside事件 @param handler 处理事件的block */- (void)ax_addTouchUpInsideHandler:(void (^)(__kindof UIButton *sender))handler;/** 添加一个TouchUpInside事件，并附加动画 @param handler 处理事件的block @param scale 动画的缩放比例 @param duration 动画持续时间 */- (void)ax_addTouchUpInsideHandler:(nullable void (^)(__kindof UIButton *sender))handler animatedScale:(CGFloat)scale duration:(NSTimeInterval)duration;Slider1234567891011121314151617181920212223242526272829303132333435363738394041424344454647/** 添加一个任意事件 @param handler 处理事件的block @param controlEvents 事件 */- (void)ax_addEventHandler:(void (^)(__kindof UISlider *sender))handler forControlEvents:(UIControlEvents)controlEvents;/** 添加一个TouchDown事件 @param handler 处理事件的block */- (void)ax_addTouchDownHandler:(void (^)(__kindof UISlider *sender))handler;/** 添加一个TouchDown事件，并附加动画 @param handler 处理事件的block @param scale 动画的缩放比例 @param duration 动画持续时间 */- (void)ax_addTouchDownHandler:(nullable void (^)(__kindof UISlider *sender))handler animatedScale:(CGFloat)scale duration:(NSTimeInterval)duration;/** 添加一个ValueChanged事件 @param handler 处理事件的block */- (void)ax_addValueChangedHandler:(void (^)(__kindof UISlider *sender))handler;/** 添加一个TouchUp事件 @param handler 处理事件的block */- (void)ax_addTouchUpHandler:(void (^)(__kindof UISlider *sender))handler;/** 添加一个TouchUp事件，并附加动画 @param handler 处理事件的block @param scale 动画的缩放比例 @param duration 动画持续时间 */- (void)ax_addTouchUpHandler:(nullable void (^)(__kindof UISlider *sender))handler animatedScale:(CGFloat)scale duration:(NSTimeInterval)duration;Switch12345678910111213141516171819202122232425262728/** 添加一个任意事件 @param handler 处理事件的block @param controlEvents 事件 */- (void)ax_addEventHandler:(void (^)(__kindof UISwitch *sender))handler forControlEvents:(UIControlEvents)controlEvents;/** 添加一个TouchDown事件 @param handler 处理事件的block */- (void)ax_addTouchDownHandler:(void (^)(__kindof UISwitch *sender))handler;/** 添加一个ValueChanged事件 @param handler 处理事件的block */- (void)ax_addValueChangedHandler:(void (^)(__kindof UISwitch *sender))handler;/** 添加一个TouchUp事件 @param handler 处理事件的block */- (void)ax_addTouchUpInsideHandler:(void (^)(__kindof UISwitch *sender))handler;SegmentedControl1234567891011121314/** 添加一个任意事件 @param handler 处理事件的block @param controlEvents 事件 */- (void)ax_addEventHandler:(void (^)(__kindof UISegmentedControl *sender))handler forControlEvents:(UIControlEvents)controlEvents;/** 添加一个ValueChanged事件 @param handler 处理事件的block */- (void)ax_addValueChangedHandler:(void (^)(__kindof UISegmentedControl *sender))handler;TextField1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253/** 添加一个任意事件 @param handler 处理事件的block @param controlEvents 事件 */- (void)ax_addEventHandler:(void (^)(__kindof UITextField *sender))handler forControlEvents:(UIControlEvents)controlEvents;/** 添加一个EditingBegin事件 @param handler 处理事件的block */- (void)ax_addEditingBeginHandler:(void (^)(__kindof UITextField *sender))handler;/** 添加一个EditingBegin事件，并附加动画 @param handler 处理事件的block @param scale 动画的缩放比例 @param duration 动画持续时间 */- (void)ax_addEditingBeginHandler:(nullable void (^)(__kindof UITextField *sender))handler animatedScale:(CGFloat)scale duration:(NSTimeInterval)duration;/** 添加一个EditingChanged事件 @param handler 处理事件的block */- (void)ax_addEditingChangedHandler:(void (^)(__kindof UITextField *sender))handler;/** 添加一个EditingEndOnExit事件 @param handler 处理事件的block */- (void)ax_addEditingEndOnExitHandler:(void (^)(__kindof UITextField *sender))handler;/** 添加一个EditingEnd事件 @param handler 处理事件的block */- (void)ax_addEditingEndHandler:(void (^)(__kindof UITextField *sender))handler;/** 添加一个EditingEnd事件，并附加动画 @param handler 处理事件的block @param scale 动画的缩放比例 @param duration 动画持续时间 */- (void)ax_addEditingEndHandler:(nullable void (^)(__kindof UITextField *sender))handler animatedScale:(CGFloat)scale duration:(NSTimeInterval)duration;弹出键盘时视图上移123456/** 当键盘弹出的时候调整某个view的frame @param view 需要调整的view */- (void)ax_adjustViewFrameWithKeyboard:(UIView *)view;本文最后更新于：2018-10-17 星期三评论var GUEST_INFO=[\"nick\",\"mail\",\"link\"],guest_info=\"nick,mail,link\".split(\",\").filter(function(i){return-1"},{"title":"","date":"2019-01-23T05:51:04.771Z","updated":"2019-01-23T05:51:04.771Z","comments":true,"path":"wiki/axkit/date.html","permalink":"https://singularityzed.github.io/wiki/axkit/date.html","excerpt":"","text":"AXKit | xaoxuuVue.config.productionTip=!1,window.PAGE_TYPE=\"AXKit\"AXKit xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件AXKitAXKitImage ViewBundleColorDictionaryViewApplicationCore GraphicsControlErrorDateGCDImageEmailBar Button ItemLayerObjectNavigationStatus BarRuntimeResponderAlertStringTabBar ControllerTimerUser DefaultsTableTheme更新日志Date创建1234567891011121314151617181920212223242526272829303132333435363738/** 将8位数的日期值(yyyyMMdd)转换成日期 @param integerValue 8位数的整型值(yyyyMMdd) @return 日期 */+ (nullable instancetype)ax_dateWithIntegerValue:(NSInteger)integerValue;/** 根据日期字符串和格式生成日期 @param dateString 日期字符串 @param format 格式 @return 日期 */+ (nullable instancetype)ax_dateWithString:(NSString *)dateString format:(NSString *)format;/** 根据日期字符串、格式、时区、locale生成日期 @param dateString 日期字符串 @param format 格式 @param timeZone 时区 @param locale locale @return 日期 */+ (nullable instancetype)ax_dateWithString:(NSString *)dateString format:(NSString *)format timeZone:(nullable NSTimeZone *)timeZone locale:(nullable NSLocale *)locale;/** 根据ISOformat字符串生成日期 @param dateString ISOformat字符串 @return 日期 */+ (nullable instancetype)ax_dateWithISOFormatString:(NSString *)dateString;格式化输出1234567891011121314151617181920212223242526272829303132/** 8位数的整型值(yyyyMMdd) */@property (assign, readonly, nonatomic) NSInteger integerValue;/** 8位数的整型值(yyyyMMdd) */@property (assign, readonly, nonatomic) int intValue;/** ISOformat字符串(yyyy-MM-dd'T'HH:mm:ssZ) */@property (strong, readonly, nonatomic) NSString *isoStringValue;/** 根据日期格式、时区、locale生成日期字符串 @param format 格式 @param timeZone 时区 @param locale locale @return 日期字符串 */- (nullable NSString *)ax_stringWithFormat:(NSString *)format timeZone:(nullable NSTimeZone *)timeZone locale:(nullable NSLocale *)locale;/** 生成日期format格式的字符串，传入参数为format */- (nullable NSString *(^)(NSString *))stringValue;日期计算1234567891011121314151617181920212223242526272829303132333435/** 增加年 */- (nullable NSDate *(^)(NSInteger))addYears;/** 增加月 */- (nullable NSDate *(^)(NSInteger))addMonths;/** 增加周数（一年中的第几周） */- (nullable NSDate *(^)(NSInteger))addWeeks;/** 增加天 */- (nullable NSDate *(^)(NSInteger))addDays;/** 增加小时 */- (nullable NSDate *(^)(NSInteger))addhours;/** 增加分钟 */- (nullable NSDate *(^)(NSInteger))addMinutes;/** 增加秒 */- (nullable NSDate *(^)(NSInteger))addSeconds;本文最后更新于：2018-10-17 星期三评论var GUEST_INFO=[\"nick\",\"mail\",\"link\"],guest_info=\"nick,mail,link\".split(\",\").filter(function(i){return-1"},{"title":"","date":"2019-01-23T05:51:04.770Z","updated":"2019-01-23T05:51:04.770Z","comments":true,"path":"wiki/axkit/core_graphics.html","permalink":"https://singularityzed.github.io/wiki/axkit/core_graphics.html","excerpt":"","text":"AXKit | xaoxuuVue.config.productionTip=!1,window.PAGE_TYPE=\"AXKit\"AXKit xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件AXKitAXKitImage ViewBundleColorDictionaryViewApplicationCore GraphicsControlErrorDateGCDImageEmailBar Button ItemLayerObjectNavigationStatus BarRuntimeResponderAlertStringTabBar ControllerTimerUser DefaultsTableTheme更新日志Core Graphics屏幕常量123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118/** 屏幕尺寸枚举 kCGScreenSizeEnumUnknown: 未知 kCGScreenSizeEnum_3_5: 3.5英寸屏幕：1、2、3、3g、3gs、4、4s kCGScreenSizeEnum_4_0: 4.0英寸屏幕：5、5c、5s kCGScreenSizeEnum_4_7: 4.7英寸屏幕：6、6s、7、8 kCGScreenSizeEnum_5_5: 5.5英寸屏幕：6 plus、6s plus、7 plus、8 plus kCGScreenSizeEnum_5_8: 5.8英寸屏幕：iPhone X */typedef NS_ENUM(NSUInteger, kCGScreenSizeEnum) &#123; kCGScreenSizeEnumUnknown, kCGScreenSizeEnum_3_5, kCGScreenSizeEnum_4_0, kCGScreenSizeEnum_4_7, kCGScreenSizeEnum_5_5, kCGScreenSizeEnum_5_8&#125;;/** 获取当前屏幕尺寸枚举 @return 当前屏幕尺寸枚举 */CG_EXTERN kCGScreenSizeEnum CGConstGetScreenSizeEnum(void);/** 当前屏幕CGRect @return 当前屏幕CGRect */CG_EXTERN CGRect CGConstGetScreenBounds(void);#ifndef kScreenBounds#define kScreenBounds CGConstGetScreenBounds()#endif/** 当前屏幕尺寸 @return 当前屏幕尺寸 */CG_EXTERN CGSize CGConstGetScreenSize(void);#ifndef kScreenSize#define kScreenSize CGConstGetScreenSize()#endif#ifndef kScreenW#define kScreenW CGConstGetScreenSize().width#endif#ifndef kScreenH#define kScreenH CGConstGetScreenSize().height#endif/** 当前屏幕中心点坐标 @return 当前屏幕中心点坐标 */CG_EXTERN CGPoint CGConstGetScreenCenter(void);#ifndef kScreenCenter#define kScreenCenter CGConstGetScreenCenter()#endif#ifndef kScreenCenterX#define kScreenCenterX (0.5 * kScreenW)#endif#ifndef kScreenCenterY#define kScreenCenterY (0.5 * kScreenH)#endif/** 状态栏高度 @return 状态栏高度 */CG_EXTERN CGFloat CGConstGetStatusBarHeight(void);#ifndef kStatusBarHeight#define kStatusBarHeight CGConstGetStatusBarHeight()#endif/** 导航栏高度 */CG_EXTERN const CGFloat kNavBarHeight;/** 状态栏+导航栏高度 @return 状态栏+导航栏高度 */CG_EXTERN CGFloat CGConstGetTopBarHeight(void);#ifndef kTopBarHeight#define kTopBarHeight CGConstGetTopBarHeight()#endif/** 底部安全区域高度（iPhone X为34，其他机型为0） @return 底部安全区域高度（iPhone X为34，其他机型为0） */CG_EXTERN CGFloat CGConstGetScreenBottomSafeAreaHeight(void);#ifndef kScreenBottomSafeAreaHeight#define kScreenBottomSafeAreaHeight CGConstGetScreenBottomSafeAreaHeight()#endif/** tabbar高度 @return tabbar高度 */CG_EXTERN CGFloat CGConstGetTabBarHeight(void);#ifndef kTabBarHeight#define kTabBarHeight CGConstGetTabBarHeight()#endif/** 系统弹窗的宽度 */CG_EXTERN const CGFloat kAlertViewWidth;取值范围12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091929394#pragma mark 取值范围类型定义/** Float类型的取值范围（最小值，最大值） */struct AXFloatRange&#123; CGFloat minValue; CGFloat maxValue;&#125;;typedef struct AXFloatRange AXFloatRange;/** NSUInteger类型的取值范围（最小值，最大值） */struct AXIntegerRange &#123; NSInteger minValue; NSInteger maxValue;&#125;;typedef struct AXIntegerRange AXIntegerRange;/** NSUInteger类型的取值范围（最小值，最大值） */struct AXUIntegerRange &#123; NSUInteger minValue; NSUInteger maxValue;&#125;;typedef struct AXUIntegerRange AXUIntegerRange;#pragma mark 取值范围创建/** 产生一个Float取值范围 @param minValue 最小Float值 @param maxValue 最大Float值 @return Float范围 */CG_EXTERN AXFloatRange AXFloatRangeMake(CGFloat minValue, CGFloat maxValue);/** 产生一个NSInteger取值范围 @param minValue 最小NSInteger值 @param maxValue 最大NSInteger值 @return 长度范围 */CG_EXTERN AXIntegerRange AXIntegerRangeMake(NSInteger minValue, NSInteger maxValue);/** 产生一个NSUInteger取值范围 @param minValue 最小NSUInteger值 @param maxValue 最大NSUInteger值 @return 长度范围 */CG_EXTERN AXUIntegerRange AXUIntegerRangeMake(NSUInteger minValue, NSUInteger maxValue);#pragma mark 确保值的范围/** 确保值在某个范围内 @param value 初始值 @param minValue 最小值 @param maxValue 最大值 @return 最终值 */CG_EXTERN NSNumber *AXMakeNumberInRange(NSNumber *value, NSNumber *minValue, NSNumber *maxValue);#pragma mark 判断值是否在范围内/** 值是否在某个范围内 @param value 要判断的值 @param minValue 最小值 @param maxValue 最大值 @return 是否在[最小值,最大值]范围内 */CG_EXTERN BOOL AXNumberContainedInRange(NSNumber *value, NSNumber *minValue, NSNumber *maxValue);随机值1234567891011121314151617/** 产生一个随机的CGFloat数 @param minValue 最小值 @param maxValue 最大值 @return 随机的CGFloat */CG_EXTERN CGFloat AXRandomFloatInRange(CGFloat minValue, CGFloat maxValue);/** 产生一个随机的NSInteger数 @param minValue 最小值 @param maxValue 最大值 @return 随机的NSInteger */CG_EXTERN NSInteger AXRandomIntegerInRange(NSInteger minValue, NSInteger maxValue);本文最后更新于：2018-10-17 星期三评论var GUEST_INFO=[\"nick\",\"mail\",\"link\"],guest_info=\"nick,mail,link\".split(\",\").filter(function(i){return-1"},{"title":"","date":"2019-01-23T05:51:04.771Z","updated":"2019-01-23T05:51:04.771Z","comments":true,"path":"wiki/axkit/dictionary.html","permalink":"https://singularityzed.github.io/wiki/axkit/dictionary.html","excerpt":"","text":"AXKit | xaoxuuVue.config.productionTip=!1,window.PAGE_TYPE=\"AXKit\"AXKit xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件AXKitAXKitImage ViewBundleColorDictionaryViewApplicationCore GraphicsControlErrorDateGCDImageEmailBar Button ItemLayerObjectNavigationStatus BarRuntimeResponderAlertStringTabBar ControllerTimerUser DefaultsTableTheme更新日志Dictionary创建1234567/** 根据json字符串创建字典 @param string json字符串 @return 字典 */+ (instancetype)dictionaryWithJsonString:(NSString *)string;解析123456789101112131415161718- (NSDictionary *)dictionaryValueForKey:(NSString *)key;- (NSArray *)arrayValueForKey:(NSString *)key;- (NSString *)stringValueForKey:(NSString *)key;- (NSNumber *)numberValueForKey:(NSString *)key;- (double)doubleValueForKey:(NSString *)key;- (float)floatValueForKey:(NSString *)key;- (NSInteger)integerValueForKey:(NSString *)key;- (NSInteger)intValueForKey:(NSString *)key;- (BOOL)boolValueForKey:(NSString *)key;本文最后更新于：2018-10-17 星期三评论var GUEST_INFO=[\"nick\",\"mail\",\"link\"],guest_info=\"nick,mail,link\".split(\",\").filter(function(i){return-1"},{"title":"","date":"2019-01-23T05:51:04.772Z","updated":"2019-01-23T05:51:04.772Z","comments":true,"path":"wiki/axkit/error.html","permalink":"https://singularityzed.github.io/wiki/axkit/error.html","excerpt":"","text":"AXKit | xaoxuuVue.config.productionTip=!1,window.PAGE_TYPE=\"AXKit\"AXKit xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件AXKitAXKitImage ViewBundleColorDictionaryViewApplicationCore GraphicsControlErrorDateGCDImageEmailBar Button ItemLayerObjectNavigationStatus BarRuntimeResponderAlertStringTabBar ControllerTimerUser DefaultsTableTheme更新日志Error创建1234567/** 快速创建一个error @param maker error构造器 @return error */+ (instancetype)ax_errorWithMaker:(void (^)(NSErrorMaker *error))maker;NSErrorMaker12345678910111213141516171819@interface NSErrorMaker : NSObject// @xaoxuu: NSErrorDomain@property (copy, nonatomic) NSErrorDomain domain;// @xaoxuu: error code@property (assign, nonatomic) NSInteger code;// @xaoxuu: description@property (copy, nonatomic) NSString *localizedDescription;// @xaoxuu: reason@property (copy, nonatomic) NSString *localizedFailureReason;// @xaoxuu: LocalizedRecoverySuggestion@property (copy, nonatomic) NSString *localizedRecoverySuggestion;// @xaoxuu: localizedRecoveryOptions@property (copy, nonatomic) NSMutableArray&lt;NSString *&gt; *localizedRecoveryOptions;@end本文最后更新于：2018-10-17 星期三评论var GUEST_INFO=[\"nick\",\"mail\",\"link\"],guest_info=\"nick,mail,link\".split(\",\").filter(function(i){return-1"},{"title":"","date":"2019-01-23T05:51:04.774Z","updated":"2019-01-23T05:51:04.774Z","comments":true,"path":"wiki/axkit/image.html","permalink":"https://singularityzed.github.io/wiki/axkit/image.html","excerpt":"","text":"AXKit | xaoxuuVue.config.productionTip=!1,window.PAGE_TYPE=\"AXKit\"AXKit xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件AXKitAXKitImage ViewBundleColorDictionaryViewApplicationCore GraphicsControlErrorDateGCDImageEmailBar Button ItemLayerObjectNavigationStatus BarRuntimeResponderAlertStringTabBar ControllerTimerUser DefaultsTableTheme更新日志Image创建纯色图片12345678910/** 创建一个纯色图片 @param color 颜色 @param size 尺寸 @param alpha alpha值 @return 图片 */CG_EXTERN UIImage *UIImageGetPureColorImage(UIColor *color, CGSize size, CGFloat alpha);将view转换成图片1234567/** 将view转换成图片 @param view view @return 图片 */CG_EXTERN UIImage *UIImageFromView(UIView *view);读取图片12345678910111213141516171819202122232425/** 从assets里读取图片 @param name 图片名 @return 图片 */CG_EXTERN UIImage * _Nullable UIImageNamed(NSString *name);/** 从bundle中读取图片（自动加.png/.jpg/.jpeg扩展名） @param name 图片名 @return 图片 */CG_EXTERN UIImage * _Nullable UIImageWithBundleImageName(NSString *name);/** 从bundle中读取若干图片 @param name 图片名（image,不含序号） @param count 图片数量 @return 图片&lt;image0,image1,image2, ...&gt; */CG_EXTERN NSArray&lt;UIImage *&gt; * _Nullable UIImagesWithBundleImageNames(NSString *name, NSUInteger count);剪裁12345678910111213/** 把图片剪裁为正方形 @return 图片 */CG_EXTERN UIImage *UIImageGetSquareImage(UIImage *image);/** 把图片剪裁为圆形 @return 图片 */CG_EXTERN UIImage *UIImageGetRoundedImage(UIImage *image);模糊12345678910111213141516/** 毛玻璃效果 @param ratio 毛玻璃效果指数 @return 毛玻璃效果处理后的图片 */CG_EXTERN UIImage *UIImageGetBlurredImage(UIImage *image, CGFloat ratio);/** 异步绘制毛玻璃效果 @param ratio 毛玻璃效果指数 @param completion 处理完成的回调 */CG_EXTERN void UIImageBlurImageAsync(UIImage *image, CGFloat ratio, void (^completion)(UIImage *image));缩放12345678910111213141516171819202122232425262728/** 等比缩放 @param image 图片 @param ratio 比例 @return 缩放后的图片 */CG_EXTERN UIImage *UIImageNonInterpolatedScaleWithRatio(UIImage *image, CGFloat ratio);/** 缩放到某个长度 @param image 图片 @param length 边长 @return 缩放后的图片 */CG_EXTERN UIImage *UIImageNonInterpolatedScaleWithLength(UIImage *image, CGFloat length);/** 缩放到某个长宽比 @param image 图片 @param size 长宽 @return 缩放后的图片 */CG_EXTERN UIImage *UIImageNonInterpolatedScaleWithCGSize(UIImage *image, CGSize size);本文最后更新于：2018-10-17 星期三评论var GUEST_INFO=[\"nick\",\"mail\",\"link\"],guest_info=\"nick,mail,link\".split(\",\").filter(function(i){return-1"},{"title":"","date":"2019-01-23T05:51:04.773Z","updated":"2019-01-23T05:51:04.773Z","comments":true,"path":"wiki/axkit/gcd.html","permalink":"https://singularityzed.github.io/wiki/axkit/gcd.html","excerpt":"","text":"AXKit | xaoxuuVue.config.productionTip=!1,window.PAGE_TYPE=\"AXKit\"AXKit xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件AXKitAXKitImage ViewBundleColorDictionaryViewApplicationCore GraphicsControlErrorDateGCDImageEmailBar Button ItemLayerObjectNavigationStatus BarRuntimeResponderAlertStringTabBar ControllerTimerUser DefaultsTableTheme更新日志GCDtoken1234/** 操作口令 */typedef __nonnull id &lt;NSObject, NSCopying&gt; ax_dispatch_operation_t;可取消的dispatch_after123456789/** 可取消的延迟函数 @param delay 延迟时间 @param queue 线程 @param block 要执行的block @return 操作口令（用于取消此操作） */FOUNDATION_EXTERN ax_dispatch_operation_t ax_dispatch_cancellable(NSTimeInterval delay, dispatch_queue_t queue, void (^block)(void));拥有冷却机制的dispatch123456789101112/** 拥有冷却机制的dispatch（可取消） @param delay 延迟时间 @param cooldown 冷却时间 @param token 冷却计时的token，如果相同，则共享冷却时间 @param queue 指定线程 @param block 要执行的block @param block_cooling 如果在冷却中要执行的block @return 操作口令（用于取消此操作） */FOUNDATION_EXTERN ax_dispatch_operation_t ax_dispatch_cooldown(NSTimeInterval delay, NSTimeInterval cooldown,id token, dispatch_queue_t queue, void (^block)(void), void (^ __nullable block_cooling)(void));取消操作123456/** 取消操作 @param token 操作口令 */FOUNDATION_EXTERN void ax_dispatch_cancel_operation(ax_dispatch_operation_t token);本文最后更新于：2018-10-17 星期三评论var GUEST_INFO=[\"nick\",\"mail\",\"link\"],guest_info=\"nick,mail,link\".split(\",\").filter(function(i){return-1"},{"title":"","date":"2019-01-23T05:51:04.774Z","updated":"2019-01-23T05:51:04.774Z","comments":true,"path":"wiki/axkit/image_view.html","permalink":"https://singularityzed.github.io/wiki/axkit/image_view.html","excerpt":"","text":"AXKit | xaoxuuVue.config.productionTip=!1,window.PAGE_TYPE=\"AXKit\"AXKit xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件AXKitAXKitImage ViewBundleColorDictionaryViewApplicationCore GraphicsControlErrorDateGCDImageEmailBar Button ItemLayerObjectNavigationStatus BarRuntimeResponderAlertStringTabBar ControllerTimerUser DefaultsTableTheme更新日志Image View创建1234567/** 根据image名创建一个imgage view @param name image名 @return image view */CG_EXTERN UIImageView *UIImageViewWithImageNamed(NSString *name);从指定CGPoint获取UIColor1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556#pragma mark 推荐用于圆形取色板/** 从圆形范围内的指定点获取UIColor对象，并在block中执行操作 @param point 指定坐标点 @param completion 取色完成后执行的block */CG_EXTERN void UIImageViewGetColorFromCircle(UIImageView *imageView, CGPoint point, void(^completion)(UIColor *color));/** 从圆形范围内的指定点获取RGBA值，并在block中执行操作 @param point 指定坐标点 @param completion 取色完成后执行的block */CG_EXTERN void UIImageViewGetRGBAFromCircle(UIImageView *imageView, CGPoint point, void(^completion)(CGFloat red,CGFloat green,CGFloat blue,CGFloat alpha));#pragma mark 推荐用于方形取色板/** 从指定点获取UIColor对象，并在block中执行操作 @param point 指定坐标点 @param completion 取色完成后执行的block */CG_EXTERN void UIImageViewGetColor(UIImageView *imageView, CGPoint point, void(^completion)(UIColor *color));/** 从指定点获取RGBA值，并在block中执行操作 @param point 指定坐标点 @param completion 取色完成后执行的block */CG_EXTERN void UIImageViewGetRGBA(UIImageView *imageView, CGPoint point, void(^completion)(CGFloat red,CGFloat green,CGFloat blue,CGFloat alpha));#pragma mark 返回值可空，操作繁琐，不推荐用/** 从指定点获取UIColor对象（最原始最暴力的方法，不推荐用） @param point 指定坐标点 @return UIColor对象（可空） */CG_EXTERN UIColor *UIImageViewGetColorWithPoint(UIImageView *imageView, CGPoint point);/** 从指定点获取RGBA值（最原始最暴力的方法，不推荐用） @param red red @param green green @param blue blue @param alpha alpha @param point 指定坐标点 */CG_EXTERN void UIImageViewGetRGBAWithPoint(UIImageView *imageView, CGPoint point, CGFloat *red, CGFloat *green, CGFloat *blue, CGFloat *alpha);读取图片12345678910111213141516171819202122232425/** 从assets里读取图片 @param name 图片名 @return 图片 */CG_EXTERN UIImage * _Nullable UIImageNamed(NSString *name);/** 从bundle中读取图片（自动加.png/.jpg/.jpeg扩展名） @param name 图片名 @return 图片 */CG_EXTERN UIImage * _Nullable UIImageWithBundleImageName(NSString *name);/** 从bundle中读取若干图片 @param name 图片名（image,不含序号） @param count 图片数量 @return 图片&lt;image0,image1,image2, ...&gt; */CG_EXTERN NSArray&lt;UIImage *&gt; * _Nullable UIImagesWithBundleImageNames(NSString *name, NSUInteger count);剪裁12345678910111213/** 把图片剪裁为正方形 @return 图片 */CG_EXTERN UIImage *UIImageGetSquareImage(UIImage *image);/** 把图片剪裁为圆形 @return 图片 */CG_EXTERN UIImage *UIImageGetRoundedImage(UIImage *image);模糊12345678910111213141516/** 毛玻璃效果 @param ratio 毛玻璃效果指数 @return 毛玻璃效果处理后的图片 */CG_EXTERN UIImage *UIImageGetBlurredImage(UIImage *image, CGFloat ratio);/** 异步绘制毛玻璃效果 @param ratio 毛玻璃效果指数 @param completion 处理完成的回调 */CG_EXTERN void UIImageBlurImageAsync(UIImage *image, CGFloat ratio, void (^completion)(UIImage *image));缩放12345678910111213141516171819202122232425262728/** 等比缩放 @param image 图片 @param ratio 比例 @return 缩放后的图片 */CG_EXTERN UIImage *UIImageNonInterpolatedScaleWithRatio(UIImage *image, CGFloat ratio);/** 缩放到某个长度 @param image 图片 @param length 边长 @return 缩放后的图片 */CG_EXTERN UIImage *UIImageNonInterpolatedScaleWithLength(UIImage *image, CGFloat length);/** 缩放到某个长宽比 @param image 图片 @param size 长宽 @return 缩放后的图片 */CG_EXTERN UIImage *UIImageNonInterpolatedScaleWithCGSize(UIImage *image, CGSize size);本文最后更新于：2018-10-17 星期三评论var GUEST_INFO=[\"nick\",\"mail\",\"link\"],guest_info=\"nick,mail,link\".split(\",\").filter(function(i){return-1"},{"title":"","date":"2019-01-23T05:51:04.775Z","updated":"2019-01-23T05:51:04.775Z","comments":true,"path":"wiki/axkit/index.html","permalink":"https://singularityzed.github.io/wiki/axkit/index.html","excerpt":"","text":"AXKit | xaoxuuVue.config.productionTip=!1,window.PAGE_TYPE=\"AXKit\"AXKit xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件AXKitAXKitImage ViewBundleColorDictionaryViewApplicationCore GraphicsControlErrorDateGCDImageEmailBar Button ItemLayerObjectNavigationStatus BarRuntimeResponderAlertStringTabBar ControllerTimerUser DefaultsTableTheme更新日志AXKit这是一个综合型的开发工具包，包含对系统类的功能扩展和一些常用控件的封装。使用AXKit，你可以很大程度上简化一些系统方法的调用，例如：使用block的方式创建一个UI控件并为其添加事件响应或者手势； 使用链式语法进行字符串操作、沙盒文件存取和编辑操作、日期修改操作；万能控制器跳转（push/pop到任意层级的VC、跳转到指定文件名的VC）。 提供了代码冷却函数，一段时间内不会重复执行。内置了简单的主题框架、自定义状态栏、消息弹窗控件等UI模块。适用对象iOS 开发者示例应用截止目前，已有30+应用程序使用了AXKitHeart MateHitFitLinkSmartFIYTA WareNuband-iNuband Flash HRUSA PRO Active TouchKarrimor EXCELEcoBeat安装在Podfile中添加 pod &#39;AXKit&#39; 。执行 pod install 或者 pod update 。导入头文件 &lt;AXKit/AXKit.h&gt; 。源码源码本文最后更新于：2019-01-02 星期三评论var GUEST_INFO=[\"nick\",\"mail\",\"link\"],guest_info=\"nick,mail,link\".split(\",\").filter(function(i){return-1"},{"title":"","date":"2019-01-23T05:51:04.776Z","updated":"2019-01-23T05:51:04.776Z","comments":true,"path":"wiki/axkit/navigation.html","permalink":"https://singularityzed.github.io/wiki/axkit/navigation.html","excerpt":"","text":"AXKit | xaoxuuVue.config.productionTip=!1,window.PAGE_TYPE=\"AXKit\"AXKit xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件AXKitAXKitImage ViewBundleColorDictionaryViewApplicationCore GraphicsControlErrorDateGCDImageEmailBar Button ItemLayerObjectNavigationStatus BarRuntimeResponderAlertStringTabBar ControllerTimerUser DefaultsTableTheme更新日志Navigationpush到指定name的控制器123456789101112131415/** push到指定name的控制器，animated为YES @param vcName VC的name */- (void)ax_pushViewControllerNamed:(NSString *)vcName;/** push到指定name的控制器 @param vcName VC的name @param animated 是否显示动画 @param completion 完成后的回调 @param failure 失败时的错误信息（不存在或者self不属于NavController） */- (void)ax_pushViewControllerNamed:(NSString *)vcName animated:(BOOL)animated completion:(void (^)(UIViewController *targetVC))completion failure:(void (^)(NSError *error))failure;pop到指定viewController123456789101112131415/** pop到指定viewController @param index 从rootVC开始向后数的index，rootVC为0 @param animated 是否显示动画 */- (void)ax_popToViewControllerWithIndexFromRoot:(NSUInteger)index animated:(BOOL)animated;/** pop到指定viewController @param index 从当前viewController开始向前数的index，当前VC为0 @param animated 是否显示动画 */- (void)ax_popToViewControllerWithIndexFromSelf:(NSUInteger)index animated:(BOOL)animated;UINavigationBar1234/** 隐藏系统自带的分割线 */- (void)ax_hideSeparator;UINavigationItem12345678910/** 隐藏返回按钮的标题 */- (void)ax_hideBackBarButtonTitle;/** 隐藏返回按钮（同时也不能右划返回） */- (void)ax_hideBackBarButton;UITabBar1234/** 隐藏系统自带的分割线 */- (void)ax_hideSeparator;本文最后更新于：2018-10-17 星期三评论var GUEST_INFO=[\"nick\",\"mail\",\"link\"],guest_info=\"nick,mail,link\".split(\",\").filter(function(i){return-1"},{"title":"","date":"2019-01-23T05:51:04.777Z","updated":"2019-01-23T05:51:04.777Z","comments":true,"path":"wiki/axkit/object.html","permalink":"https://singularityzed.github.io/wiki/axkit/object.html","excerpt":"","text":"AXKit | xaoxuuVue.config.productionTip=!1,window.PAGE_TYPE=\"AXKit\"AXKit xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件AXKitAXKitImage ViewBundleColorDictionaryViewApplicationCore GraphicsControlErrorDateGCDImageEmailBar Button ItemLayerObjectNavigationStatus BarRuntimeResponderAlertStringTabBar ControllerTimerUser DefaultsTableTheme更新日志Object获取所有子类123456/** 获取所有子类 @return 所有子类 */+ (NSArray *)ax_allSubclasses;实现：123456789101112131415161718+ (NSArray *)ax_allSubclasses&#123; NSMutableArray *subclasses = [NSMutableArray array]; unsigned int numOfClasses; Class *classes = objc_copyClassList(&amp;numOfClasses); for (unsigned int ci = 0; ci &lt; numOfClasses; ci++) &#123; Class superClass = classes[ci]; do&#123; superClass = class_getSuperclass(superClass); &#125; while (superClass &amp;&amp; superClass != self); if (superClass) &#123; [subclasses addObject: classes[ci]]; &#125; &#125; free(classes); return subclasses;&#125;本文最后更新于：2018-10-17 星期三评论var GUEST_INFO=[\"nick\",\"mail\",\"link\"],guest_info=\"nick,mail,link\".split(\",\").filter(function(i){return-1"},{"title":"","date":"2019-01-23T05:51:04.780Z","updated":"2019-01-23T05:51:04.780Z","comments":true,"path":"wiki/axkit/tabbar_controller.html","permalink":"https://singularityzed.github.io/wiki/axkit/tabbar_controller.html","excerpt":"","text":"AXKit | xaoxuuVue.config.productionTip=!1,window.PAGE_TYPE=\"AXKit\"AXKit xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件AXKitAXKitImage ViewBundleColorDictionaryViewApplicationCore GraphicsControlErrorDateGCDImageEmailBar Button ItemLayerObjectNavigationStatus BarRuntimeResponderAlertStringTabBar ControllerTimerUser DefaultsTableTheme更新日志TabBar Controller全部接口1234567891011121314151617181920212223242526272829303132333435363738394041424344454647/** 导航栏基类名 如果使用系统提供的UINavigationController而不进行继承，可以不实现此方法。 @return 导航栏基类名 */- (NSString *)classNameForBaseNavigationController;/** 配置文件路径 如果使用与本类同名的json文件作为配置文件时，可以不实现此方法 @return 配置文件路径 */- (NSString *)configurationFilePath;/** 自定义配置文件中ViewController的类名的key值，默认是\"vc\" 如果使用默认值\"vc\"，可以不实现此方法 @return 配置文件中ViewController的name的key值，默认是\"vc\" */- (NSString *)configurationKeyForViewControllerName;/** 自定义配置文件中ViewController的类名的key值，默认是\"title\" 如果使用默认值\"title\"，可以不实现此方法 @return 配置文件中ViewController的title的key值，默认是\"title\" */- (NSString *)configurationKeyForViewControllerTitle;/** 自定义配置文件中icon的key值，默认是\"icon\" 如果使用默认值\"icon\"，可以不实现此方法 @return 配置文件中icon的key值，默认是\"icon\" */- (NSString *)configurationKeyForTabBarIconName;/** 自定义配置文件中选中状态的icon的key值，默认是\"icon_sel\" 如果使用默认值\"icon_sel\"，可以不实现此方法 @return 配置文件中选中状态的icon的key值，默认是\"icon_sel\" */- (NSString *)configurationKeyForTabBarSelectedIconName;本文最后更新于：2018-10-17 星期三评论var GUEST_INFO=[\"nick\",\"mail\",\"link\"],guest_info=\"nick,mail,link\".split(\",\").filter(function(i){return-1"},{"title":"","date":"2019-01-23T05:51:04.775Z","updated":"2019-01-23T05:51:04.775Z","comments":true,"path":"wiki/axkit/layer.html","permalink":"https://singularityzed.github.io/wiki/axkit/layer.html","excerpt":"","text":"AXKit | xaoxuuVue.config.productionTip=!1,window.PAGE_TYPE=\"AXKit\"AXKit xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件AXKitAXKitImage ViewBundleColorDictionaryViewApplicationCore GraphicsControlErrorDateGCDImageEmailBar Button ItemLayerObjectNavigationStatus BarRuntimeResponderAlertStringTabBar ControllerTimerUser DefaultsTableTheme更新日志Layer圆角1234/** 剪裁成圆形（适用用于头像） */- (void)ax_maskToCircle;阴影12345678910111213141516171819202122232425262728293031323334/** 阴影效果枚举 @param shadow 阴影效果枚举 */- (void)ax_shadow:(LayerShadow)shadow;/** 设置圆角和阴影 @param cornerRadius 圆角半径 @param shadow 阴影枚举 */- (void)ax_cornerRadius:(CGFloat)cornerRadius shadow:(LayerShadow)shadow;/** 自定义阴影 @param opacity 透明度 @param radius 半径 @param offset 偏移 */- (void)ax_customShadowWithOpacity:(CGFloat)opacity radius:(CGFloat)radius offset:(CGSize)offset;/** 自定义阴影 @param opacity 透明度 @param radius 半径 @param offset 偏移 @param color 颜色 @param path 路径 */- (void)ax_customShadowWithOpacity:(CGFloat)opacity radius:(CGFloat)radius offset:(CGSize)offset color:(UIColor *)color path:(CGPathRef)path;边框123456789101112131415/** 设置白色边框 @param width 边框宽度 */- (void)ax_whiteBorder:(CGFloat)width;/** 设置边框 @param width 边框宽度 @param color 边框颜色 */- (void)ax_borderWidth:(CGFloat)width color:(UIColor *)color;动画12345678910111213141516171819202122/** 颜色渐变动画 @param color 颜色 @param duration 持续时间 @param repeatDuration 重复时间 */- (void)ax_animatedColor:(UIColor *)color duration:(CFTimeInterval)duration repeatDuration:(CFTimeInterval)repeatDuration;/** 颜色渐变动画 @param color 颜色 @param duration 持续时间 @param repeatCount 重复次数 */- (void)ax_animatedColor:(UIColor *)color duration:(CFTimeInterval)duration repeatCount:(float)repeatCount;/** 清除颜色渐变动画 */- (void)ax_removeColorAnimation;本文最后更新于：2018-10-17 星期三评论var GUEST_INFO=[\"nick\",\"mail\",\"link\"],guest_info=\"nick,mail,link\".split(\",\").filter(function(i){return-1"},{"title":"","date":"2019-01-23T05:51:04.778Z","updated":"2019-01-23T05:51:04.778Z","comments":true,"path":"wiki/axkit/runtime.html","permalink":"https://singularityzed.github.io/wiki/axkit/runtime.html","excerpt":"","text":"AXKit | xaoxuuVue.config.productionTip=!1,window.PAGE_TYPE=\"AXKit\"AXKit xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件AXKitAXKitImage ViewBundleColorDictionaryViewApplicationCore GraphicsControlErrorDateGCDImageEmailBar Button ItemLayerObjectNavigationStatus BarRuntimeResponderAlertStringTabBar ControllerTimerUser DefaultsTableTheme更新日志Runtime交换方法123456789101112131415161718/** 交换类方法的实现 @param cls 类 @param selector1 类方法1 @param selector2 类方法2 */+ (void)exchangeClassMethodImplementations:(Class)cls selector1:(SEL)selector1 selector2:(SEL)selector2;/** 交换实例方法的实现 @param cls 类 @param selector1 实例方法1 @param selector2 实例方法2 */+ (void)exchangeInstanceMethodImplementations:(Class)cls selector1:(SEL)selector1 selector2:(SEL)selector2;本文最后更新于：2018-10-17 星期三评论var GUEST_INFO=[\"nick\",\"mail\",\"link\"],guest_info=\"nick,mail,link\".split(\",\").filter(function(i){return-1"},{"title":"","date":"2019-01-23T05:51:04.777Z","updated":"2019-01-23T05:51:04.777Z","comments":true,"path":"wiki/axkit/responder.html","permalink":"https://singularityzed.github.io/wiki/axkit/responder.html","excerpt":"","text":"AXKit | xaoxuuVue.config.productionTip=!1,window.PAGE_TYPE=\"AXKit\"AXKit xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件AXKitAXKitImage ViewBundleColorDictionaryViewApplicationCore GraphicsControlErrorDateGCDImageEmailBar Button ItemLayerObjectNavigationStatus BarRuntimeResponderAlertStringTabBar ControllerTimerUser DefaultsTableTheme更新日志Responder获取根控制器123456/** 根控制器 @return 根控制器 */FOUNDATION_EXTERN UIViewController * _Nullable AXRootViewController(void);本文最后更新于：2018-10-17 星期三评论var GUEST_INFO=[\"nick\",\"mail\",\"link\"],guest_info=\"nick,mail,link\".split(\",\").filter(function(i){return-1"},{"title":"","date":"2019-01-23T05:51:04.778Z","updated":"2019-01-23T05:51:04.778Z","comments":true,"path":"wiki/axkit/status_bar.html","permalink":"https://singularityzed.github.io/wiki/axkit/status_bar.html","excerpt":"","text":"AXKit | xaoxuuVue.config.productionTip=!1,window.PAGE_TYPE=\"AXKit\"AXKit xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件AXKitAXKitImage ViewBundleColorDictionaryViewApplicationCore GraphicsControlErrorDateGCDImageEmailBar Button ItemLayerObjectNavigationStatus BarRuntimeResponderAlertStringTabBar ControllerTimerUser DefaultsTableTheme更新日志Status Bar获取实例123456789101112131415#pragma mark - 状态栏/** 获取状态栏（如果要自定义状态栏，建议使用+[getCustomStatusBar]） @return 系统状态栏 */+ (UIView *)getSystemStatusBar;/** 获取可自定义的状态栏 @return 自定义状态栏 */+ (UIView *)getCustomStatusBar;状态栏消息（长文本）12345678910111213141516171819#pragma mark - 状态栏消息（长文本）/** 显示状态栏消息，显示区域为整个状态栏。 可显示长文本，超出屏幕部分会滚动显示。 @param message 消息内容 @param textColor 文本颜色 @param backgroundColor 背景颜色 @param duration 持续时间 @return 消息标签 */+ (UILabel *)showStatusBarMessage:(NSString *)message textColor:(UIColor *)textColor backgroundColor:(UIColor *)backgroundColor duration:(NSTimeInterval)duration;/** 隐藏状态栏消息 */+ (void)hideStatusBarMessage;状态栏消息（6个字符以内）1234567891011121314151617181920#pragma mark - 状态栏消息（6个字符以内）/** 显示状态栏消息，显示区域为系统时间的位置。 超过6个字符则以长文本的显示逻辑执行。 @param progress 百分比进度（0~1） @param textColor 文本颜色 @param backgroundColor 背景颜色 @param duration 持续时间 @return 消息标签 */+ (UILabel *)showStatusBarProgress:(CGFloat)progress textColor:(UIColor *)textColor backgroundColor:(UIColor *)backgroundColor duration:(NSTimeInterval)duration;/** 隐藏状态栏消息 */+ (void)hideStatusBarProgressMessage;本文最后更新于：2018-10-17 星期三评论var GUEST_INFO=[\"nick\",\"mail\",\"link\"],guest_info=\"nick,mail,link\".split(\",\").filter(function(i){return-1"},{"title":"","date":"2019-01-23T05:51:04.780Z","updated":"2019-01-23T05:51:04.780Z","comments":true,"path":"wiki/axkit/table.html","permalink":"https://singularityzed.github.io/wiki/axkit/table.html","excerpt":"","text":"AXKit | xaoxuuVue.config.productionTip=!1,window.PAGE_TYPE=\"AXKit\"AXKit xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件AXKitAXKitImage ViewBundleColorDictionaryViewApplicationCore GraphicsControlErrorDateGCDImageEmailBar Button ItemLayerObjectNavigationStatus BarRuntimeResponderAlertStringTabBar ControllerTimerUser DefaultsTableTheme更新日志Table协议1234567891011121314151617181920212223242526272829303132333435363738394041424344454647/** 导航栏基类名 如果使用系统提供的UINavigationController而不进行继承，可以不实现此方法。 @return 导航栏基类名 */- (NSString *)classNameForBaseNavigationController;/** 配置文件路径 如果使用与本类同名的json文件作为配置文件时，可以不实现此方法 @return 配置文件路径 */- (NSString *)configurationFilePath;/** 自定义配置文件中ViewController的类名的key值，默认是\"vc\" 如果使用默认值\"vc\"，可以不实现此方法 @return 配置文件中ViewController的name的key值，默认是\"vc\" */- (NSString *)configurationKeyForViewControllerName;/** 自定义配置文件中ViewController的类名的key值，默认是\"title\" 如果使用默认值\"title\"，可以不实现此方法 @return 配置文件中ViewController的title的key值，默认是\"title\" */- (NSString *)configurationKeyForViewControllerTitle;/** 自定义配置文件中icon的key值，默认是\"icon\" 如果使用默认值\"icon\"，可以不实现此方法 @return 配置文件中icon的key值，默认是\"icon\" */- (NSString *)configurationKeyForTabBarIconName;/** 自定义配置文件中选中状态的icon的key值，默认是\"icon_sel\" 如果使用默认值\"icon_sel\"，可以不实现此方法 @return 配置文件中选中状态的icon的key值，默认是\"icon_sel\" */- (NSString *)configurationKeyForTabBarSelectedIconName;方法12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455/** 获取数据 @return 数据 */- (AXTableModelType *)model;/** 重新获取数据源 */- (void)reloadDataSource:(void (^)(AXTableModelType *model))completion;/** 重新获取数据源并刷新tableView */- (void)reloadDataSourceAndRefreshTableView;/** 根据索引获取组模型 @param section 组 @return 组模型 */- (AXTableSectionModelType *)modelForSection:(NSInteger)section;/** 根据索引获取row模型 @param indexPath 索引 @return row模型 */- (AXTableRowModelType *)modelForRowAtIndexPath:(NSIndexPath *)indexPath;/** 删除某一行 @param indexPath 索引 */- (void)deleteCellWithIndexPath:(NSIndexPath *)indexPath;/** 从bundle中加载数据源（需要与本类同名的json文件） @return 数据源 */- (nullable AXTableModelType *)loadDataSourceFromBundle;/** 从指定路径加载数据源 @param path 路径 @return 数据源 */- (nullable AXTableModelType *)loadDataSourceFromPath:(NSString *)path;本文最后更新于：2018-10-17 星期三评论var GUEST_INFO=[\"nick\",\"mail\",\"link\"],guest_info=\"nick,mail,link\".split(\",\").filter(function(i){return-1"},{"title":"","date":"2019-01-23T05:51:04.781Z","updated":"2019-01-23T05:51:04.781Z","comments":true,"path":"wiki/axkit/theme.html","permalink":"https://singularityzed.github.io/wiki/axkit/theme.html","excerpt":"","text":"AXKit | xaoxuuVue.config.productionTip=!1,window.PAGE_TYPE=\"AXKit\"AXKit xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件AXKitAXKitImage ViewBundleColorDictionaryViewApplicationCore GraphicsControlErrorDateGCDImageEmailBar Button ItemLayerObjectNavigationStatus BarRuntimeResponderAlertStringTabBar ControllerTimerUser DefaultsTableTheme更新日志Themecolor12345678910111213141516171819202122/** background color */@property (strong, nonatomic) UIColor *background;/** theme color */@property (strong, nonatomic) UIColor *theme;/** accent color */@property (strong, nonatomic) UIColor *accent;/** 组tableview背景色 */@property (strong, nonatomic) UIColor *groupTableViewBackground;/** 分割线颜色 */@property (strong, nonatomic) UIColor *separatorColor;font1234567891011121314151617181920212223242526272829303132/** 偏好的字号，默认值为系统建议字号：14。 当此数值变更时，custom的字号以相同的比例变更。 */@property (assign, nonatomic) CGFloat prefersFontSize;/** 字体名（为空时是系统字体） */@property (copy, nonatomic) NSString *name;// @xaoxuu: system small = 12@property (strong, readonly, nonatomic) UIFont *systemSmall;// @xaoxuu: system normal = 14@property (strong, readonly, nonatomic) UIFont *systemNormal;// @xaoxuu: normal@property (strong, readonly, nonatomic) UIFont *customSmall;@property (strong, readonly, nonatomic) UIFont *customBoldSmall;// @xaoxuu: normal@property (strong, readonly, nonatomic) UIFont *customNormal;@property (strong, readonly, nonatomic) UIFont *customBoldNormal;// @xaoxuu: normal@property (strong, readonly, nonatomic) UIFont *customLarge;@property (strong, readonly, nonatomic) UIFont *customBoldLarge;- (UIFont *)fontWithCustomPrefersFontSize:(CGFloat)size;- (UIFont *)boldFontWithCustomPrefersFontSize:(CGFloat)size;本文最后更新于：2018-10-17 星期三评论var GUEST_INFO=[\"nick\",\"mail\",\"link\"],guest_info=\"nick,mail,link\".split(\",\").filter(function(i){return-1"},{"title":"","date":"2019-01-23T05:51:04.781Z","updated":"2019-01-23T05:51:04.781Z","comments":true,"path":"wiki/axkit/timer.html","permalink":"https://singularityzed.github.io/wiki/axkit/timer.html","excerpt":"","text":"AXKit | xaoxuuVue.config.productionTip=!1,window.PAGE_TYPE=\"AXKit\"AXKit xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件AXKitAXKitImage ViewBundleColorDictionaryViewApplicationCore GraphicsControlErrorDateGCDImageEmailBar Button ItemLayerObjectNavigationStatus BarRuntimeResponderAlertStringTabBar ControllerTimerUser DefaultsTableTheme更新日志Timer创建12345678910111213141516171819/** 创建一个shchedule定时器添加到当前Runloop @param interval 时间间隔 @param repeats 是否重复 @param block 执行的事件 @return 定时器实例 */+ (instancetype)ax_scheduledTimerWithTimeInterval:(NSTimeInterval)interval repeats:(BOOL)repeats usingBlock:(void (^)(NSTimer *timer))block;/** 创建一个shchedule定时器，需要手动添加到指定Runloop @param interval 时间间隔 @param repeats 是否重复 @param block 执行的事件 @return 定时器实例 */+ (instancetype)ax_timerWithTimeInterval:(NSTimeInterval)interval repeats:(BOOL)repeats usingBlock:(void (^)(NSTimer *timer))block;暂停123456/** 暂停定时器 @return 是否成功 */- (BOOL)ax_pause;开启、重启123456/** 开启/重启定时器（从0开始计时）对于非重复型定时器，此方法会使定时器立即生效。 @return 是否成功 */- (BOOL)ax_restart;运行状态123456789101112/** 获取定时器的状态（只适用于重复型定时器） @return 定时器的运行状态（YES: 运行，NO:没有运行） */- (BOOL)ax_isRunning;/** 翻转定时器状态（只适用于重复型定时器） @return 定时器的运行状态（YES: 运行，NO:没有运行） */- (BOOL)ax_turnover;本文最后更新于：2018-10-17 星期三评论var GUEST_INFO=[\"nick\",\"mail\",\"link\"],guest_info=\"nick,mail,link\".split(\",\").filter(function(i){return-1"},{"title":"","date":"2019-01-23T05:51:04.782Z","updated":"2019-01-23T05:51:04.782Z","comments":true,"path":"wiki/axkit/user_defaults.html","permalink":"https://singularityzed.github.io/wiki/axkit/user_defaults.html","excerpt":"","text":"AXKit | xaoxuuVue.config.productionTip=!1,window.PAGE_TYPE=\"AXKit\"AXKit xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件AXKitAXKitImage ViewBundleColorDictionaryViewApplicationCore GraphicsControlErrorDateGCDImageEmailBar Button ItemLayerObjectNavigationStatus BarRuntimeResponderAlertStringTabBar ControllerTimerUser DefaultsTableTheme更新日志User Defaults读取123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185/** 读取object值（不推荐） @param key 键 @return 值 */+ (nullable id)ax_readObjectForKey:(NSString *)key;/** 读取object值（推荐） @param key 键 @param completion 读取成功 @param failure 读取失败（没有值） */+ (void)ax_readObjectForKey:(NSString *)key completion:(void (^)(id object))completion failure:(void (^)(NSError *error))failure;/** 读取BOOL值 @param key 键 @return 值 */+ (BOOL)ax_readBoolForKey:(NSString *)key;/** 读取NSInteger值 @param key 键 @return 值 */+ (NSInteger)ax_readIntegerForKey:(NSString *)key;/** 读取float值 @param key 键 @return 值 */+ (float)ax_readFloatForKey:(NSString *)key;/** 读取double值 @param key 键 @return 值 */+ (double)ax_readDoubleForKey:(NSString *)key;/** 读取CGFloat值 @param key 键 @return 值 */+ (CGFloat)ax_readCGFloatForKey:(NSString *)key;/** 读取NSData值（不推荐） @param key 键 @return 值 */+ (nullable NSData *)ax_readDataForKey:(NSString *)key;/** 读取NSData值（推荐） @param key 键 @param completion 读取成功 @param failure 读取失败（没有值） */+ (void)ax_readDataForKey:(NSString *)key completion:(void (^)(NSData *data))completion failure:(void (^)(NSError *error))failure;/** 读取NSString值（不推荐） @param key 键 @return 值 */+ (nullable NSString *)ax_readStringForKey:(NSString *)key;/** 读取NSString值（推荐） @param key 键 @param completion 读取成功 @param failure 读取失败（没有值） */+ (void)ax_readStringForKey:(NSString *)key completion:(void (^)(NSString *string))completion failure:(void (^)(NSError *error))failure;/** 读取字符串数组（不推荐） @param key 键 @return 值 */+ (nullable NSArray&lt;NSString *&gt; *)ax_readStringArrayForKey:(NSString *)key;/** 读取字符串数组（推荐） @param key 键 @param completion 读取成功 @param failure 读取失败（没有值） */+ (void)ax_readStringArrayForKey:(NSString *)key completion:(void (^)(NSArray&lt;NSString *&gt; *array))completion failure:(void (^)(NSError *error))failure;/** 读取NSArray值（不推荐） @param key 键 @return 值 */+ (nullable NSArray *)ax_readArrayForKey:(NSString *)key;/** 读取NSArray值（推荐） @param key 键 @param completion 读取成功 @param failure 读取失败（没有值） */+ (void)ax_readArrayForKey:(NSString *)key completion:(void (^)(NSArray *array))completion failure:(void (^)(NSError *error))failure;/** 读取NSDictionary值（不推荐） @param key 键 @return 值 */+ (nullable NSDictionary&lt;NSString *, id&gt; *)ax_readDictionaryForKey:(NSString *)key;/** 读取NSDictionary值（推荐） @param key 键 @param completion 读取成功 @param failure 读取失败（没有值） */+ (void)ax_readDictionaryForKey:(NSString *)key completion:(void (^)(NSDictionary *dictionary))completion failure:(void (^)(NSError *error))failure;/** 读取若干字符串值，并组装成NSDictionary @param keys 键 @return 值 */+ (NSDictionary&lt;NSString *, id&gt; *)ax_readDictionaryWithValuesForKeys:(NSArray&lt;NSString *&gt; *)keys;/** 读取URL值（不推荐） @param key 键 @return 值 */+ (nullable NSURL *)ax_readURLForKey:(NSString *)key;/** 读取NSURL值（推荐） @param key 键 @param completion 读取成功 @param failure 读取失败（没有值） */+ (void)ax_readURLForKey:(NSString *)key completion:(void (^)(NSURL *url))completion failure:(void (^)(NSError *error))failure;/** 读取图片（不推荐） @param key 键 @return 值 */+ (nullable UIImage *)ax_readImageForKey:(NSString *)key;/** 读取图片（推荐） @param key 键 @param completion 读取成功 @param failure 读取失败（没有值） */+ (void)ax_readImageForKey:(NSString *)key completion:(void (^)(UIImage *image))completion failure:(void (^)(NSError *error))failure;写入123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175/** 批量保存用户设置，自带synchronize @param action 批量保存用户设置的block */+ (void)ax_caches:(void (^)(NSUserDefaults *defaultUser))action;/** 保存id对象，自带synchronize @param obj 值 @param key 键 */+ (void)ax_setObject:(nullable id)obj forKey:(NSString *)key;/** 保存value，自带synchronize @param value 值 @param key 键 */+ (void)ax_setValue:(nullable id)value forKey:(NSString *)key;/** 保存BOOL值，自带synchronize @param x 值 @param key 键 */+ (void)ax_setBool:(BOOL)x forKey:(NSString *)key;/** 保存NSInteger，自带synchronize @param x 值 @param key 键 */+ (void)ax_setInteger:(NSInteger)x forKey:(NSString *)key;/** 保存float，自带synchronize @param x 值 @param key 键 */+ (void)ax_setFloat:(float)x forKey:(NSString *)key;/** 保存double，自带synchronize @param x 值 @param key 键 */+ (void)ax_setDouble:(double)x forKey:(NSString *)key;/** 保存CGFloat，自带synchronize @param x 值 @param key 键 */+ (void)ax_setCGFloat:(CGFloat)x forKey:(NSString *)key;/** 保存NSData，自带synchronize @param data 值 @param key 键 */+ (void)ax_setData:(nullable NSData *)data forKey:(NSString *)key;/** 保存字符串，自带synchronize @param string 值 @param key 键 */+ (void)ax_setString:(nullable NSString *)string forKey:(NSString *)key;/** 保存字符串数组，自带synchronize @param block 值 @param key 键 */+ (void)ax_setStringArray:(NSArray *(^)(NSArray&lt;NSString *&gt; *cachedArray))block forKey:(NSString *)key;/** 保存数组，自带synchronize @param block 值 @param key 键 */+ (void)ax_setArray:(nullable NSArray *(^)(NSArray *cachedArray))block forKey:(NSString *)key;/** 保存字典，自带synchronize @param block 值 @param key 键 */+ (void)ax_setDictionary:(NSDictionary *(^)(NSMutableDictionary &lt;NSString *, id&gt; * dict))block forKey:(NSString *)key;/** 保存NSURL，自带synchronize @param url 值 @param key 键 */+ (void)ax_setURL:(nullable NSURL *)url forKey:(NSString *)key;/** 保存图片，自带synchronize @param image 图片 @param key 键 */+ (void)ax_setImage:(nullable UIImage *)image forKey:(NSString *)key;/** 批量保存用户设置，自带synchronize @param action 批量保存用户设置的block */- (void)ax_caches:(void (^)(NSUserDefaults *user))action;/** 保存NSData，不带synchronize @param data 值 @param key 键 */- (void)ax_setData:(nullable NSData *)data forKey:(NSString *)key;/** 保存字符串，不带synchronize @param string 值 @param key 键 */- (void)ax_setString:(nullable NSString *)string forKey:(NSString *)key;/** 保存字符串数组，不带synchronize @param block 值 @param key 键 */- (void)ax_setStringArray:(NSArray *(^)(NSArray&lt;NSString *&gt; *cachedArray))block forKey:(NSString *)key;/** 保存数组，不带synchronize @param block 值 @param key 键 */- (void)ax_setArray:(nullable NSArray *(^)(NSArray *cachedArray))block forKey:(NSString *)key;/** 保存字典，不带synchronize @param block 值 @param key 键 */- (void)ax_setDictionary:(NSDictionary *(^)(NSMutableDictionary &lt;NSString *, id&gt; * dict))block forKey:(NSString *)key;/** 保存NSURL，不带synchronize @param url 值 @param key 键 */- (void)ax_setURL:(nullable NSURL *)url forKey:(NSString *)key;删除123456789101112/** 删除用户设置，自带synchronize @param key 键 */+ (void)ax_removeObjectForKey:(NSString *)key;/** 移除默认的[NSUserDefaults standardUserDefaults]的所有配置 */+ (void)ax_removeDefaultPersistentDomain;本文最后更新于：2018-10-17 星期三评论var GUEST_INFO=[\"nick\",\"mail\",\"link\"],guest_info=\"nick,mail,link\".split(\",\").filter(function(i){return-1"},{"title":"","date":"2019-01-23T05:51:04.785Z","updated":"2019-01-23T05:51:04.785Z","comments":true,"path":"wiki/heartmate/index.html","permalink":"https://singularityzed.github.io/wiki/heartmate/index.html","excerpt":"","text":"xaoxuuVue.config.productionTip=!1,window.PAGE_TYPE=\"\" xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件window.location=\"//xaoxuu.com/heartmate/\"本文最后更新于：2018-10-29 星期一评论var GUEST_INFO=[\"nick\",\"mail\",\"link\"],guest_info=\"nick,mail,link\".split(\",\").filter(function(i){return-1"},{"title":"","date":"2019-01-23T05:51:04.782Z","updated":"2019-01-23T05:51:04.782Z","comments":true,"path":"wiki/axkit/view.html","permalink":"https://singularityzed.github.io/wiki/axkit/view.html","excerpt":"","text":"AXKit | xaoxuuVue.config.productionTip=!1,window.PAGE_TYPE=\"AXKit\"AXKit xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件AXKitAXKitImage ViewBundleColorDictionaryViewApplicationCore GraphicsControlErrorDateGCDImageEmailBar Button ItemLayerObjectNavigationStatus BarRuntimeResponderAlertStringTabBar ControllerTimerUser DefaultsTableTheme更新日志View简单动画12345678910111213141516171819202122232425262728293031323334#pragma mark - build in/** build in 动画 @param scale 缩放比例 @param duration 持续时间 @param completion 完成后执行 */- (void)ax_animatedScaleIn:(CGFloat)scale duration:(NSTimeInterval)duration completion:(void (^)(BOOL finished))completion;#pragma mark - action/** 动画 @param scale 缩放比例 @param duration 持续时间 @param completion 完成后执行 */- (void)ax_animatedScale:(CGFloat)scale duration:(NSTimeInterval)duration completion:(void (^)(BOOL finished))completion;#pragma mark - build out/** build out 动画 @param scale 缩放比例 @param duration 持续时间 @param completion 完成后执行 */- (void)ax_animatedScaleOut:(CGFloat)scale duration:(NSTimeInterval)duration completion:(void (^)(BOOL finished))completion;创建一个指定高的view12345678/** 创建一个指定高的view @param height 高度 @return view */CG_EXTERN UIView *UIViewWithHeight(CGFloat height);读取xib1234567/** 从xib加载view @param name xib名 @return view */CG_EXTERN __kindof UIView *UIViewFromNibNamed(NSString *name);对view的layer进行若干操作123456/** 对view的layer进行若干操作 @param layer layer */- (void)ax_layer:(void (^)(CALayer *layer))layer;获取view所在的控制器123456/** 当前view所在的控制器controller @return 控制器controller */- (nullable UIViewController *)controller;Subview123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869/** 移除所有子视图 @param subClass 指定范围（只移除属于哪个类的子视图，传入nil时移除所有子视图） */- (void)ax_removeAllSubviews:(nullable Class)subClass;/** 让每个子视图执行一段代码 @param subClass 指定范围（属于哪个类的子视图，传入nil时代表所有子视图） @param action 子视图所执行的代码块 */- (void)ax_eachSubview:(nullable Class)subClass action:(void (^)(__kindof UIView *subview))action;/** 让每个UILabel执行一段代码 @param action 要执行的代码 */- (void)ax_eachLabelInvokeAction:(void (^)(__kindof UILabel *label))action;/** 让每个UITextField执行一段代码 @param action 要执行的代码 */- (void)ax_eachTextFieldInvokeAction:(void (^)(__kindof UITextField *textField))action;/** 让每个UITextView执行一段代码 @param action 要执行的代码 */- (void)ax_eachTextViewInvokeAction:(void (^)(__kindof UITextView *textView))action;/** 让每个UIButton执行一段代码 @param action 要执行的代码 */- (void)ax_eachButtonInvokeAction:(void (^)(__kindof UIButton *button))action;/** 让每个UIImageView执行一段代码 @param action 要执行的代码 */- (void)ax_eachImageViewInvokeAction:(void (^)(__kindof UIImageView *imageView))action;/** 让每个tag在指定范围的子视图执行一段代码 @param tagRange 指定tag取值范围 @param action 要执行的代码 */- (void)ax_eachSubviewWithTagsInRange:(AXIntegerRange)tagRange action:(void (^)(__kindof UIView *subview))action;/** 让每个tag等于某个值的子视图执行一段代码 @param tag 指定tag值 @param action 要执行的代码 */- (void)ax_eachSubviewWithTag:(NSInteger)tag action:(void (^)(__kindof UIView *subview))action;frame1234567891011121314151617181920212223242526272829303132#pragma mark - property// frame.origin@property (nonatomic, readwrite, assign) CGPoint origin;// frame.size@property (nonatomic, readwrite, assign) CGSize size;// frame.size.width@property (nonatomic, readwrite, assign) CGFloat width;// frame.size.height@property (nonatomic, readwrite, assign) CGFloat height;// frame.origin.x@property (nonatomic, readwrite, assign) CGFloat left;// frame.origin.x + frame.size.width@property (nonatomic, readwrite, assign) CGFloat right;// frame.origin.y@property (nonatomic, readwrite, assign) CGFloat top;// frame.origin.y + frame.size.height@property (nonatomic, readwrite, assign) CGFloat bottom;#pragma mark frame center// frame.origin.x + 0.5 * frame.size.width@property (nonatomic, readwrite, assign) CGFloat centerX;// frame.origin.y + 0.5 * frame.size.height@property (nonatomic, readwrite, assign) CGFloat centerY;#pragma mark bounds center// bounds.center@property (nonatomic, readonly, assign) CGPoint boundsCenter;// 0.5 * frame.size.width@property (nonatomic, readonly, assign) CGFloat boundsCenterX;// 0.5 * frame.size.height@property (nonatomic, readonly, assign) CGFloat boundsCenterY;手势123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687/** 处理tap手势 @param handler 处理手势的block */- (void)ax_addTapGestureHandler:(void (^)(UITapGestureRecognizer *sender))handler;/** 添加一个tap手势，并处理 @param tap tap @param handler 处理手势的block */- (void)ax_addTapGesture:(nullable void (^)(UITapGestureRecognizer *sender))tap handler:(void (^)(UITapGestureRecognizer *sender))handler;/** 添加一个tap手势，并处理，附加动画效果 @param tap tap @param handler 处理手势的block @param scale 动画比例 @param duration 持续时间 */- (void)ax_addTapGesture:(nullable void (^)(UITapGestureRecognizer *sender))tap handler:(void (^)(UITapGestureRecognizer *sender))handler animatedScale:(CGFloat)scale duration:(NSTimeInterval)duration;/** 添加一个双击手势，并处理 @param doubleTap double tap @param duration 双击间隔时间 @param handler 处理手势的block */- (void)ax_addDoubleTapGesture:(nullable void (^)(UITapGestureRecognizer *sender))doubleTap duration:(NSTimeInterval)duration handler:(void (^)(UITapGestureRecognizer *sender))handler;/** 添加一个长按手势，并处理 @param longPress 长按手势 @param handler 处理手势的block */- (void)ax_addLongPressGesture:(nullable void (^)(UILongPressGestureRecognizer *sender))longPress handler:(void (^)(UILongPressGestureRecognizer *sender))handler;/** 添加一个轻扫手势，并处理 @param swipe 轻扫 @param handler 处理手势的block */- (void)ax_addSwipeGesture:(nullable void (^)(UISwipeGestureRecognizer *sender))swipe handler:(void (^)(UISwipeGestureRecognizer *sender))handler;/** 添加一个滑动手势，并处理 @param pan 滑动 @param handler 处理手势的block */- (void)ax_addPanGesture:(nullable void (^)(UIPanGestureRecognizer *sender))pan handler:(void (^)(UIPanGestureRecognizer *sender))handler;/** 添加一个屏幕边缘滑动手势，并处理 @param screenEdgePan 屏幕边缘滑动 @param handler 处理手势的block */- (void)ax_addScreenEdgePanGesture:(nullable void (^)(UIScreenEdgePanGestureRecognizer *sender))screenEdgePan handler:(void (^)(UIScreenEdgePanGestureRecognizer *sender))handler;/** 添加一个双指缩放手势，并处理 @param pinch 双指缩放手势 @param handler 处理手势的block sender.view.transform = CGAffineTransformScale(sender.view.transform, sender.scale, sender.scale); sender.scale = 1; */- (void)ax_addPinchGesture:(nullable void (^)(UIPinchGestureRecognizer *sender))pinch handler:(void (^)(UIPinchGestureRecognizer *sender))handler;/** 添加一个双指旋转手势，并处理 @param rotation 双指旋转手势 @param handler 处理手势的block sender.view.transform = CGAffineTransformRotate(sender.view.transform, sender.rotation); sender.rotation = 0; */- (void)ax_addRotationGesture:(nullable void (^)(UIRotationGestureRecognizer *sender))rotation handler:(void (^)(UIRotationGestureRecognizer *sender))handler;本文最后更新于：2018-10-17 星期三评论var GUEST_INFO=[\"nick\",\"mail\",\"link\"],guest_info=\"nick,mail,link\".split(\",\").filter(function(i){return-1"},{"title":"","date":"2019-01-23T05:51:04.790Z","updated":"2019-01-23T05:51:04.790Z","comments":true,"path":"wiki/material-x/index.html","permalink":"https://singularityzed.github.io/wiki/material-x/index.html","excerpt":"","text":"Material X | xaoxuuVue.config.productionTip=!1,window.PAGE_TYPE=\"Material X\"Material X xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件Material X开始使用基本配置主题样式页面配置第三方服务使用CDN贡献代码更新日志帮助开始使用Material X一个简约卡片式的Hexo博客主题使用卡片设计元素以及交互动效。高度可定制化的侧边栏小部件。使用 fontawesome 5.6.3 免费版图标。支持MobShare分享，自定义分享按钮的icon、图片。支持3种评论系统：Disqus、来必力和Valine评论。（以及基于Valine的 Volantis ）提供主题CDN，也可自定义CDN。方便更换主题色、自定义字体、边距、圆角、阴影等视觉效果。支持APlayer播放器，可以播放网易云、QQ音乐、虾米、酷狗平台以及其它服务器的音乐。针对推荐文章插件进行了布局优化。支持不蒜子阅读统计、百度分析、Google分析。支持渲染MathJax数学公式，优化了渲染效果。针对移动端布局进行了优化。使用 import 字段方便导入各种标签到主题中。使用top: true置顶你最爱的文章！图片预览示例博客我自己的博客：https://xaoxuu.com/blog/（代表最新的、默认的效果）。开源示例博客：https://mxclub.github.io/example/（你可以查看源码）。开源示例博客（暗色主题）：https://mxclub.github.io/example-dark/（你可以查看源码）。进行了非常深度的DIY：@小吴博客。自定义背景、鼠标点击动画、看板娘：@搅拌糖。更多使用MaterialX主题的博客：博客链接MicDZ’s bloghttps://www.micdz.cnMainGuohttps://blog.mainguo.topMark’s bloghttps://mark-thinkpad.gitee.io/blog/gltjkhttps://blog.gltjk.comBFDZhttps://www.bfdz.inkAmblizer’s Mainframehttps://amblizer.xyzDigcorehttps://www.digcore.cn/Sparky_14145’s bloghttps://sparky-14145.github.io/假装偶遇http://jzoy.com/Shan Sanhttps://shansan.top/Lemonohttps://blog.lemono.ink/一个贾程序员https://mofiter.com/Loser007http://www.loser007.com/Tony Ren’s bloghttps://tonyrenhk.github.io/Jason’s Bloghttps://blog.jasonzhang.xyz/yangtao’s bloghttps://istaotao.comZYMINhttps://zymin.cn/wanggang’s bloghttp://wanggang.siteAlicehttps://zhengjiameng.github.io/Radiance Bloghttps://lihaojin.life小肥羊https://lucksheep.github.io/bgzy/香蕉博客https://mi20.top萌焰博客https://yanhuang0815.github.ioZZY’s Bloghttps://www.zzy1991.com/TRHX’S BLOGhttps://trhx.top/Giskardhttps://getschwifty.cn/Residual Nighthttps://residualnight.github.io/weijiajin’s bloghttps://weijiajin.com如果你使用了 Material X 主题，欢迎在下方留言告诉大家，我会抽时间归纳到这里~下载安装提供两种安装方式：脚本和手动，脚本不仅可以安装主题，还可以方便你发布博客，详见@hexo.sh。A. 使用脚本全自动安装（目前仅支持macOS）首先打开终端，cd 到你博客的路径，如果你想省事，复制下面这行脚本到终端中执行，全程自动化操作。1curl -O 'https://raw.githubusercontent.com/xaoxuu/hexo.sh/master/hexo.sh' -# &amp;&amp; chmod 777 hexo.sh &amp;&amp; . hexo.sh -i i x如果你选择了脚本安装，现在可以直接往下看配置项啦~B. 手动安装如果你想手动安装，打开终端，cd 到你博客的路径，下载主题到 themes/ 文件夹：1git clone https://github.com/xaoxuu/hexo-theme-material-x themes/material-x然后安装依赖包：1npm i -S hexo-generator-search hexo-generator-feed hexo-renderer-less hexo-autoprefixer hexo-generator-json-content hexo-recommended-posts hexo-helper-qrcode主题文档主题源码许可协议本主题采用MIT开源许可协议，永久无限制免费使用。MIT开源许可协议被授权人有权利使用、复制、修改、合并、出版发行、散布、再授权及贩售软件及软件的副本。被授权人可根据程式的需要修改授权条款为适当的内容。在软件和软件的所有副本中都必须包含版权声明和许可声明。鸣谢贡献者感谢各位网友提供的反馈、建议与大力支持，有了大家的帮助，主题就会做的越来越好~MicDZgltjkBFDZic3evi1mofiterwushileabsop还要感谢那些在评论中提供了帮助的匿名网友~这里的列表和示例博客列表都是按时间顺序的哦，如果你解决了我这里解决不了的问题，欢迎去GitHub贡献一下代码👏。收录者感谢以下网站的收录与分享，让本主题能够被更多人发现，主题就会做的越来越好~Hexo ThemesValineEasy Hexo文章分享目前已分享至以下网站的文章（不含转载）：作者文章我自己《Material X 一个简约卡片式的 Hexo 博客主题》MicDZ《在material-x上使用KaTeX》把主题分享到SegmenuFault、简书、知乎等平台可以快速增加MaterialX主题被发现和使用的几率，所以如果你喜欢本主题，欢迎写原创文章或者转载分享哦。 文 体 不 限 ！近期活动和计划 提供简便的设置网站图标和头像的字段。 使用hexo-related-popular-posts插件替换原来的推荐文章插件。 小部件的多级分类。 导航栏多级菜单。 提供标题文字居中的样式可供选择。 各级标题颜色可自定义。 考虑提供幻灯片的实现方法。TODO1. pjax寻找完美兼容pjax的解决办法。目前兼容性有点问题，代码在这个分支：pjax。主要存在的问题是：切换了页面后侧边栏的目录不会更新、评论系统不会更新。2. 图片放大预览寻找可以完美实现图片放大预览的方法。这个功能的缺失导致图片无法放大看，也导致了二维码分享只能是在新页面打开图片文件。体验比较糟糕。3. 投票寻找一个可以嵌入文章中的无后端投票插件（或者使用leancloud作为后端）。4. 点赞、评分寻找对文章点赞、评分的无后端插件（或者使用leancloud作为后端）。本文最后更新于：2019-01-21 星期一评论var GUEST_INFO=[\"nick\",\"mail\",\"link\"],guest_info=\"nick,mail,link\".split(\",\").filter(function(i){return-1"},{"title":"","date":"2019-01-23T05:51:04.785Z","updated":"2019-01-23T05:51:04.785Z","comments":true,"path":"wiki/hexo.sh/index.html","permalink":"https://singularityzed.github.io/wiki/hexo.sh/index.html","excerpt":"","text":"Shell Scripts | xaoxuuVue.config.productionTip=!1,window.PAGE_TYPE=\"Shell Scripts\"Shell Scripts xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件Shell Scriptshexo.shpodspec.shvim-cn.shhexo.sh一个方便管理与发布hexo博客的脚本。hexo.sh 可以自动化执行一系列命令，节省时间，例如，cs相当于：12hexo cleanhexo scgd相当于：123456hexo cleanhexo ghexo dgit add --allgit commit -am \"update all\"git push origin下载并安装脚本打开终端，输入这行命令：1curl -s https://xaoxuu.com/install | sh -s hexo.sh如需安装指定版本，在后面加上版本号即可，例如：1curl -s https://xaoxuu.com/install | sh -s hexo.sh 2.0.4启动脚本在终端输入如下命令即可打开脚本：1hexo.sh使用方法在终端输入如下命令即可查看脚本所有支持的指令：1hexo.sh help如果是脚本已经启动（可以看到脚本菜单，处于待输入指令的状态），则只需要输入help，下文其它情景同理。下面是一些常见使用场景：A. 使用脚本快速搭建博客let path = 你想把博客放在哪里，打开终端 cd 到 path 。在终端输入如下命令自动检查并安装所有需要的环境，然后搭建并启动博客：1hexo.sh init脚本会依次执行以下这些操作：检测node.js环境，如果没有就安装。检测hexo环境，如果没有就安装。输入自定义博客名，在当前目录执行初始化。安装Material X主题。安装所有依赖包。注意：安装node.js或者hexo的时候需要输入一次本机密码，别忘了哦。搭建博客的时候你需要输入博客名，其他时间就可以坐和放宽了。B. 使用脚本快速更新博客let path = 你的博客路径，打开终端 cd 到 path 。在终端输入如下命令启动博客：1hexo.sh s然后修改你的文章、博客主题，如果修改了 _config.yml 是需要重新启动博客的，有些参数甚至需要 clean 之后重启才能生效，这时候你只需要在终端脚本【请输入指令】后面输入：1cs就执行hexo clean，然后执行hexo server了。如果你已经修改完毕，需要发布更新，可以在终端脚本【请输入指令】后面输入：1cgd脚本就会执行hexo clean、hexo generate、hexo deploy，然后执行一系列的git命令把源码的更新提交至远程仓库。所有支持的命令这是2.0.3版本中的所有命令，可能未必准确，以脚本中的帮助信息为准。1234567891011121314151617181920212223242526常用: c (clean) 执行 hexo clean s (server) 执行 hexo server g (generate) 执行 hexo generate d (deploy) 执行 hexo deploy cs 执行 c, s 的组合 cg 执行 c, g 的组合 cgd 执行 c, g, d 的组合，然后提交代码安装: i (install) 用于安装的命令，下面是install命令的参数: n (node) 安装node.js环境 h (hexo) 安装hexo环境(npm install hexo-cli -g) b (blog) 搭建博客(hexo init, npm install) d (dependency) 安装依赖包(npm install) x (material-x) 下载并应用【Material-X】主题自动: init 自动检查并安装所有需要的环境，然后搭建并启动博客。👍🏼 xut 下载并运行【Material-X】主题的单元测试。脚本: cd + `path` 选择路径 docs 查看文档(https://xaoxuu.com/wiki/hexo.sh) gh (github) GitHub页面(https://github.com/xaoxuu/hexo.sh) u (update) 更新脚本文件(当前版本：2.0.3)本文最后更新于：2019-01-08 星期二评论var GUEST_INFO=[\"nick\",\"mail\",\"link\"],guest_info=\"nick,mail,link\".split(\",\").filter(function(i){return-1"},{"title":"","date":"2019-01-23T05:52:01.012Z","updated":"2019-01-23T05:51:04.794Z","comments":true,"path":"wiki/nexus/index.html","permalink":"https://singularityzed.github.io/wiki/nexus/index.html","excerpt":"","text":"NEXUS | xaoxuuVue.config.productionTip=!1,window.PAGE_TYPE=\"NEXUS\"NEXUS xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件NEXUS那么，什么是 NEXUS ？简单地说，就如同电脑管家+快捷搜索+激活工具集锦+……NEXUS（魔枢）意为联接、沟通，在《魔兽》里翻译为魔枢，《星际迷航》里翻译为时汇。软件以此为名旨在连通问题与答案，终极目标即输入任何问题或需求，即可一步达到目的，成为一个信息的枢纽。魔枢的方便之处在于：点击屏幕左上角，即可呼出搜索栏，此搜索栏对于一些常用的网站如[优酷]、[淘宝]等等可以直达官网，省去了搜索引擎检索的步骤。左上角热键是透明的，不影响视觉，只有在允许魔枢后台运行时才会生效。遗憾的是：目前，NEXUS只适用于 Windows 7~10 平台的用户。开始使用下载安装包： NEXUS-setup.exe下载扩展包： Extension20160207.exe源码源码已归档！这是一个已经归档的项目，最后一次更新时间是在2017年1月。本文最后更新于：2019-01-02 星期三评论var GUEST_INFO=[\"nick\",\"mail\",\"link\"],guest_info=\"nick,mail,link\".split(\",\").filter(function(i){return-1"},{"title":"","date":"2019-01-23T05:51:04.796Z","updated":"2019-01-23T05:51:04.796Z","comments":true,"path":"wiki/noticeboard/index.html","permalink":"https://singularityzed.github.io/wiki/noticeboard/index.html","excerpt":"","text":"NoticeBoard | xaoxuuVue.config.productionTip=!1,window.PAGE_TYPE=\"NoticeBoard\"NoticeBoard xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件NoticeBoardNoticeBoardNoticeBoard.swiftNotice.swift更新日志NoticeBoard这是一个仿原生UI的消息通知控件。暂时没有图片，demo提供了详细的功能介绍使用方法，赶快下载源码运行demo查看一下效果吧。适用对象iOS 开发者示例应用这是一个仿原生UI的消息通知控件。暂时没有图片，demo提供了详细的功能介绍使用方法，赶快下载源码运行demo查看一下效果吧。Heart Mate源码源码开始使用Add pod &#39;NoticeBoard&#39; to your Podfile.Run pod install or pod update .Import #import &lt;NoticeBoard/NoticeBoard.h&gt; or import NoticeBoard.本文最后更新于：2019-01-02 星期三评论var GUEST_INFO=[\"nick\",\"mail\",\"link\"],guest_info=\"nick,mail,link\".split(\",\").filter(function(i){return-1"},{"title":"","date":"2019-01-23T05:51:04.795Z","updated":"2019-01-23T05:51:04.795Z","comments":true,"path":"wiki/noticeboard/changelog.html","permalink":"https://singularityzed.github.io/wiki/noticeboard/changelog.html","excerpt":"","text":"NoticeBoard | xaoxuuVue.config.productionTip=!1,window.PAGE_TYPE=\"NoticeBoard\"NoticeBoard xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件NoticeBoardNoticeBoardNoticeBoard.swiftNotice.swift更新日志更新日志1.1.2更新日期：2018-08-051. 支持 post 自定义视图12notice.rootViewController?.view.addSubview(myView)NoticeBoard.post(notice)2. 设置了最大宽度，保证了手机横屏和 iPad 上的正常显示效果。1.1.1更新日期：2018-08-021. 便捷的 post 函数2. 修复了在ViewDidLoad 中调用postnotice 失败的问题。1.1更新日期：2018-07-31新增接口1234/// 警示（如果一个notice已经post出来了，想要再次引起用户注意，可以使用此函数）////// - Parameter options: 操作public func alert(options: NoticeAlertOptions = [])例如，常规的：123notice.alert()// 等同于(以正常的速度变暗一次)notice.alert(options: [.normally, .darken, .once])要实现类似于iPhone X左上角的呼吸灯效果，可以这样：1notice.alert(options: [.slowly, .breathing])要强烈而急促地闪烁两次，可以这样：1notice.alert(options: [.fast, .disappear, .twice])删除接口不再通过函数参数形式传递layoutStyle，如需改变布局，可以直接设置NoticeBoard的layoutStyle属性：12345678910111213141516171819// 平铺，默认（所有通知都可见，但是通知过多会超出屏幕）NoticeBoard.shared.layoutStyle = .tileNoticeBoard.shared.post(notice, duration: 2)// 取代旧的通知（旧的采用fade动画淡出）NoticeBoard.shared.layoutStyle = .replaceNoticeBoard.shared.post(notice, duration: 2)// 移除旧的通知（旧的采用moveout动画移出屏幕）NoticeBoard.shared.layoutStyle = .removeNoticeBoard.shared.post(notice, duration: 2)// 覆盖在旧的通知上层（切勿堆积过多）NoticeBoard.shared.layoutStyle = .overlayNoticeBoard.shared.post(notice, duration: 2)// 堆叠（最新的通知会遮挡旧的通知）NoticeBoard.shared.layoutStyle = .stackNoticeBoard.shared.post(notice, duration: 2)1.0.3更新日期：2018-07-23如果一条notice设置了n秒后消失，当用手指拖拽notice时，notice暂停计时，松开手后重新计时。即duration的意义为：n秒没有交互事件就自动消失。1.0.2更新日期：2018-07-15post多次post同一个notice只会推迟remove的时间，不会重复执行post的动作。当notice被移除时发出通知：Notice.didRemoved1.0.1更新日期：2018-07-15新增接口可通过手势移除通知，默认为true1public var allowRemoveByGesture = true改变了设置主题的方式1234// 设置颜色主题notice.themeColor = .init(red: 0.2, green: 0.3, blue: 0.4, alpha: 1)// 模糊背景，和纯色背景可以同时使用notice.blurEffectStyle = .lightaction现在只有调用了actionButtonDidTapped才加载→按钮1234// 设置按钮事件notice.actionButtonDidTapped &#123; (notice, sender) in print(\"点击了'→'按钮\")&#125;1.0更新日期：2018-06-30本文最后更新于：2018-09-25 星期二评论var GUEST_INFO=[\"nick\",\"mail\",\"link\"],guest_info=\"nick,mail,link\".split(\",\").filter(function(i){return-1"},{"title":"","date":"2019-01-23T05:51:04.797Z","updated":"2019-01-23T05:51:04.797Z","comments":true,"path":"wiki/noticeboard/noticeboard.html","permalink":"https://singularityzed.github.io/wiki/noticeboard/noticeboard.html","excerpt":"","text":"NoticeBoard | xaoxuuVue.config.productionTip=!1,window.PAGE_TYPE=\"NoticeBoard\"NoticeBoard xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件NoticeBoardNoticeBoardNoticeBoard.swiftNotice.swift更新日志NoticeBoard.swift用来管理多个Notice视图的管理器，不在视图层级中显示。定义布局样式1234567891011/// 布局样式////// - tile: 平铺，默认（所有通知都可见，但是通知过多会超出屏幕）/// - replace: 取代旧的通知（旧的采用fade动画淡出）/// - remove: 移除旧的通知（旧的采用moveout动画移出屏幕）/// - overlay: 覆盖在旧的通知上层（切勿堆积过多）/// - stack: 堆叠（最新的通知会遮挡旧的通知）public enum LayoutStyle &#123; case tile, replace, remove, overlay, stack&#125;窗口层级123456789101112public enum Level : UIWindowLevel &#123; case low case normal case high case veryHigh internal var stringValue: String &#123; get &#125;&#125;属性shared1public static let shared = NoticeBoard()用于获取默认提供的一个共享实例。notices1public var notices = [Notice]()用来存放当前的NoticeBoard中已经post出的所有Notice。layoutStyle1public var layoutStyle = LayoutStyle.tile当前NoticeBoard采用的视图布局方案，默认为tile。函数post12345678910111213/// post一条通知////// - Parameters:/// - notice: 通知/// - duration: 持续时间open class func post(_ notice: Notice, duration: TimeInterval = default)/// post一条通知////// - Parameters:/// - notice: 通知/// - duration: 持续时间open func post(_ notice: Notice, duration: TimeInterval = default)用法：1234let notice = Notice(title: \"hello\", icon: nil, body: \"hello\")NoticeBoard.post(notice)// 或者NoticeBoard.shared.post(notice)remove1234567891011/// 移除某个通知////// - Parameters:/// - notice: 通知public class func remove(_ notice: Notice?)/// 移除某个通知////// - Parameters:/// - notice: 通知public func remove(_ notice: Notice?)用法：123NoticeBoard.remove(notice)// 或者NoticeBoard.shared.remove(notice)clean12345/// 移除所有通知public class func clean()/// 移除所有通知public func clean()用法：123NoticeBoard.clean()// 或者NoticeBoard.shared.clean()便捷的 post1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162/// post一条纯文本消息，默认主题////// - Parameters:/// - message: 消息内容/// - duration: 持续时间public class func post(_ message: String?, duration: TimeInterval = default) -&gt; Notice/// post一条消息（纯色主题+消息内容）////// - Parameters:/// - theme: 主题/// - message: 消息内容/// - duration: 持续时间public class func post(_ theme: Notice.Theme, message: String?, duration: TimeInterval) -&gt; Notice/// post一条消息（UIBlurEffect主题+消息内容）////// - Parameters:/// - blurEffectStyle: 主题/// - message: 消息内容/// - duration: 持续时间public class func post(_ theme: UIBlurEffectStyle, message: String?, duration: TimeInterval) -&gt; Notice/// post一条消息（纯色主题+消息标题+消息内容）////// - Parameters:/// - theme: 主题/// - title: 标题/// - message: 消息内容/// - duration: 持续时间public class func post(_ theme: Notice.Theme, title: String?, message: String?, duration: TimeInterval) -&gt; Notice/// post一条消息（UIBlurEffect主题+消息标题+消息内容）////// - Parameters:/// - blurEffectStyle: 主题/// - title: 标题/// - message: 消息内容/// - duration: 持续时间public class func post(_ theme: UIBlurEffectStyle, title: String?, message: String?, duration: TimeInterval) -&gt; Notice/// post一条消息（纯色主题+icon+消息标题+消息内容+按钮）////// - Parameters:/// - theme: 主题/// - icon: 图标/// - title: 标题/// - message: 消息内容/// - duration: 持续时间/// - action: 按钮事件public static func post(_ theme: Notice.Theme, icon: UIImage?, title: String?, message: String?, duration: TimeInterval, action: ((Notice, UIButton) -&gt; Void)? = default) -&gt; Notice/// post一条消息（UIBlurEffectStyle主题+icon+消息标题+消息内容+按钮）////// - Parameters:/// - blurEffectStyle: 主题/// - icon: 图标/// - title: 标题/// - message: 消息内容/// - duration: 持续时间/// - action: 按钮事件public static func post(_ theme: UIBlurEffectStyle, icon: UIImage?, title: String?, message: String?, duration: TimeInterval, action: ((Notice, UIButton) -&gt; Void)? = default) -&gt; Notice用法：123456789101112131415// 只有messageNoticeBoard.post(\"hello\")// message 和 durationNoticeBoard.post(\"hello\", duration: 1)// theme、message 和 durationNoticeBoard.post(.error, message: \"message body\", duration: 1)// theme、title、message 和 durationNoticeBoard.post(.error, title: \"error\", message: \"message body\", duration: 1)// theme、icon、title、message 和 durationlet img = UIImage.init(named: \"alert-circle\")NoticeBoard.post(.error, icon: img, title: \"error\", message: \"message body\", duration: 1)// theme、icon、title、message、duration 和 actionNoticeBoard.post(.error, icon: img, title: \"error\", message: \"message body\", duration: 1) &#123; (notice, sender) in print(\"button tapped\")&#125;本文最后更新于：2018-09-25 星期二评论var GUEST_INFO=[\"nick\",\"mail\",\"link\"],guest_info=\"nick,mail,link\".split(\",\").filter(function(i){return-1"},{"title":"","date":"2019-01-23T05:51:04.798Z","updated":"2019-01-23T05:51:04.798Z","comments":true,"path":"wiki/podspec.sh/index.html","permalink":"https://singularityzed.github.io/wiki/podspec.sh/index.html","excerpt":"","text":"Shell Scripts | xaoxuuVue.config.productionTip=!1,window.PAGE_TYPE=\"Shell Scripts\"Shell Scripts xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件Shell Scriptshexo.shpodspec.shvim-cn.shpodspec.sh一个方便发布podspec的脚本。开始使用let path = 你的项目的 podspec 所在的路径打开终端，cd 到 path ，输入下面这条命令下载脚本到当前文件夹：1curl -s https://xaoxuu.com/install | sh -s podspec.sh如需安装指定版本，在后面加上版本号即可，例如：1curl -s https://xaoxuu.com/install | sh -s podspec.sh 1.2.1需要发布podspec到时候，在终端中输入：1. podspec.sh就会自动开始执行发布流程。发布流程如果目录下有一个podspec文件，直接询问版本号，然后打包验证、询问是否发布。如果目录下有多个podspec文件，遍历每一个podspec文件，询问版本号，然后打包验证、询问是否发布。脚本运行权限如果提示没有权限，就输入以下命令修改podspec.sh的权限1chmod 777 podspec.sh本文最后更新于：2019-01-08 星期二评论var GUEST_INFO=[\"nick\",\"mail\",\"link\"],guest_info=\"nick,mail,link\".split(\",\").filter(function(i){return-1"},{"title":"","date":"2019-01-23T05:51:04.799Z","updated":"2019-01-23T05:51:04.799Z","comments":true,"path":"wiki/smartlamp/index.html","permalink":"https://singularityzed.github.io/wiki/smartlamp/index.html","excerpt":"","text":"SmartLamp | xaoxuuVue.config.productionTip=!1,window.PAGE_TYPE=\"SmartLamp\"SmartLamp xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件SmartLamp那么，什么是 SmartLamp ？这是我的毕业设计项目。界面使用最广泛的四页面设计，分别为：主页、情景、设备、发现。主页是核心功能，实现一键连接蓝牙灯、自由调节颜色、亮度、设置定时关灯等功能。情景页是保存用户设置的情景模式，可以根据使用场景不同快速切换至对应的工作模式。设备页可以管理多台蓝牙灯。发现页提供一些智能家居相关资讯。启动页调色定时资讯技术点ATTitleBar支持横向滑动切换tab，并具有点击涟漪效果。titlebar是在app中广泛应用的一种tab设计。我写的这个小框架模仿Google的Material Design设计，涟漪效果代码由MaterialControls框架改写。页面较多时采用类似tableview的懒加载模式，只加载需要显示的几页，减少内存占用，提高流畅度。ReactiveCocoa本项目大量使用了ReactiveCocoa框架进行响应式编程，大幅简化代码、提高可读性。RAC的订阅机制使得一对多传值有了新的选择，如蓝牙中心设备。RAC的信号监听机制使得我更容易根据需要定制个性化控件。如带翻转、旋转效果的tabbar、带缩放和回弹效果的slider等，使app的界面栩栩如生。CBCentralManagerCBCentralManager是蓝牙类app的核心，本项目在编写这部分代码时使用了链式语法进行封装，外界调用起来十分方便。ATCarouselView轮播图也是在app中广泛存在的一种自定义控件，我将这部分代码封装至ATKit中，以Pods导入方式使用，便于维护和扩展，同时也使得本项目代码更加简洁。部分app的轮播图可以根据下方列表的滑动而改变高度或者添加蒙版效果，我目前实现了改变高度的功能。 已归档！这是一个已经归档的项目，最后一次更新时间是在2016年。本文最后更新于：2019-01-02 星期三评论var GUEST_INFO=[\"nick\",\"mail\",\"link\"],guest_info=\"nick,mail,link\".split(\",\").filter(function(i){return-1"},{"title":"","date":"2019-01-23T05:51:04.796Z","updated":"2019-01-23T05:51:04.796Z","comments":true,"path":"wiki/noticeboard/notice.html","permalink":"https://singularityzed.github.io/wiki/noticeboard/notice.html","excerpt":"","text":"NoticeBoard | xaoxuuVue.config.productionTip=!1,window.PAGE_TYPE=\"NoticeBoard\"NoticeBoard xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件NoticeBoardNoticeBoardNoticeBoard.swiftNotice.swift更新日志Notice.swift一条通知的视图实体。定义当notice被移除时的通知1public static let didRemoved: NSNotification.Name主题1234567891011121314151617181920212223/// 主题public enum Theme : String &#123; case success case warning case error case note case normal case lightGray case darkGray case white case plain public var color: UIColor &#123; get &#125;&#125;alert 操作12345678910111213141516171819202122232425262728293031323334public struct NoticeAlertOptions : OptionSet &#123; public var rawValue: UInt public init(rawValue: UInt) // MARK: 以什么样的速度 /// 正常速度，默认 public static var normally: NoticeAlertOptions &#123; get &#125; /// 缓慢地 public static var slowly: NoticeAlertOptions &#123; get &#125; /// 快速地 public static var fast: NoticeAlertOptions &#123; get &#125; /// 颜色变深，默认 public static var darken: NoticeAlertOptions &#123; get &#125; /// 颜色变浅 public static var lighten: NoticeAlertOptions &#123; get &#125; /// 闪烁（alpha: 1 -&gt; 0） public static var flash: NoticeAlertOptions &#123; get &#125; /// 一次，默认 public static var once: NoticeAlertOptions &#123; get &#125; /// 两次 public static var twice: NoticeAlertOptions &#123; get &#125; /// 呼吸灯效果 public static var breathing: NoticeAlertOptions &#123; get &#125;&#125;属性正文区域最大高度1public var bodyMaxHeight: CGFloat &#123; get set &#125;是否可通过手势移除这条通知1public var allowRemoveByGesture: Bool主题12345/// 主题色（改变背景颜色）public var themeColor: UIColor &#123; get set &#125;/// 主题public var theme: NoticeBoard.Notice.Theme &#123; get set &#125;模糊效果1public var blurEffectStyle: UIBlurEffectStyle? &#123; get set &#125;子视图，自定义的时候可以使用123456789101112131415public var contentView: UIViewpublic var iconView: UIImageView?public var titleLabel: UILabel?public var bodyView: UITextView?public var visualEffectView: UIVisualEffectView?public var dragButton: UIButton?public var actionButton: UIButton?public var progressLayer: CALayer?标题1public var title: String &#123; get set &#125;正文1public var body: String &#123; get set &#125;图标1public var icon: UIImage? &#123; get set &#125;进度1public var progress: CGFloat &#123; get set &#125;层级1public var level: NoticeBoard.NoticeBoard.Level &#123; get set &#125;生命周期函数初始化12345public convenience init(title: String?, icon: UIImage?, body: String?)public convenience init(theme: Theme)public override init(frame: CGRect)从NoticeBoard中移除1open func removeFromNoticeBoard()事件alert()1234/// 警示（如果一个notice已经post出来了，想要再次引起用户注意，可以使用此函数）////// - Parameter options: 操作public func alert(options: NoticeAlertOptions = [])例如，常规的：123notice.alert()// 等同于(以正常的速度变暗一次)notice.alert(options: [.normally, .darken, .once])要实现类似于iPhone X左上角录屏时的呼吸灯效果，可以这样：1notice.alert(options: [.slowly, .breathing])要强烈而急促地闪烁两次，可以这样：1notice.alert(options: [.fast, .flash, .twice])设置按钮事件1234/// \"→\"按钮的事件////// - Parameter action: \"→\"按钮的事件open func actionButtonDidTapped(action: @escaping (Notice, UIButton) -&gt; Void)本文最后更新于：2018-09-25 星期二评论var GUEST_INFO=[\"nick\",\"mail\",\"link\"],guest_info=\"nick,mail,link\".split(\",\").filter(function(i){return-1"},{"title":"","date":"2019-01-23T05:51:45.461Z","updated":"2019-01-23T05:51:04.799Z","comments":true,"path":"wiki/vim-cn.sh/index.html","permalink":"https://singularityzed.github.io/wiki/vim-cn.sh/index.html","excerpt":"","text":"Shell Scripts | xaoxuuVue.config.productionTip=!1,window.PAGE_TYPE=\"Shell Scripts\"Shell Scripts xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件Shell Scriptshexo.shpodspec.shvim-cn.shvim-cn.shimg.vim-cn.com是一个十分干净好用的图床，本站以及博客中的所有图片都是使用的这个图床。所以，这是一个快速批量上传图片的脚本。推荐下载到本地使用下载打开终端，输入这行命令：1curl -s https://xaoxuu.com/install | sh -s vim-cn.sh如需安装指定版本，在后面加上版本号即可，例如：1curl -s https://xaoxuu.com/install | sh -s vim-cn.sh 2.0.1然后就会开始下载脚本并安装到usr/local/bin路径，可能需要输入电脑密码以授权。使用需要上传图片到时候，打开终端，cd 到存放图片的文件夹，输入upload就可以了。当然，还可以传递参数：1upload [扩展名] [操作]扩展名含义all或者不传任何参数上传所有格式的文件png、jpg、ico等具体的某个扩展名上传指定格式的文件操作含义open`上传成功后打开链接常见的用法示例上传当前文件夹中的所有文件1upload上传当前文件夹中的所有文件，并打开链接1upload -a -o上传当前文件夹中的所有png格式的图片1upload png也可以直接使用打开终端，cd 到存放图片的文件夹，输入这行命令：1curl -s https://raw.githubusercontent.com/xaoxuu/vim-cn.sh/v2/upload | sh支持的文件格式经测试，可以上传的格式有：png、jpg、ico、gif、svg、tiff、webp、pdf、mp3、mp4、zip等。支持的文件大小大概在50MB以内。请勿滥用注意：为了大家都能愉快使用，请不要上传一些奇奇怪怪的图片。脚本源码img.vim-cn.com本文最后更新于：2019-01-08 星期二评论var GUEST_INFO=[\"nick\",\"mail\",\"link\"],guest_info=\"nick,mail,link\".split(\",\").filter(function(i){return-1"},{"title":"","date":"2019-01-23T05:51:04.779Z","updated":"2019-01-23T05:51:04.779Z","comments":true,"path":"wiki/axkit/string.html","permalink":"https://singularityzed.github.io/wiki/axkit/string.html","excerpt":"","text":"AXKit | xaoxuuVue.config.productionTip=!1,window.PAGE_TYPE=\"AXKit\"AXKit xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件AXKitAXKitImage ViewBundleColorDictionaryViewApplicationCore GraphicsControlErrorDateGCDImageEmailBar Button ItemLayerObjectNavigationStatus BarRuntimeResponderAlertStringTabBar ControllerTimerUser DefaultsTableTheme更新日志String沙盒文件读写写入与读取的一个简单示例123456789101112131415161718// 创建一个json对象NSArray *arr = @[@1,@2,@3];NSData *data = [NSJSONSerialization dataWithJSONObject:arr options:NSJSONWritingPrettyPrinted error:nil];if (!data) &#123; return;&#125;NSString *jsonStr = [[NSString alloc] initWithData:data encoding:NSUTF8StringEncoding];// 在 Documents/MyFolder 中保存这个json文件，文件名为“MyJsonFile”@\"MyFolder/MyJsonFile.json\".docPath.saveFile(jsonStr);// 或者@\"MyFolder\".appendPathComponent(@\"MyJsonFile\").extension(@\"json\").docPath.saveFile(jsonStr);// 读取并解析这个json文件NSArray *readArr = @\"MyFolder/MyJsonFile.json\".docPath.readJson();// 输出结果AXLogOBJ(readArr);控制台输出为：123456➤ func:-[HomeVC viewDidLoad] line:108💬[1,2,3]除此之外，还可以读写数组、字典、字符串、归档解档文件、直接拼接沙盒中的纯文本文件例如：1234567891011121314151617NSString *path = @\"MyFolder/MyTextFile.txt\".docPath;// 如果没有文件，则会创建文件并写入传入的值NSString *str1 = @\"hello world!\";path.saveStringByAppendingToEndOfFile(str1);// 读取并输出AXLogOBJ(path.readString());// 拼接NSString *str2 = @\"hello AXKit!\";path.saveStringByAppendingToEndOfFile(str2);// 读取并输出AXLogOBJ(path.readString());// 删除文件path.removeFile();控制台输出为：123456782018-03-13 13:49:28.785279+0800 AXKitDemo[43129:936443]➤ func:-[HomeVC viewDidLoad] line:98💬hello world!2018-03-13 13:49:28.785902+0800 AXKitDemo[43129:936443]➤ func:-[HomeVC viewDidLoad] line:105💬hello world!hello AXKit!路径的获取与拼接12345678910111213141516NSString *fileName = @\"FileName.txt\";// fileName在mainBundle中的完整路径AXLogOBJ(fileName.mainBundlePath);// fileName在Document中的完整路径AXLogOBJ(fileName.docPath);// fileName在Cache中的完整路径AXLogOBJ(fileName.cachePath);// fileName在Tmp中的完整路径AXLogOBJ(fileName.tmpPath);NSString *bundlePath = [[NSBundle mainBundle] bundlePath];NSArray *allSubpaths = bundlePath.subpaths(nil);AXLogOBJ(allSubpaths);NSArray *specificSubpaths = bundlePath.subpaths(@\"bundle\");AXLogOBJ(specificSubpaths);控制台输出为：12345678910111213141516171819202122232425262728293031323334➤ func:-[HomeVC viewDidLoad] line:95💬/Users/xaoxuu/Library/Developer/CoreSimulator/Devices/244FEB41-C498-42D3-B70C-FEAA3754519D/data/Containers/Bundle/Application/69CE97EA-DA87-4ACC-8457-7ED815FD1C4E/AXKitDemo.app/FileName.txt2018-03-13 13:56:28.648833+0800 AXKitDemo[43206:947211]➤ func:-[HomeVC viewDidLoad] line:97💬/Users/xaoxuu/Library/Developer/CoreSimulator/Devices/244FEB41-C498-42D3-B70C-FEAA3754519D/data/Containers/Data/Application/D289F192-B070-400B-BB70-D57A16B157A4/Documents/FileName.txt2018-03-13 13:56:28.648982+0800 AXKitDemo[43206:947211]➤ func:-[HomeVC viewDidLoad] line:99💬/Users/xaoxuu/Library/Developer/CoreSimulator/Devices/244FEB41-C498-42D3-B70C-FEAA3754519D/data/Containers/Data/Application/D289F192-B070-400B-BB70-D57A16B157A4/Library/Caches/FileName.txt2018-03-13 13:56:28.649177+0800 AXKitDemo[43206:947211]➤ func:-[HomeVC viewDidLoad] line:101💬/Users/xaoxuu/Library/Developer/CoreSimulator/Devices/244FEB41-C498-42D3-B70C-FEAA3754519D/data/Containers/Data/Application/D289F192-B070-400B-BB70-D57A16B157A4/tmp/FileName.txt2018-03-13 13:56:28.653414+0800 AXKitDemo[43206:947211]➤ func:-[HomeVC viewDidLoad] line:105💬[/Users/xaoxuu/Library/Developer/CoreSimulator/Devices/244FEB41-C498-42D3-B70C-FEAA3754519D/data/Containers/Bundle/Application/69CE97EA-DA87-4ACC-8457-7ED815FD1C4E/AXKitDemo.app/_CodeSignature,/Users/xaoxuu/Library/Developer/CoreSimulator/Devices/244FEB41-C498-42D3-B70C-FEAA3754519D/data/Containers/Bundle/Application/69CE97EA-DA87-4ACC-8457-7ED815FD1C4E/AXKitDemo.app/_CodeSignature/CodeResources,/Users/xaoxuu/Library/Developer/CoreSimulator/Devices/244FEB41-C498-42D3-B70C-FEAA3754519D/data/Containers/Bundle/Application/69CE97EA-DA87-4ACC-8457-7ED815FD1C4E/AXKitDemo.app/zh-Hans.lproj,/Users/xaoxuu/Library/Developer/CoreSimulator/Devices/244FEB41-C498-42D3-B70C-FEAA3754519D/data/Containers/Bundle/Application/69CE97EA-DA87-4ACC-8457-7ED815FD1C4E/AXKitDemo.app/zh-Hans.lproj/LaunchScreen.strings,/Users/xaoxuu/Library/Developer/CoreSimulator/Devices/244FEB41-C498-42D3-B70C-FEAA3754519D/data/Containers/Bundle/Application/69CE97EA-DA87-4ACC-8457-7ED815FD1C4E/AXKitDem2018-03-13 13:56:28.656689+0800 AXKitDemo[43206:947211]➤ func:-[HomeVC viewDidLoad] line:108💬[/Users/xaoxuu/Library/Developer/CoreSimulator/Devices/244FEB41-C498-42D3-B70C-FEAA3754519D/data/Containers/Bundle/Application/69CE97EA-DA87-4ACC-8457-7ED815FD1C4E/AXKitDemo.app/MJRefresh.bundle,/Users/xaoxuu/Library/Developer/CoreSimulator/Devices/244FEB41-C498-42D3-B70C-FEAA3754519D/data/Containers/Bundle/Application/69CE97EA-DA87-4ACC-8457-7ED815FD1C4E/AXKitDemo.app/AXKit.bundle,/Users/xaoxuu/Library/Developer/CoreSimulator/Devices/244FEB41-C498-42D3-B70C-FEAA3754519D/data/Containers/Bundle/Application/69CE97EA-DA87-4ACC-8457-7ED815FD1C4E/AXKitDemo.app/AXCameraKit.bundle]API Reference预览：123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135#pragma mark read/** 读取一个数组或可变数组 @return 数组 */- (nullable __kindof NSArray *(^)(void))readArray;/** 读取一个字典或可变字典 @return 字典 */- (nullable __kindof NSDictionary *(^)(void))readDictionary;/** 读取一个json文件 @return 数组或字典 */- (nullable id (^)(void))readJson;/** 读取一个纯文本文件 @return txt文件 */- (nullable NSString *(^)(void))readString;/** 解档一个已归档的文件 @return 文件 */- (nullable id (^)(void))readArchivedFile;#pragma mark - save/** 保存一个文件 @return 成功与否 */- (BOOL(^)(id))saveFile;/** 归档一个实现NSCoding协议的文件 @return 成功与否 */- (BOOL(^)(NSObject&lt;NSCoding&gt; *))saveArchivedFile;/** 拼接文本到沙盒文件 @return 成功与否 */- (BOOL (^)(NSString *))saveStringByAppendingToEndOfFile;#pragma mark - remove/** 删除一个文件 @return 成功与否 */- (BOOL (^)(void))removeFile;#pragma mark - path/** ‘self’在mainBundle中的完整路径 @return ‘self’在mainBundle中的完整路径 */- (nullable NSString *)mainBundlePath;/** ‘self’在documents中的完整路径 @return ‘self’在documents中的完整路径 */- (NSString *)docPath;/** ‘self’在cache中的完整路径 @return ‘self’在cache中的完整路径 */- (NSString *)cachePath;/** ‘self’在tmp中的完整路径 @return ‘self’在tmp中的完整路径 */- (NSString *)tmpPath;/** ‘self’在NSSearchPathDirectory中的完整路径 @return ‘self’在NSSearchPathDirectory中的完整路径 */- (NSString *(^)(NSSearchPathDirectory))path;/** ‘self’路径下的所有文件路径 */- (nullable NSArray&lt;NSString *&gt; *(^)(NSString * __nullable))subpaths;/** 追加一个扩展名 */- (NSString *(^)(NSString * __nullable))extension;/** 路径 */- (NSString *(^)(NSString * __nullable))appendPathComponent;/** 创建路径是否存在 @return 创建路径是否存在 */- (BOOL (^)(void))isDirectoryExist;/** 如果不存在创建路径 @return 路径 */- (BOOL (^)(void))createDirectory;基本数据类型用法示例：1234567891011121314151617181920NSString *boolStr = NSStringFromBool(YES);AXLogOBJ(boolStr);NSString *intStr = NSStringFromInt(100);AXLogOBJ(intStr);NSString *floatStr = NSStringFromFloat(M_PI);AXLogOBJ(floatStr);NSString *doubleStr = NSStringFromCGFloat(M_PI);AXLogOBJ(doubleStr);NSString *po = NSStringFromPointer(self);AXLogOBJ(po);NSString *ascii = NSStringFromASCIIValue(97);AXLogOBJ(ascii);NSString *percent = NSStringFromPercent(0.75);AXLogOBJ(percent);控制台输出为：1234567891011121314151617181920212223242526272829303132332018-03-13 14:17:01.399688+0800 AXKitDemo[43446:973358]➤ func:-[HomeVC viewDidLoad] line:94💬12018-03-13 14:17:01.399907+0800 AXKitDemo[43446:973358]➤ func:-[HomeVC viewDidLoad] line:97💬1002018-03-13 14:17:01.400081+0800 AXKitDemo[43446:973358]➤ func:-[HomeVC viewDidLoad] line:100💬3.1415932018-03-13 14:17:01.400404+0800 AXKitDemo[43446:973358]➤ func:-[HomeVC viewDidLoad] line:103💬3.1415926535897932018-03-13 14:17:01.400705+0800 AXKitDemo[43446:973358]➤ func:-[HomeVC viewDidLoad] line:106💬0x7f8053c0dd502018-03-13 14:17:01.400864+0800 AXKitDemo[43446:973358]➤ func:-[HomeVC viewDidLoad] line:109💬a2018-03-13 14:17:01.400981+0800 AXKitDemo[43446:973358]➤ func:-[HomeVC viewDidLoad] line:112💬75%汉字转拼音1AXLogOBJ(SpellForChinese(@\"你好\"));控制台输出为：1232018-03-13 14:19:03.558888+0800 AXKitDemo[43473:976316]➤ func:-[HomeVC viewDidLoad] line:94💬ni hao拼接字符串1234567891011121314151617NSString *str = @\"abc\";// 拼接数字str = str.appendNumber(@1);AXLogOBJ(str);// 拼接换行符str = str.appendReturn();AXLogOBJ(str);// 拼接字符串str = str.append(@\"def\");AXLogOBJ(str);// 在前面拼接str = str.prefix(@\"hello: \");AXLogOBJ(str);控制台输出为：1234567891011121314151617181920212018-03-13 14:26:09.081900+0800 AXKitDemo[44544:988848]➤ func:-[HomeVC viewDidLoad] line:96💬abc12018-03-13 14:26:09.082111+0800 AXKitDemo[44544:988848]➤ func:-[HomeVC viewDidLoad] line:100💬abc12018-03-13 14:26:09.082217+0800 AXKitDemo[44544:988848]➤ func:-[HomeVC viewDidLoad] line:104💬abc1def2018-03-13 14:26:09.082317+0800 AXKitDemo[44544:988848]➤ func:-[HomeVC viewDidLoad] line:108💬hello: abc1defURL转换123456NSString *str = @\"https://xaoxuu.com\";// 判断是不是URL字符串AXLogBOOL(str.isURLString);NSURL *url = str.absoluteURL;AXLogOBJ(url);控制台输出为：123456782018-03-13 14:38:03.467648+0800 AXKitDemo[45628:1008735]➤ func:-[HomeVC viewDidLoad] line:95🔵true2018-03-13 14:38:03.467922+0800 AXKitDemo[45628:1008735]➤ func:-[HomeVC viewDidLoad] line:98💬https://xaoxuu.com随机字符串12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061/** 随机字符串类型 - RandomStringTypeName: 姓名 - RandomStringTypePassword: 密码 - RandomStringTypeLower: 全部小写 - RandomStringTypeUpper: 全部大写 - RandomStringTypeCapitalize: 首字母大写 */typedef NS_ENUM(NSUInteger, RandomStringType)&#123; RandomStringTypeName, RandomStringTypePassword, RandomStringTypeLower, RandomStringTypeUpper, RandomStringTypeCapitalize,&#125;;/** 产生随机字符串 @param type 随机类型 @param length 长度范围 @return 字符串 */FOUNDATION_EXTERN NSString *AXRandomStringFrom(RandomStringType type, AXUIntegerRange length);/** 产生指定位数的随机二进制数 @param length 随机数的位数（字符串的长度） @return 随机数字 */FOUNDATION_EXTERN NSString *AXRandomBinStringWithLength(NSUInteger length);/** 产生指定位数的随机八进制数 @param length 随机数的位数（字符串的长度） @return 随机数字 */FOUNDATION_EXTERN NSString *AXRandomOctStringWithLength(NSUInteger length);/** 产生指定位数的随机十进制数 @param length 随机数的位数（字符串的长度） @return 随机数字 */FOUNDATION_EXTERN NSString *AXRandomDecStringWithLength(NSUInteger length);/** 产生指定位数的随机十六进制数 @param length 随机数的位数（字符串的长度） @return 随机数字 */FOUNDATION_EXTERN NSString *AXRandomHexStringWithLength(NSUInteger length);本文最后更新于：2018-11-26 星期一评论var GUEST_INFO=[\"nick\",\"mail\",\"link\"],guest_info=\"nick,mail,link\".split(\",\").filter(function(i){return-1"},{"title":"","date":"2019-01-23T05:51:04.769Z","updated":"2019-01-23T05:51:04.769Z","comments":true,"path":"wiki/axkit/changelog.html","permalink":"https://singularityzed.github.io/wiki/axkit/changelog.html","excerpt":"","text":"AXKit | xaoxuuVue.config.productionTip=!1,window.PAGE_TYPE=\"AXKit\"AXKit xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件AXKitAXKitImage ViewBundleColorDictionaryViewApplicationCore GraphicsControlErrorDateGCDImageEmailBar Button ItemLayerObjectNavigationStatus BarRuntimeResponderAlertStringTabBar ControllerTimerUser DefaultsTableTheme更新日志更新日志 0.3.3更新日期：2018-06-08日期的创建例如：12345678910111213141516// 创建一个NSDateFormatterNSDateFormatter *fm1 = NSDateFormatter.sharedFormatter(@\"yyyy-MM-dd HH:mm:ss\");NSDateFormatter *fm2 = NSDateFormatter.formatter(@\"yyyy-MM-dd HH:mm:ss\");NSDateFormatter *fm3 = NSDateFormatter.utcFormatter(@\"yyyy-MM-dd HH:mm:ss\");// 生成DateNSDate *date1 = fm1.date(@\"2018-06-06 20:30:00\");// 日期字符串 NSString *str1 = date1.stringValue(@\"HH:mm:ss\");NSString *str2 = fm2.stringValue(date1);// 也可以连接起来写NSString *str3 = NSDateFormatter.utcFormatter(@\"yyyy-MM-dd HH:mm:ss\").date(@\"2018-06-06 20:30:00\").stringValue(@\"HH:mm:ss\");// 日期的加减示例：NSDate *date2 = date1.addDays(1).addMinutes(-100).addWeeks(2);NSDate123456789/** 根据日期字符串和格式生成日期 */+ (nullable NSDate *(^)(NSString *str, NSString *format))dateWithStringAndFormat;/** 根据UTC日期字符串和格式生成日期 */+ (nullable NSDate *(^)(NSString *str, NSString *format))dateWithUTCStringAndFormat;NSDateFormatter123456789101112131415161718192021222324252627282930313233/** local formatter */+ (nullable NSDateFormatter *(^)(NSString *dateFormat))formatter;/** local formatter */+ (nullable NSDateFormatter *(^)(NSString *dateFormat))localFormatter;/** UTC formatter */+ (nullable NSDateFormatter *(^)(NSString *dateFormat))utcFormatter;/** formatter with timezone */+ (nullable NSDateFormatter *(^)(NSString *dateFormat, NSTimeZone *timeZone))formatterWithTimeZone;/** shared instance */+ (nullable NSDateFormatter *(^)(NSString *dateFormat))sharedFormatter;/** date */- (nullable NSDate *(^)(NSString *dateString))date;/** string */- (nullable NSString *(^)(NSDate *date))stringValue;NSUserDefaults增加Swift风格的接口OC：1234567NSString *key = @\"key\";NSString *obj = @\"obj\";NSUserDefaults.standard.setObjectForKey(obj, key);NSUserDefaults.standard.objectForKey(key);NSUserDefaults.standard.removeObjectForKey(key);NSUserDefaults.standard.removePersistentDomainForName(key);Swift:1234567let key = \"key\"let obj = \"obj\"UserDefaults.standard.set(obj, forKey: key)UserDefaults.standard.object(forKey: value)UserDefaults.standard.removeObject(forKey: key)UserDefaults.standard.removePersistentDomain(forName: key)增加了若干初始化接口123456789101112131415161718// 如一些初始化方法：UIColor *color = UIColor.initWithHEX(@\"#DCDCDC\");UIColor *color2 = UIColor.initWithRGB(82,161,248);UIImage *img = UIImage.named(@\"icon_home\");UIImageView *imgv = UIImageView.initWithImageName(@\"icon_home\");UIView *view = UIView.initWithXibName(@\"View\");// View.xibUIImage *img2 = UIImage.initWithView(view); // view生成imageUIViewController *vc = UIViewController.initWithClassName(@\"MeVC\");// 获取图片指定坐标的颜色UIColor *color3 = imgv.colorInPoint(CGPointMake(10,10));// pushself.navigationController.pushViewControllerNamed(@\"DetailVC\");self.navigationController.pushViewController(vc);// 创建一个高度为0.01，宽度为屏幕宽度的viewUIView *v = UIView.initWithHeight(0.01);// 创建一个尺寸为&#123;100,100&#125;的viewUIView *v2 = UIView.initWithSize(CGSizeMake(100,100));增加：1234567891011// 定时器NSTimer *timer;timer.pause();// 暂停timer.restart();// 重启，恢复了之后时间是重新开始计时的，所以叫重启更恰当timer.turnover();// 从暂停变成恢复、或从运行变为暂停// safariNSURL *url = [NSURL URLWithString:@\"https://xaoxuu.com\"];UIViewController *vc2 = UIViewController.new;vc2.openSafari(url);UIApplication.openSafari(url); 0.3.2更新日期：2018-06-06增加更多Dictionary解析方法1234567891011121314151617181920212223242526272829/** 解析dictionary中的dictionary，返回值可能为空 */- (nullable NSDictionary *(^)(NSString *key))dictionaryValue;/** 解析dictionary中的array，返回值可能为空 */- (nullable NSArray *(^)(NSString *key))arrayValue;/** 解析dictionary中的string，返回值可能为空 */- (nullable NSString *(^)(NSString *key))stringValue;/** 解析dictionary中的string，如果值为空，返回空字符串：@\"\" */- (NSString *(^)(NSString *key, NSString *defaultValue))safeStringValue;/** 解析dictionary中的number，返回值可能为空 */- (nullable NSNumber *(^)(NSString *key))numberValue;/** 解析dictionary中的number，如果值为空，返回：@0 */- (NSNumber *(^)(NSString *key, NSNumber *defaultValue))safeNumberValue;数据类型判断1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768/** 安全的字典，如果传入obj不是字典，则返回def @param obj 传入对象 @param def 默认值 @return 字典或默认值 */FOUNDATION_EXTERN NSDictionary *safeDictionary(id obj, NSDictionary *def);/** 自动转换的字典，如果传入值不是字典，但是能够转换成字典，返回转换后的字典 @param obj 传入对象 @param def 默认值 @return 字典或默认值 */FOUNDATION_EXTERN NSDictionary *autoDictionary(id obj, NSDictionary *def);/** 安全的数组，如果传入obj不是数组，则返回def @param obj 传入对象 @param def 默认值 @return 数组或默认值 */FOUNDATION_EXTERN NSArray *safeArray(id obj, NSArray *def);/** 自动转换的数组，如果传入obj不是数组，但是能够转换成数组，则返回转换后的数组 @param obj 传入对象 @param def 默认值 @return 数组或默认值 */FOUNDATION_EXTERN NSArray *autoArray(id obj, NSArray *def);/** 安全的字符串，如果传入obj不是字符串，则返回def @param obj 传入对象 @param def 默认值 @return 字符串或默认值 */FOUNDATION_EXTERN NSString *safeString(id obj, NSString *def);/** 安全的字符串，如果传入obj不是字符串，但是能够转换成字符串，则返回转换后的字符串 @param obj 传入对象 @param def 默认值 @return 字符串或默认值 */FOUNDATION_EXTERN NSString *autoString(id obj, NSString *def);/** 安全的数字，如果传入obj不是数字，则返回def @param obj 传入对象 @param def 默认值 @return 数字或默认值 */FOUNDATION_EXTERN NSNumber *safeNumber(id obj, NSNumber *def);/** 安全的数字，如果传入obj不是数字，但是能够转换成数字，则返回转换后的数字 @param obj 传入对象 @param def 默认值 @return 数字或默认值 */FOUNDATION_EXTERN NSNumber *autoNumber(id obj, NSNumber *def);AXResult增加data与json互转接口1234567891011121314151617181920NSDictionary *dict1 = @&#123;@\"a\":@\"haha\", @\"b\":@2, @\"c\":@[@\"cc\",@23]&#125;;NSString *jsonStr = dict1.jsonValue.stringValue;NSData *jsonData = dict1.jsonValue.dataValue;NSData *data2 = @\"abc.json\".docPath.readData();NSDictionary *dict2 = data2.jsonValue.dictionaryValue;NSArray *arr2 = data2.jsonValue.arrayValue;NSString *str2 = data2.jsonValue.stringValue;// 也可以在转换的过程中监听错误信息NSDictionary *dict22 = [data2.jsonValue error:^(NSError * _Nullable error) &#123; AXLogFailure(@\"data2转json失败\");&#125;].dictionaryValue;// 也可以嵌套监听[[[data2.jsonValue arrayValue:^(NSArray * _Nonnull arrayValue) &#123; AXLogSuccess(@\"data2是一个array\");&#125;] dictionaryValue:^(NSDictionary * _Nonnull dictionaryValue) &#123; AXLogSuccess(@\"data2是一个dictionary\");&#125;] error:^(NSError * _Nullable error) &#123; AXLogFailure(@\"data2转json失败\");&#125;];接口1234567891011121314151617/** json对象转data @param opt options @param callback 回调 @return 结果 */+ (AXResult *)resultWithJsonWritingOptions:(NSJSONWritingOptions)opt object:(id (^)(NSError **error))callback;/** data转json对象 @param opt options @param callback 回调 @return 结果 */+ (AXResult *)resultWithJsonReadingOptions:(NSJSONReadingOptions)opt data:(NSData *(^)(NSError **error))callback;命名颜色加深和变浅的函数名：123456// 旧的- (UIColor *(^)(CGFloat ratio))darkRatio;- (UIColor *(^)(CGFloat ratio))lightRatio;// 新的- (UIColor *(^)(CGFloat ratio))darken;- (UIColor *(^)(CGFloat ratio))lighten;增加获取色相、饱和度、亮度的方法：1234567891011121314151617181920/** 色相 @return 色相 */- (CGFloat)hueValue;/** 饱和度 @return 饱和度 */- (CGFloat)saturationValue;/** 亮度 @return 亮度 */- (CGFloat)brightnessValue;UIView增加移除手势的接口12345678910/** 移除一个手势 @param gesture 手势对象 */- (void)ax_removeGestureRecognizer:(__kindof UIGestureRecognizer *)gestureRecognizer;/** 移除所有手势 */- (void)ax_removeAllGestureRecognizers; 0.3.1更新日期：2018-06-01沙盒文件链式封装的代码重构引入AXResult概念，操作结果返回值为AXResult，通过AXResult可以知道存取操作是否成功、失败、是否有错误信息、读取数据的结果等信息。简化ax_dispatch接口1234// 旧的FOUNDATION_EXTERN void ax_dispatch_cancel_operation(dispatch_block_t token);// 新的FOUNDATION_EXTERN void ax_dispatch_cancel(dispatch_block_t token);增加更多弹窗封装接口可以选择从哪个VC弹出命名修改1234// 旧的ax_eachSubview...// 新的ax_allSubview... 0.3.0更新日期：2018-05-29拆分子模块将AXDrawerKit、AXFeedbackKit、AXStatusKit、AXTabKit、AXTableKit、AXThemeKit从AXKit中分离出来，单独维护。日志获取所有日志的接口，将获取到的日志按时间倒序排列。 0.2.2更新日期：2018-04-09AXTableView新增接口123456- (AXTableModelType *)model;/** 重新获取数据源 */- (void)reloadDataSource:(void (^)(AXTableModelType *model))completion;NSObject获取所有子类123456/** 获取所有子类 @return 所有子类 */+ (NSArray *)ax_allSubclasses;新增侧滑抽屉视图框架AXDrawerKit详见API Reference。 0.2.1更新日期：2018-03-03动画播放时允许交互相关代码：123- (void)ax_animatedScaleIn:(CGFloat)scale duration:(NSTimeInterval)duration completion:(void (^)(BOOL finished))completion;- (void)ax_animatedScale:(CGFloat)scale duration:(NSTimeInterval)duration completion:(void (^)(BOOL finished))completion;- (void)ax_animatedScaleOut:(CGFloat)scale duration:(NSTimeInterval)duration completion:(void (^)(BOOL finished))completion打开app内置Safari浏览器1234567891011121314/** 打开app内置Safari浏览器 @param URL 网址 */+ (void)ax_presentSafariViewControllerWithURL:(NSURL *)URL;/** 打开app内置Safari浏览器 @param URL 网址 @param viewController 从哪个视图控制器，传入nil可从根控制器打开 */+ (void)ax_presentSafariViewControllerWithURL:(NSURL *)URL fromViewController:(nullable UIViewController *)viewController;AXTableModel增加增加了cmd属性，用于传递一些额外的参数或指令。修改了AXTableView数据源接口1234// 旧的- (void)ax_tableViewDataSource:(void (^)(AXTableModelType *dataSource))dataSource;// 新的- (void)ax_tableView:(AXTableViewType *)tableView dataSource:(void (^)(AXTableModelType *dataSource))dataSource;增加了新的接口，方便更自由地设置模型，自定义或者监控TableView的加载12- (void)ax_tableView:(AXTableViewType *)tableView willSetModel:(AXTableRowModelType *)model forRowAtIndexPath:(NSIndexPath *)indexPath;- (void)ax_tableView:(AXTableViewType *)tableView didSetModelForCell:(AXTableViewCellType *)cell atIndexPath:(NSIndexPath *)indexPath;修改了获取model的接口1234567891011// SectionModel// 旧的- (AXTableSectionModelType *)tableViewSectionModelForIndexPath:(NSIndexPath *)indexPath;// 新的- (AXTableSectionModelType *)modelForSection:(NSInteger)section;// RowModel// 旧的- (AXTableRowModelType *)tableViewRowModelForIndexPath:(NSIndexPath *)indexPath;// 新的- (AXTableRowModelType *)modelForRowAtIndexPath:(NSIndexPath *)indexPath; 0.2.0更新日期：2018-01-24优化NSDictionary解析为从字典中解析字典和数组的方法增加json字符串的处理。增加了若干种解析方法。NSDateFormatter日期解析由字符串生成日期由日期生成指定格式的字符串日期的计算方法（链式语法）日期的计算使用方法如下：12NSDate *date = [NSDate date];date = date.addYears(1).addMonths(2).addDays(-7); 0.1.9更新日期：2018-01-12AXCachedLog缓存日志的方法宏由AXLogToCachePath()改为AXCachedLogOBJ()，并提供了AXCachedLogData()，AXCachedLogError()接口。这3个接口本质相同，相当于调用了AXCachedLogWithType()，并且LogTypeString参数对应分别为@&quot;app&quot;、@&quot;data&quot;、@&quot;error&quot;。当然LogTypeString参数可以是任何字符串，如@&quot;abc&quot;，那么日志的文件名为yyyy-MM-dd-abc.log，yyyy-MM-dd为写日志的日期。AXLog类名改为AXCachedLog由于现在一天可以有多个log文件，所以获取最近几条日志的方法改为获取最近几天的日志：123+ (nullable NSArray&lt;NSString *&gt; *)getLatestCachedLogPathWithDateCount:(NSUInteger)count;// 旧接口+ (nullable NSArray&lt;NSString *&gt; *)getLatestCachedLogPathWithCount:(NSUInteger)count; 0.1.8更新日期：2018-01-04字符串扩展readArray()、readDictionary()、readJson()不再自动补全文件后缀；readTxt()改为readString()，并且不再自动补全文件后缀。layer快速设置阴影12345678/** 自定义阴影 @param opacity 透明度 @param radius 半径 @param offset 偏移 */- (void)ax_customShadowWithOpacity:(CGFloat)opacity radius:(CGFloat)radius offset:(CGSize)offset;颜色渐变动画123456789101112131415161718192021/** 颜色渐变动画 @param color 颜色 @param duration 持续时间 @param repeatDuration 重复时间 */- (void)ax_animatedColor:(UIColor *)color duration:(CFTimeInterval)duration repeatDuration:(CFTimeInterval)repeatDuration;/** 颜色渐变动画 @param color 颜色 @param duration 持续时间 @param repeatCount 重复次数 */- (void)ax_animatedColor:(UIColor *)color duration:(CFTimeInterval)duration repeatCount:(float)repeatCount;/** 清除颜色渐变动画 */- (void)ax_removeColorAnimation;UIViewControllerFromStringUIViewControllerFromString(NSString *name)改为UIViewControllerNamed(NSString *name)，与相似的接口UIImageNamed(NSString *name)保持格式一致。类属性把一些获取常量的方法换成了类属性，方便在Swift中使用（在OC中调用不受影响）。如：1234/** 蓝色 */@property (class, strong, readonly, nonatomic) UIColor *ax_blue;旧接口是：1234/** 蓝色 */+ (UIColor *)ax_blue; 0.1.7更新日期：2017-12-22优化状态栏layer显示效果删除[UIDevice currentDevice].isIphoneX判断方法，使用CGConstGetScreenSizeEnum() == kCGScreenSizeEnum_5_8判断是不是iPhone X。将获取设备常量的函数统一为CGConstGet...，并定义了宏k...。例如获取状态栏高度的函数CGConstGetStatusBarHeight()的宏为kStatusBarHeight。 0.1.6更新日期：2017-12-05更新了docs。 0.1.5更新日期：2017-12-05update feedback 0.1.4更新日期：2017-12-05FeedbackKit优化了邮件反馈方法，通过EmailManager单例实现。 0.1.3更新日期：2017-12-01StatusKit优化了通知栏进度显示增加了显示、隐藏动画 0.1.2更新日期：2017-11-28优化优化了主题字体管理日志缓存日志支持按版本分类保存修复了日志时区问题 0.1.1更新日期：2017-11-21FeedbackKit1#import &lt;AXKit/FeedbackKit.h&gt;封装了发送Email的方法StatusKit1#import &lt;AXKit/FeedbackKit.h&gt;将与状态栏相关的功能提取至StatusKit，如自定义状态栏颜色、通知消息等ThemeKit1#import &lt;AXKit/FeedbackKit.h&gt;换肤框架，主题色、字体自定义 0.1.0更新日期：2017-11-18Log由每次启动产生一个log文件改为每天产生一个log文件。NSString增加了比较版本号的功能NSDate增加了日期转8位数的整型值字符串的方法 0.0.23更新日期：2017-11-13fix修复了AXRootViewController()失效的问题 0.0.22更新日期：2017-11-13fix修复了状态栏消息在iPhone X显示错位问题CALayer增加了颜色渐变动画的方法 0.0.21更新日期：2017-11-06状态栏增加了获取状态栏、显示状态栏消息的方法 0.0.20更新日期：2017-10-31优化了日志保存和读取策略 0.0.19更新日期：2017-10-26增加了保存日志到沙盒文件的方法 0.0.18更新日期：2017-10-25UIApplication封装了跳转到设置、蓝牙等的方法 0.0.17更新日期：2017-10-13NSArray封装了获取数组最大值、最小值、平均值、去重的方法GCD封装了可取消的延迟函数NSString增加了拼接字符串到沙盒文件的方法规范了部分沙盒文件接口。 0.0.16更新日期：2017-10-09增加了确保索引值在数组内的函数 0.0.15更新日期：2017-09-27Addition封装了#IF DEBUG宏增加了把图片剪裁为正方形的函数docs增加了自动生成文档html页面的sh脚本项目主页：https://xaoxuu.com/wiki/axkit 0.0.14更新日期：2017-08-17DEBUG宏的简单封装函数很简单，能够提供一点便利，毕竟函数的调用比写宏更加快捷而且不易出错。声明：123456/** 只在debug模式下运行的函数 @param debug debug操作 */FOUNDATION_EXTERN void ax_debug_only(void (^debug)());实现：1234567inline void ax_debug_only(void (^debug)())&#123;#ifdef DEBUG if (debug) &#123; debug(); &#125;#endif&#125; 0.0.13更新日期：2017-08-15ChangesUIAlertController删除了两个使用频率低的接口更改这两个接口使其能够返回实例：12345678910111213141516/** 弹窗(标题+消息+自定义按钮)（如果action为nil，则只有一个确定按钮） @param title 标题 @param message 消息 @param action 按钮 @return 返回alert对象 */+ (instancetype)ax_showAlertWithTitle:(nullable NSString *)title message:(nullable NSString *)message actions:(void (^ __nullable)(UIAlertController *alert))actions;/** 弹窗(标题+消息+自定义按钮)（如果action为nil，则只有一个确定按钮） @param title 标题 @param message 消息 @param action 按钮 @return 返回alert对象 */+ (instancetype)ax_showActionSheetWithTitle:(nullable NSString *)title message:(nullable NSString *)message actions:(void (^ __nullable)(UIAlertController *alert))actions; 0.0.12更新日期：2017-07-20Fixed Bugs修复了找不到AXKit.bundle资源的bug。 0.0.11更新日期：2017-06-30Additions移除所有偏好设置1+ (void)ax_removeDefaultPersistentDomain;获取启动图片12+ (NSString *)ax_appLaunchImagePath;+ (UIImage *)ax_appLaunchImage;UITextField placeholder颜色1FOUNDATION_EXTERN NSArray *NSClassGetAllSubclasses(Class cls);NSUserDefaults保存图片123456789// 保存图片[NSUserDefaults ax_setImage:newImage forKey:@\"AVATAR\"];// 读取图片[NSUserDefaults ax_readImageForKey:@\"AVATAR\" completion:^(UIImage * _Nonnull image) &#123; self.avatar.image = image;&#125; failure:^(NSError * _Nonnull error) &#123; AXLogOBJ(error);&#125;];UIAlertController创建ActionSheet123+ (void)ax_showActionSheetWithTitle:(nullable NSString *)title message:(nullable NSString *)message action:(void (^ __nullable)(UIAlertController *alert))action;+ (void)ax_showActionSheetWithTitle:(nullable NSString *)title message:(nullable NSString *)message ok:(void (^ __nullable)(UIAlertAction *sender))ok;Changes更改了默认颜色配置方法123456// @xaoxuu: 配置主题色[[UIColorManager sharedInstance] configDefaultTheme:^(UIThemeColorModel * _Nonnull color) &#123; color.theme = [UIColor md_amber]; color.accent = [UIColor md_lime]; color.background = [UIColor whiteColor];&#125;]; 0.0.10更新日期：2017-06-03Additions将视图转换成图片1UIImage *img = UIImageFromView(self.view);更方便的布局view为view增加了快速获取bounds center的方法：1234#pragma mark bounds center@property (nonatomic, readonly, assign) CGPoint boundsCenter;@property (nonatomic, readonly, assign) CGFloat boundsCenterX;@property (nonatomic, readonly, assign) CGFloat boundsCenterY;比较两个版本新旧对比服务器端的版本（remoteVersion）和当前app版本（[NSBundle ax_appVersion]）123456789VersionLaterThanVersion(remoteVersion, [NSBundle ax_appVersion], ^(BOOL later) &#123; if (later) &#123; // @xaoxuu: 有新版本 &#125; else &#123; // @xaoxuu: 有新版本 &#125;&#125;, ^(NSError * _Nonnull error) &#123; AXLogError(error);&#125;);Changes更改了一些layer相关设置的接口1234567想要实现圆角阴影效果可以这样：UIView *view = [[UIView alloc] initWithFrame:CGRectMake(100, 100, 100, 100)];view.backgroundColor = [UIColor yellowColor];// 圆角半径30，阴影为向下投射的浮起样式[view.layer ax_cornerRadius:30 shadow:LayerShadowDownFloat];[self.view addSubview:view];优化了Error的日志输出版式1234567891011NSError *error = [NSError ax_errorWithMaker:^(NSErrorMaker * _Nonnull error) &#123; error.domain = @\"my domain\"; error.code = 123; error.localizedDescription = @\"desc123123\"; error.localizedFailureReason = @\"reason123123\"; error.localizedRecoverySuggestion = @\"suggestion123123\"; [error.localizedRecoveryOptions addObject:@\"1. xxx\"]; [error.localizedRecoveryOptions addObject:@\"2. xxx\"];&#125;];AXLogError(error); 0.0.9更新日期：2017-05-29Additions快速创建UIActivityIndicatorView12345UIActivityIndicatorView *indicator = [UIActivityIndicatorView defaultIndicator];// @xaoxuu: 显示到self.view中心indicator.show(self.view);// @xaoxuu: 隐藏indicator.hide();UIAlertController++1234567// @xaoxuu: 一行代码的消息弹窗[UIAlertController ax_showAlertWithTitle:@\"Hello Alert\" message:@\"这是用一行代码弹出来的只有一个按钮的窗口\" action:nil];// @xaoxuu: 最常用的【取消】+【确定】弹窗[UIAlertController ax_showAlertWithTitle:@\"Hello Alert\" message:@\"这是用一个方法弹出来的有两个按钮的窗口\" ok:^(UIAlertAction * _Nonnull sender) &#123; AXLogFormat(@\"点击了OK按钮\");&#125;]; 0.0.8更新日期：2017-05-20AdditionsNSString+123- (nullable NSURL *)absoluteURL;- (BOOL)isURLString;- (nullable UIImage *)image;隐藏系统自带的NavigationBar/TabBar分割线判断颜色是深色还是浅色 0.0.7更新日期：2017-05-08AdditionsUIImageViewWithImageNamed更灵活的popViewController #14NSUserDefaults+ #13代码冷却 : cooldown #15 0.0.6更新日期：2017-04-28Additionslocalize all subviews #8NSStringFromBool(BOOL x) / NSStringFromFloat(float x) #9hidesBottomBarWhenPushed #10ax_eachSubviewWith... #6UIViewFromNibNamed给UIImageView填充个颜色 #5Changesax_pushViewControllerNamed is moved from UIViewController+AXExtension to UINavigationController+AXExtension.NSStringFromInt32(int x) is deprecated and replaced by NSStringFromInt(int x). 0.0.5更新日期：2017-04-25增加了ax_cacheObject，与ax_cacheValue功能不同。区别参考系统的setObject和setValue。增加了ax_removeObjectForKey方法。增加了NSStringFromASCIIValue(unsigned char ASCIIValue)函数，快速将ASCII码值转换成OC字符串。增加了NSInteger类型和CGFloat类型的取值范围。增加了确保值在某个范围的方法，示例：123456// 希望value在0~1之间CGFloat value = sender.text.floatValue;CGFloat result = AXFloatInRange(value, AXFloatRangeMake(0, 1));// 当value取值小于0时，result为0；// 当value取值大于0小于1时，result为value；// 当value取值大于1时，result为1； 0.0.4更新日期：2017-04-14补充了部分接口的注释NSString分类增加了拼接字符串的快捷方法修改了定时器重启方法使之更符合实际功能UIBarButtonItem增加了两个baritem方法UIColor更改了获取颜色某个通道的方法UINavigationController增加了配置全局hidesBottomBarWhenPushed的方法UIResponder增加了获取RootVC的方法UIViewController、UIView、UIButton等类中均可使用self.rootVC来获取它所在的根控制器 0.0.3更新日期：2017-04-13增加了对UIControl子类的支持12345// 0.0.2- (void)ax_addTouchUpInsideHandler:(void (^)(UIButton *sender))handler;// 0.0.3（自定义的UIButton子类也可以使用此方法接受回调）- (void)ax_addTouchUpInsideHandler:(void (^)(__kindof UIButton *sender))handler;优化了NSStringFrom…函数的实现123456789// 0.0.2NSString *NSStringFromCGFloat(CGFloat x)&#123; return [NSString stringWithFormat:@\"%lf\",x];&#125;// 0.0.3NSString *NSStringFromCGFloat(CGFloat x)&#123; return [NSNumber numberWithDouble:x].stringValue;&#125; 0.0.2更新日期：2017-03-17注释掉了用AppDelegate获取更控制器的方法。因为在Pods中无法导入”AppDelegate.h”123456#import \"AppDelegate.h\"- (UIViewController *)rootVC&#123; AppDelegate *ad = (AppDelegate *)[UIApplication sharedApplication].delegate; return ad.window.rootViewController;&#125; 0.0.1更新日期：2017-03-17由原ATKit改名，原仓库已停止维护。项目官网：https://xaoxuu.com/wiki/axkit本文最后更新于：2019-01-02 星期三评论var GUEST_INFO=[\"nick\",\"mail\",\"link\"],guest_info=\"nick,mail,link\".split(\",\").filter(function(i){return-1"},{"title":"","date":"2019-01-23T05:51:04.783Z","updated":"2019-01-23T05:51:04.783Z","comments":true,"path":"wiki/heartmate/1.1.1/index.html","permalink":"https://singularityzed.github.io/wiki/heartmate/1.1.1/index.html","excerpt":"","text":"xaoxuuVue.config.productionTip=!1,window.PAGE_TYPE=\"\" xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件window.location=\"//xaoxuu.com/heartmate/forum/1.1.1/\"本文最后更新于：2018-10-31 星期三评论var GUEST_INFO=[\"nick\",\"mail\",\"link\"],guest_info=\"nick,mail,link\".split(\",\").filter(function(i){return-1"},{"title":"","date":"2019-01-23T05:52:16.427Z","updated":"2019-01-23T05:51:04.787Z","comments":true,"path":"wiki/material-x/changelog/index.html","permalink":"https://singularityzed.github.io/wiki/material-x/changelog/index.html","excerpt":"","text":"Material X | xaoxuuVue.config.productionTip=!1,window.PAGE_TYPE=\"Material X\"Material X xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件Material X开始使用基本配置主题样式页面配置第三方服务使用CDN贡献代码更新日志帮助更新日志1.0.5发布日期 2019-01-18修改Valine评论的字体颜色使之与_color.yml中的配置保持一致。1.0.4发布日期 2019-01-08修改默认字体。修复Disqus评论框占位文字错误的问题。1.0.3发布日期 2019-01-06修复了livere评论无法正常加载的BUG。1.0.2发布日期 2019-01-06由于MobShare无法在HTTPS中使用，主题中针对QQ、QQ空间、微博提供了单独的支持，另外支持二维码的分享按钮，需要安装插件：1npm i -S hexo-helper-qrcode在./config.yml中弃用mob，使用share，字段同之前的mob相似，以下是目前所有支持的：12345678910111213141516share: - id: qq name: QQ好友 img: https://cdn.jsdelivr.net/gh/xaoxuu/assets@19.1.9/logo/128/qq.png - id: qzone name: QQ空间 img: https://cdn.jsdelivr.net/gh/xaoxuu/assets@19.1.9/logo/128/qzone.png - id: qrcode name: 微信 img: https://cdn.jsdelivr.net/gh/xaoxuu/assets@19.1.9/logo/128/wechat.png - id: weibo name: 微博 img: https://cdn.jsdelivr.net/gh/xaoxuu/assets@19.1.9/logo/128/weibo.png - id: qrcode name: QRcode img: https://cdn.jsdelivr.net/gh/xaoxuu/assets@19.1.9/logo/128/qrcode.png1.0.1发布日期 2019-01-02修复了只在第N页置顶第N页的文章的BUG，现在会在第1页置顶全部需要置顶的文章。现在置顶标签的文字可以自定义了。1.0.0发布日期 2019-01-01本文最后更新于：2019-01-18 星期五评论var GUEST_INFO=[\"nick\",\"mail\",\"link\"],guest_info=\"nick,mail,link\".split(\",\").filter(function(i){return-1"},{"title":"","date":"2019-01-23T05:51:04.788Z","updated":"2019-01-23T05:51:04.788Z","comments":true,"path":"wiki/material-x/front-matter/index.html","permalink":"https://singularityzed.github.io/wiki/material-x/front-matter/index.html","excerpt":"","text":"Material X | xaoxuuVue.config.productionTip=!1,window.PAGE_TYPE=\"Material X\"Material X xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件Material X开始使用基本配置主题样式页面配置第三方服务使用CDN贡献代码更新日志帮助页面配置如无特殊说明，本页内容均写在front-matter中。Front-matterFront-matter 是文件最上方以 --- 分隔的区域，用于指定个别文件的变量。【详见官方文档】字段含义值类型默认值layout布局模版String-title标题String-date创建时间Date文件创建时间updated更新日期Date文件修改时间comments开启评论Booltruepermalink覆盖文章网址String-music内部音乐控件详见【music】-keywords页面关键词String-description页面描述String-layout=post时特有的字段：字段含义值类型默认值categories分类String, Array-tag标签String, Array-toc是否生成目录Booltrueexcerpt文章摘要String-recommended_posts显示推荐文章Booltruemathjax是否渲染公式Bool, Stringfalsetop是否置顶Boolfalselayout=links时特有的字段：字段含义值类型默认值links友链详见【links】-布局模板取值含义page独立页面post文章页面links友链页面文章置顶在Front-matter中设置以下值：1top: true如果想自定义置顶标签的文字，可以直接设置为字符串，例如：1top: 近期更新如果想隐藏置顶标签，找到或者添加以下值：12meta: top: false文章分类多个分类有两种关系，一种是层级（等同于文件夹），一种是并列（等同于标签）。多级分类1categories: [分类A, 分类B]或者123categories: - 分类A - 分类B并列分类123categories: - [分类A] - [分类B]多级+并列分类123categories: - [分类A, 分类B] - [分类C, 分类D]专属BGM标题右边显示迷你音乐播放器，支持的字段有：server、type、id，取值详见【第三方服务 -&gt; APlayer】。示例1234567---music: enable: true # true（文章内和文章列表都显示） internal（只在文章内显示） server: netease # netease（网易云音乐）tencent（QQ音乐） xiami（虾米） kugou（酷狗） type: song # song （单曲） album （专辑） playlist （歌单） search （搜索） id: 26664345 # 歌曲/专辑/歌单 ID---实际效果见：《文章专属BGM》文章摘要第一优先级是寻找正文中的&lt;!--more--&gt;，其前面的为摘要，可以显示在文章列表中，后面的是正文。如果没有，则寻找Front-matter中的excerpt字段，以其为摘要。如果还没有，就没有摘要，文章列表会显示全文。如果使用&lt;!-- more --&gt;来实现摘要，则&lt;!-- more --&gt;前后一定要有空行，不然可能导致显示错位。12345这是摘要&lt;!-- more --&gt;这是正文是否开启渲染MathJax取值含义false不渲染，默认值true渲染internal只在文章内部渲染，文章列表中不渲染123---mathjax: true---如果公式仍无法正确渲染可以阅读@MicDZ大神的这篇文章：《在material-x上使用KaTeX》。隐藏meta标签文章顶部和底部的日期、分类、更新日期、标签、分享等属于meta标签。在Front-matter找到或者新增meta，需要隐藏哪个meta标签将其置为false。例如：123456789101112---title: 隐藏meta信息categories: 教程meta: top: false # 这代表隐藏置顶标签，如果本文设置了置顶，就默默置顶 date: false # 这代表隐藏日期标签，不显示发布日期 categories: false # 这代表隐藏分类标签，不显示文章分类 counter: false # 这代表隐藏阅读计数标签，不显示阅读次数 updated: false # 这代表隐藏更新日期标签，不显示文章更新日期 share: false # 这代表隐藏分享标签，不显示分享按钮 tags: false # 这代表隐藏文章标签，不显示文章的tags---本文最后更新于：2019-01-16 星期三评论var GUEST_INFO=[\"nick\",\"mail\",\"link\"],guest_info=\"nick,mail,link\".split(\",\").filter(function(i){return-1"},{"title":"","date":"2019-01-23T05:51:04.784Z","updated":"2019-01-23T05:51:04.784Z","comments":true,"path":"wiki/heartmate/1.1.2/index.html","permalink":"https://singularityzed.github.io/wiki/heartmate/1.1.2/index.html","excerpt":"","text":"xaoxuuVue.config.productionTip=!1,window.PAGE_TYPE=\"\" xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件window.location=\"//xaoxuu.com/heartmate/forum/1.1.2/\"本文最后更新于：2018-10-31 星期三评论var GUEST_INFO=[\"nick\",\"mail\",\"link\"],guest_info=\"nick,mail,link\".split(\",\").filter(function(i){return-1"},{"title":"","date":"2019-01-23T05:51:04.789Z","updated":"2019-01-23T05:51:04.789Z","comments":true,"path":"wiki/material-x/help/index.html","permalink":"https://singularityzed.github.io/wiki/material-x/help/index.html","excerpt":"","text":"Material X | xaoxuuVue.config.productionTip=!1,window.PAGE_TYPE=\"Material X\"Material X xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件Material X开始使用基本配置主题样式页面配置第三方服务使用CDN贡献代码更新日志帮助帮助小提示使用主题的时候，尽量fork主题到自己的GitHub，然后进行修改并使用。这样做的好处是：当主题进行重要更新的时候可以根据需要拉取合并代码，使自己DIY的主题能够通过更新获取BUG修复或者新特性。故障自检如果你发现 无法使用 或者效果与示例有较大区别，可以使用hexo官方提供的用于单元测试的博客应用本主题查看样式是否正常，对比_config.yml文件排查问题。下载单元测试：Hexo官方的单元测试博客： https://github.com/hexojs/hexo-theme-unit-test.git。如果你的系统是macOS，则可以使用hexo.sh脚本一键完成测试。为什么顶部导航栏是空的导航栏要写在./_config.yml中，而不是直接修改主题的themes/material-x/_config.yml文件，详见：#导航栏。更新了主题之后FontAwesome图标变成方块由于最初使用的版本是4.7.0，从2018年11月7号更新后使用5.5.0版本，其命名方式发生了变化：版本命名示例4.7.0&lt;i class=&quot;fab fa-github&quot;&gt;&lt;/i&gt;5.5.0&lt;i class=&quot;fab fa-github&quot;&gt;&lt;/i&gt;由于5.x版本之前前缀始终是：fa，所以主题中写好了前缀，_config.yml中只需要写fa-github即可，但是从5.x版本起，前缀有多种，所以需要写全名，即：fab fa-github这样才能正常显示。所以，你需要去FontAwesome官网搜索图标，复制图标的class字段中的全名，来替换之前的名字。 如下图所示：关于markdown的写法例如不知道怎么显示图片，怎么画表格等等，你可以去这里看《Markdown 语法介绍》，讲的极其详细。关于SEOSEO跟主题之间没有什么耦合，所以主题没有捆绑SEO插件，你需要的话可以自己安装，我安装了以下SEO优化插件：hexo-autonofollowhexo-generator-seo-friendly-sitemap恕不提供Hexo教程关于hexo如何搭建的问题，网上有很多教程，仅仅是查阅官方文档和demo都足够了，所以这方面的问题请不要再来问我了。本文最后更新于：2019-01-02 星期三评论var GUEST_INFO=[\"nick\",\"mail\",\"link\"],guest_info=\"nick,mail,link\".split(\",\").filter(function(i){return-1"},{"title":"","date":"2019-01-23T05:51:04.790Z","updated":"2019-01-23T05:51:04.790Z","comments":true,"path":"wiki/material-x/style/index.html","permalink":"https://singularityzed.github.io/wiki/material-x/style/index.html","excerpt":"","text":"Material X | xaoxuuVue.config.productionTip=!1,window.PAGE_TYPE=\"Material X\"Material X xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件Material X开始使用基本配置主题样式页面配置第三方服务使用CDN贡献代码更新日志帮助主题样式风格源文件字段themes/material-x/_config.ymlstyle默认提供了两种风格，一种是导航栏和标题栏背景是主题色，另一种是导航栏和标题栏背景与下方文本区域同色。示例12# style: material # 导航栏和标题栏背景是主题色style: pure # 导航栏和标题栏背景与文本区域同色字体字号源文件字段功能themes/material-x/source/less/_fonts.less@fontfamily_base、@fontfamily_code、@fontfamily_logofont-family设置自定义字体可以使用本地字体和任意CDN字体。CDN字体的使用方法：在./_config.yml文件中找到或者新增import字段，例如：1234import: link: rel: stylesheet href: https://cdn.jsdelivr.net/gh/xaoxuu/cdn-fonts@master/Ubuntu/Ubuntu-Regular.ttf字体源jsdelivr: @xaoxuu/cdn-fontshttps://fonts.google.com可以自己根据稳定性和速度决定。选好了字体后需要在source/less/_fonts.less中修改font-family。目前主题默认使用的字体源@xaoxuu/cdn-fonts是我专门为存放字体建的一个仓库，由jsdelivr提供CDN服务，目前已经收录20余种精选字体。如果你想添加某个喜爱的字体，可以提交到这里：https://github.com/xaoxuu/cdn-fonts/。字号示例1234567891011121314// base@fontsize_base: 16px;@fontsize_small: @fontsize_base * 0.875;@lineheight_base: 1.7;// title@fontsize_h1: @fontsize_base * 1.5;@fontsize_h2: @fontsize_base * 1.4;@fontsize_h3: @fontsize_base * 1.2;@fontsize_h4: @fontsize_base * 1.1;@fontsize_h5: @fontsize_base * 1;@fontsize_h6: @fontsize_small;// article@fontsize_article_title: @fontsize_h1 * 1.2;@fontsize_article_title_phone: @fontsize_h2;布局尺寸源文件themes/material-x/source/less/_layout.less示例1234567891011121314151617// 间距@gap: 20px;@on_modal_threshold: 680px;@on_phone: 820px;@on_laptop: 990px;@on_desktop: 1200px;// container@width_container: 1200px;// post@width_post_max: 980px;// 侧边栏宽度@width_sidebar: 285px;// 搜索框的宽度，建议和侧边栏宽度保持一致@width_searchbar: @width_sidebar;// 一个cell的高度@height_cell: 36px;导航栏示例1234567// 导航栏高度@height_navbar: 54px;@fontsize_logo: 1.3em;@fontsize_header_switcher: 1.3em;@fontsize_header: 1em;// 定位条和页面加载的进度条的高度@loading_height: 4px;圆角示例123456// 0px: 极端，2px：硬朗，4px：常规，8px：圆润，16px：温柔@border_radius: 8px; // 圆角半径，可以根据心情随时调整风格@border_radius_left_line: 4px; // 左边的竖线的宽度@border_radius_code_block: 4px; // 代码块的圆角及其滚动条的宽度@border_radius_searchbar: 4px; // 搜索框的圆角半径，可以根据心情随时调整风格配色源文件themes/material-x/source/less/_color.less一个简单的例子12345678// 网页背景颜色@theme_background: #EFEFEF;// @theme_background: #454545; // 暗色主题// 主题色@theme_main: #1BC3FB;// 卡片背景颜色@theme_cardbg: white;// @theme_cardbg: #555; // 暗色主题如果你想更自由地定制颜色，可以修改这里的几项123456789101112131415161718192021222324// 背景色 ----------------// 导航栏背景，默认和主题色保持一致@color_bg_navbar: @theme_main;// 代码的背景色@color_bg_code: fade(@color_md_blue, 10%);// 代码块的背景色@color_bg_code_block: fade(@color_md_blue, 10%);// 引用的颜色@color_bg_quote: @color_mac_maximize;// 选中部分文字的背景颜色@color_bg_selection: fade(@color_md_blue, 20%);// 文字颜色 ----------------// 标题文字颜色（h1/h2）@color_text_header: @theme_main;// 链接颜色@color_text_link: @color_md_deep_orange;// 链接高亮颜色@color_text_highlight: @theme_main;// 在主题色中显示的文本（一般为白或深灰）@color_text_in_header: white;// 正文文字颜色@color_text_main: @dark;// @color_text_main: white; // 暗色主题阴影源文件themes/material-x/source/less/_defines.less示例1234// 卡片正常状态的阴影@boxshadow_card_normal: @boxshadow_base_1, @boxshadow_base_2;// 卡片漂浮起来时的阴影@boxshadow_card_raised: @boxshadow_base_2, @boxshadow_base_4, @boxshadow_base_8, @boxshadow_base_16;本文最后更新于：2019-01-08 星期二评论var GUEST_INFO=[\"nick\",\"mail\",\"link\"],guest_info=\"nick,mail,link\".split(\",\").filter(function(i){return-1"},{"title":"","date":"2019-01-23T05:51:04.791Z","updated":"2019-01-23T05:51:04.791Z","comments":true,"path":"wiki/material-x/submit/index.html","permalink":"https://singularityzed.github.io/wiki/material-x/submit/index.html","excerpt":"","text":"Material X | xaoxuuVue.config.productionTip=!1,window.PAGE_TYPE=\"Material X\"Material X xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件Material X开始使用基本配置主题样式页面配置第三方服务使用CDN贡献代码更新日志帮助贡献代码如果你需要主题支持某个第三方服务，并且自己已经实现了，欢迎提交代码👏。集成原则重要默认不开启，不加载。在主题的_config.yml中的services字段下提供开关，仅支持true和false两种取值。在博客主目录的_config.yml中提供key等信息。如果需要有默认值，可以写在主题的_config.yml中，与博主相关的内容一律写在博客主目录的_config.yml中。命名规范重要全部用小写英文字母加_。命名尽量简单又没有歧义。不要起容易重复和引起冲突的字段名。除了专有名词中含有数字的情况外，不要使用数字。功能相同的部分尽量使用同一个字段名，例如已经有avatar来表示头像了，其他地方如需使用头像，也要使用avatar来作为字段名而不要新增其它名称相近的字段如head_img、head。正确的写法12# 我要集成的某个服务my_service:错误的写法1234# 我要集成的某个服务myService:myService1:service:使用CDN建议如果这个服务需要添加js脚本，请尽量提供两种选择，本地和CDN，具体做法仿照app.js。如果官方的CDN速度比较慢，可以去 jsdelivr 查找，如果没有，请 fork cdn-material-x 这个项目，然后把js文件添加到js/文件夹中，提交代码，提交新的版本，版本号顺延。然后去 这里 获取js文件的CDN链接。如果你嫌麻烦，就只提供一种js吧，我有时间了再改。多重开关建议主题的_config.yml中的services字段下提供默认为true的开关。page的Front-matter中提供开关。如果需要配置key等信息，需要在博客主目录的_config.yml中提供。根据默认不开启不加载原则，必须至少有一个地方在不设置的情况下是false。示例1例如评论系统，在主题的_config.yml中的services字段下有个comments代表所有评论功能的开关，默认值是true。page的Front-matter中如果不提供comments，就也认为是true。现在博主要使用valine评论系统，那么只需要在博客主目录的_config.yml中提供必要的key等信息，就可以直接使用评论功能了。示例2又如分享，在主题的_config.yml中的services字段下有个share代表所有分享功能的开关，默认值是true。page的Front-matter中如果不提供share，就也认为是true。现在博主要使用mob分享，那么只需要在博客主目录的_config.yml中提供必要的key等信息，就可以直接使用分享功能了。如果你嫌麻烦，就按照集成原则来吧，这里的规范我再完善。本文最后更新于：2019-01-02 星期三评论var GUEST_INFO=[\"nick\",\"mail\",\"link\"],guest_info=\"nick,mail,link\".split(\",\").filter(function(i){return-1"},{"title":"","date":"2019-01-23T05:51:04.792Z","updated":"2019-01-23T05:51:04.792Z","comments":true,"path":"wiki/material-x/third-party-services/index.html","permalink":"https://singularityzed.github.io/wiki/material-x/third-party-services/index.html","excerpt":"","text":"Material X | xaoxuuVue.config.productionTip=!1,window.PAGE_TYPE=\"Material X\"Material X xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件Material X开始使用基本配置主题样式页面配置第三方服务使用CDN贡献代码更新日志帮助第三方服务今日诗词在侧边栏author小部件中找到或者新增jinrishici字段。取值含义false不加载，不显示true显示，当请求失败时显示config.titleString显示，当请求失败时显示String示例123456# 侧边栏小部件widgets: - widget: author avatar: https://cdn.jsdelivr.net/gh/xaoxuu/assets@18.12.27/avatar/avatar.png jinrishici: 柳暗花明又一村 social: trueAPlayer播放器字段含义是否必须值类型默认值color音乐控件的主题色否HEX颜色值字符串-volume默认音量否0~1之间的浮点数0.7mode播放模式否枚举，详见【mode】circulationserver服务器是枚举，详见【server】-type表明id值是单曲、专辑还是歌单是枚举，详见【type】-id列表id是String‘’mode：取值含义random随机single单曲order列表顺序circulation列表循环server：取值含义netease网易云tencentQQ音乐xiami虾米kugou酷狗type：取值含义song单曲album专辑playlist播放列表分享MobShare（1.0.2已弃用）源文件相关字段功能./_config.ymlmobmob平台API配置mob字段含义值类型app_key你的MobSDK的appkeyStringlist你需要分享的平台配置Arraylist字段含义是否id平台ID是name分享按钮的title否icon分享按钮的图标否img分享按钮的图片否其中，icon和img只能有一个。平台名称平台ID新浪微博weibo微信weixinQQ空间qzoneQQ好友qq豆瓣网doubanFacebookfacebookTwittertwitterPocketpocketGoogle+google有道云笔记youdaoTumblrtumblrInstapaperinstapaperLinkedinlinkedin示例123456789mob: app_key: xxxxxxxxxx list: - id: weibo name: 微博 img: https://cdn.jsdelivr.net/gh/xaoxuu/volantis@1.0/img/tieba/喷.png - id: weixin name: 微信 img: https://cdn.jsdelivr.net/gh/xaoxuu/volantis@1.0/img/tieba/what.png使用主题内置的分享功能源文件相关字段功能./_config.ymlshare分享按钮配置字段含义是否id平台ID是name分享按钮的title否icon分享按钮的图标否img分享按钮的图片否其中，icon和img只能有一个。平台名称平台ID新浪微博weiboQQ空间qzoneQQ好友qq示例12345678910111213141516share: - id: qq name: QQ好友 img: https://cdn.jsdelivr.net/gh/xaoxuu/assets@19.1.9/logo/128/qq.png - id: qzone name: QQ空间 img: https://cdn.jsdelivr.net/gh/xaoxuu/assets@19.1.9/logo/128/qzone.png - id: qrcode name: 微信 img: https://cdn.jsdelivr.net/gh/xaoxuu/assets@19.1.9/logo/128/wechat.png - id: weibo name: 微博 img: https://cdn.jsdelivr.net/gh/xaoxuu/assets@19.1.9/logo/128/weibo.png - id: qrcode name: QRcode img: https://cdn.jsdelivr.net/gh/xaoxuu/assets@19.1.9/logo/128/qrcode.pngQRcode上例中的生成QRcode链接分享需要安装插件：1npm i -S hexo-helper-qrcode目前微信使用的是二维码分享，而二维码目前是直接在新页面打开图片文件，在Chrome上被禁止了，所以追求体验的用户可以先不要用微信和二维码。评论系统源文件相关字段功能./_config.ymldisqus_shortname或者valine或者livere_uid全局是否支持评论系统某篇文章.mdcomments某篇文章下方是否显示评论提供3种可选，如果你使用其他的评论系统，请自己修改主题。Disqus官网： https://disqus.com/示例12# disqus评论disqus_shortname: #你的disqus的shortname#Valine官网： https://valine.js.org示例123456789101112# valinevaline: enable: true # 如果你想用Valine评论系统，请设置enable为true app_id: # 必填 app_key: # 必填 guest_info: nick,mail,link #valine comment header info placeholder: 快来评论吧~ # valine comment input placeholder(like: Please leave your footprints ) avatar: mp # gravatar style https://valine.js.org/avatar pageSize: 10 # comment list page size verify: false # valine verify code (true/false) notify: false # valine mail notify (true/false) lang: zh-cn其中，placeholder支持在Front-matter中设置。例如12valine: placeholder: 你觉得xxx怎么样呢？也可以通过设置valine.path实现多个页面共用一个评论框。例如12valine: path: /wiki/material-x/Volantis这是我基于Valine修改过的版本，增加了若干表情，禁止匿名评论。主题已经默认开启，配置方法和valine一模一样，如果需要使用原版valine，需要在主题的_config.yml文件中找到services字段，将其中的volantis:true注释掉。Livere官网： http://www.laibili.com.cn/示例12# 来必力评论livere_uid: #你的livere的uid在这里查看你的uid：https://livere.com/insight/myCode，在【代码管理 -&gt; 一般网站】中找到如下这段代码，其中 data-uid 中的内容就是你的 livere_uid。123&lt;!-- 来必力City版安装代码 --&gt;&lt;div id=\"lv-container\" data-id=\"city\" data-uid=\"你的livere的uid\"&gt;...推荐文章安装和配置推荐文章插件源文件相关字段功能themes/material-x/_config.ymlrecommended_posts全局是否支持推荐文章如果你不想显示推荐文章，可以卸载 hexo-recommended-posts 这个依赖包。示例12345678910# 推荐文章recommended_posts: autoDisplay: false # 自动在文章底部显示推荐文章，如果你使用Material-X主题，这里要设置为false。 server: https://api.truelaurel.com # 后端推荐服务器地址 timeoutInMillis: 10000 # 服务时长，超过此时长，则使用离线推荐模式 excludePattern: [] titleHtml: &lt;h4&gt;推荐文章&lt;/h4&gt; #自定义标题 internalLinks: 3 # 内部文章数量 externalLinks: 2 # 外部文章数量 fixedNumber: false注意：autoDisplay: false 这一项不要修改，因为自动显示效果不佳，我已经在主题里给它设置显示位置了。是否显示推荐文章源文件字段默认值功能某篇文章.mdrecommended_poststrue某篇文章下方是否显示推荐文章如果主题配置中没有提供recommended_posts，则这里的设置无效。示例123---recommended_posts: false---分析与统计默认支持不蒜子的访问统计，可以添加百度统计、以leancloud为后端的阅读统计。百度统计源文件相关字段功能./_config.ymlbaidu_analytics_key百度统计的keyGoogle Analytics源文件相关字段功能./_config.ymlgoogle_analytics_keyGoogle Analytics的key./_config.ymlroot_domain域名本文最后更新于：2019-01-08 星期二评论var GUEST_INFO=[\"nick\",\"mail\",\"link\"],guest_info=\"nick,mail,link\".split(\",\").filter(function(i){return-1"},{"title":"","date":"2019-01-23T05:51:04.794Z","updated":"2019-01-23T05:51:04.794Z","comments":true,"path":"wiki/material-x/usecdn/index.html","permalink":"https://singularityzed.github.io/wiki/material-x/usecdn/index.html","excerpt":"","text":"Material X | xaoxuuVue.config.productionTip=!1,window.PAGE_TYPE=\"Material X\"Material X xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件Material X开始使用基本配置主题样式页面配置第三方服务使用CDN贡献代码更新日志帮助使用CDN对于大部分将博客deploy到GitHub的用户来说，直接加载本地资源速度比较慢，可以使用jsdelivr为开源项目提供的CDN服务。按需使用在博客主目录的./_config.yml文件中找到或者新增theme_cdn字段。取值含义适用场景theme_cdn: false不使用CDN自己的服务器比较快。theme_cdn: true使用主题默认托管到GitHub，没有DIY主题。theme_cdn: 你自己的CDN链接使用其他CDN托管到GitHub，对主题进行了DIY。重要的提示!!!如果你使用CDN，那么就意味着DIY变得比较麻烦，直接更改本地的文件是没用的。如果你想在自己DIY主题的同时方便使用免费的CDN，可以fork这个项目github.com/xaoxuu/cdn-material-x，并在主题的config中修改theme_cdn字段的链接为自己的CDN仓库。本文最后更新于：2019-01-08 星期二评论var GUEST_INFO=[\"nick\",\"mail\",\"link\"],guest_info=\"nick,mail,link\".split(\",\").filter(function(i){return-1"},{"title":"","date":"2019-01-23T05:51:04.788Z","updated":"2019-01-23T05:51:04.788Z","comments":true,"path":"wiki/material-x/config/index.html","permalink":"https://singularityzed.github.io/wiki/material-x/config/index.html","excerpt":"","text":"Material X | xaoxuuVue.config.productionTip=!1,window.PAGE_TYPE=\"Material X\"Material X xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件xaoxuu&nbsp;项目iOS开源库AXKitNoticeBoardiOS应用程序Heart MateSmartLampWindows应用程序NEXUSHexo博客主题Material XShell实用脚本hexo.shpodspec.shvim-cn.sh&nbsp;博客&nbsp;归档&nbsp;关于&nbsp;更多&nbsp;书签&nbsp;下载&nbsp;GitHub&nbsp;邮件Material X开始使用基本配置主题样式页面配置第三方服务使用CDN贡献代码更新日志帮助基本配置语言在./_config.yml中找到或者新增language，例如：12345language:- zh-CN- en- zh-HK- zh-TW博客将按照给定的优先级显示语言，目前支持的语言只有这4中，如需其他语言，欢迎提供翻译。站点信息在./_config.yml中找到或新增以下这些字段：字段含义是否必须title标题是import全局导入否importimport 是个功能强大的字段，可以在无需修改主题文件的情况下在head和body中添加各种标签。目前支持4个字段，meta和link对应head中的&lt;meta&gt;和&lt;link&gt;标签。css可以在head中导入css文件，js可以在body末尾导入js文件。（如果还有什么需求可以在下方留言）这是我的import示例：123456789101112131415161718192021222324252627import: css: js: meta: - name: \"theme-color\" content: \"#f24e32\" - name: \"msapplication-TileColor\" content: \"#f24e32\" - name: \"msapplication-config\" content: \"https://cdn.jsdelivr.net/gh/xaoxuu/assets@18.12.27/favicon/favicons/browserconfig.xml\" link: - rel: 'shortcut icon' type: 'image/x-icon' href: 'https://cdn.jsdelivr.net/gh/xaoxuu/assets@18.12.27/favicon/favicon.ico' - rel: 'icon' type: 'image/x-icon' sizes: '32x32' href: 'https://cdn.jsdelivr.net/gh/xaoxuu/assets@18.12.27/favicon/favicons/favicon-32x32.png' - rel: 'apple-touch-icon' type: 'image/png' sizes: '180x180' href: 'https://cdn.jsdelivr.net/gh/xaoxuu/assets@18.12.27/favicon/favicons/apple-touch-icon.png' - rel: 'mask-icon' href: 'https://cdn.jsdelivr.net/gh/xaoxuu/assets@18.12.27/favicon/favicons/safari-pinned-tab.svg' color: '#f24e32' - rel: 'manifest' href: 'https://cdn.jsdelivr.net/gh/xaoxuu/assets@18.12.27/favicon/favicons/site.webmanifest'社交信息源文件相关字段功能./_config.ymlsocial社交信息具体内容示例12345678# 页脚社交信息social: - icon: fas fa-envelope url: mailto:me@xaoxuu.com - icon: fab fa-github url: https://github.com/xaoxuu - icon: fas fa-music url: https://music.163.com/#/user/home?id=63035382这些社交按钮也会同时出现在侧边栏头像下方，可以在侧边栏的配置中设置不显示。导航栏源文件相关字段./_config.ymlnav_menu示例1234567891011121314# 导航栏，建议以/结尾，少一次301重定向。nav_menu: - name: home icon: fas fa-home url: https://xaoxuu.com/ - name: blogs icon: fas fa-rss url: / - name: archives icon: fas fa-archive url: archives/ - name: friends icon: fas fa-users url: friends/其中 icon 是 fontawesome 图标名，你要显示什么图标，去 fontawesome.com 找免费版的就可以了。侧边栏源文件相关字段./_config.ymlwidgets新的侧边栏小部件显示什么、显示多少个、顺序如何完全由博主自定义，写在./_config.yml中。widgets为数组，按照给定的顺序显示。widget有以下几种：取值含义author博主信息小部件category文章分类小部件tagcloud标签云小部件toc文章目录小部件music音乐小部件plain纯文本小部件list列表小部件所有侧边栏通用的字段字段含义是否必须值类型默认值widget表示这个小部件是什么类型是详见【widget枚举值】plainenable是否启用否Booltrueicon左上角的图标否String‘’title标题否String‘’more右上角的按钮否详见【more】-more：字段含义是否必须icon按钮图标是url按钮的链接是animate按钮hover时的动画否animate：取值含义rotate90顺时针旋转90度博主信息小部件博主信息小部件不支持上述的通用字段中的icon、title和more，以下只显示博主信息小部件特有字段：字段含义是否必须值类型默认值avatar头像否String‘’title标题否String‘’body正文否String‘’social社交信息否Boolfalse纯文本小部件字段含义是否必须值类型默认值widget表示这个小部件是什么类型否必须是’plain’plainbody正文内容，支持markdown语法。否markdown‘’列表小部件字段含义是否必须值类型默认值widget表示这个小部件是什么类型是必须是’list’plainrows每一行元素否详见【rows】-rows：字段含义是否必须值类型默认值name名称是String‘’img方形图片否，不设置时是空白String‘’avatar圆形图片否，不设置时是空白String‘’icon图标否，不设置时是空白String‘’url链接是String‘’desc描述文字否String‘’注意：一行的img、avatar和icon字段如果提供了多个，最多只会显示一个。文章分类小部件字段含义是否必须值类型默认值widget表示这个小部件是什么类型是必须是’category’plain标签云小部件字段含义是否必须值类型默认值widget表示这个小部件是什么类型是必须是’tagcloud’plain音乐小部件字段含义是否必须值类型默认值widget表示这个小部件是什么类型是必须是’music’plain字段以及取值详见【第三方服务 -&gt; APlayer】TOC目录小部件没有特有字段，并且不支持通用字段中的more，因为其右上角的按钮具有特殊作用。原来的友链列表已经移除，因为新的列表小部件widget:list已经可以完整实现。附上我的侧边栏写法示例123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354widgets: - widget: author avatar: https://cdn.jsdelivr.net/gh/xaoxuu/assets@18.12.27/avatar/avatar.png jinrishici: true social: true - widget: plain icon: fas fa-bullhorn title: 注意啦～ body: '本站使用 [Material X](https://xaoxuu.com/wiki/material-x/) 作为主题，喜欢这个主题的朋友可以阅读文档进行安装哦，超喜欢的话还可以安利给身边的朋友哦～' more: icon: fas fa-question-circle url: https://xaoxuu.com/wiki/material-x/ - widget: category - widget: tagcloud - widget: list icon: fas fa-medal title: 精选项目 more: icon: fas fa-arrow-right url: https://xaoxuu.com/projects/ rows: - name: AXKit desc: iOS开源库 icon: fas fa-cube url: https://xaoxuu.com/wiki/axkit/ - name: NoticeBoard desc: iOS开源库 icon: fas fa-cube url: https://xaoxuu.com/wiki/noticeboard/ - name: HeartMate desc: iOS应用程序 icon: fas fa-heartbeat url: https://xaoxuu.com/heartmate/ - name: Material X desc: Hexo博客主题 icon: fas fa-cube url: https://xaoxuu.com/wiki/material-x/ - widget: list icon: fas fa-link title: 特别链接 rows: - name: 关于我 / 留言板 icon: fas fa-comment-dots url: https://xaoxuu.com/about/ - widget: music icon: fas fa-compact-disc title: \"最近在听\" more: icon: far fa-heart url: https://music.163.com/#/user/home?id=63035382 server: netease # netease（网易云音乐）tencent（QQ音乐） xiami（虾米） kugou（酷狗） type: playlist # song （单曲） album （专辑） playlist （歌单） search （搜索） id: 746319661 # 歌曲/专辑/歌单 ID - widget: toc两种友链方案提供两种显示友链的方案，一个是上面介绍的侧边栏友链列表，另一种是友链页。这里说一下友链页的实现方法：在博客的source/路径下新建一个名为friends或者其它名字的文件夹，这个文件夹的名字就是你的友链的path。然后在里面新建一个index.md文件，写入如下内容：1234567891011121314151617181920212223242526272829---layout: links # 必须title: 我的朋友们 # 可选，这是友链页的标题links: - group: 技术大佬 icon: fas fa-user-tie items: - name: # 博客名 avatar: # 头像链接 url: # 博客链接 backgroundColor: '#3E74C9' # 卡片背景颜色 textColor: '#fff' # 卡片文字颜色 tags: # 标签 - 标签1 - 标签2 - group: 分组2 icon: fas fa-user-tie items: - name: # 博客名 avatar: # 头像链接 url: # 博客链接 backgroundColor: '#3E74C9' # 卡片背景颜色 textColor: '#fff' # 卡片文字颜色 tags: # 标签 - 标签1 - 标签2---这里可以写友链页面下方的文字备注，例如自己的友链规范、示例等。本文最后更新于：2019-01-02 星期三评论var GUEST_INFO=[\"nick\",\"mail\",\"link\"],guest_info=\"nick,mail,link\".split(\",\").filter(function(i){return-1"}],"posts":[{"title":"摘要注意事项","slug":"摘要注意事项","date":"2019-01-22T09:41:12.832Z","updated":"2019-01-22T09:40:12.176Z","comments":true,"path":"2019/01/22/摘要注意事项/","link":"","permalink":"https://singularityzed.github.io/2019/01/22/摘要注意事项/","excerpt":"","text":"如果使用&lt;!-- more --&gt;来实现摘要，则&lt;!-- more --&gt;前后一定要有空行，不然可能导致显示错位。 12345这是摘要&lt;!-- more --&gt;这是正文","categories":[{"name":"教程","slug":"教程","permalink":"https://singularityzed.github.io/categories/教程/"}],"tags":[]},{"title":"隐藏meta信息","slug":"隐藏meta信息","date":"2019-01-22T09:41:12.831Z","updated":"2019-01-22T09:40:12.178Z","comments":true,"path":"2019/01/22/隐藏meta信息/","link":"","permalink":"https://singularityzed.github.io/2019/01/22/隐藏meta信息/","excerpt":"","text":"在Front-matter找到或者新增meta，需要隐藏哪个meta标签将其置为false。例如： 1234567891011121314---title: 隐藏meta信息categories: 教程tags: ssmeta: date: false categories: false counter: false updated: false share: false tags: falsevaline: path: /top/--- 这只会在page页面内生效而不会在列表中生效。","categories":[{"name":"教程","slug":"教程","permalink":"https://singularityzed.github.io/categories/教程/"}],"tags":[{"name":"ss","slug":"ss","permalink":"https://singularityzed.github.io/tags/ss/"}]},{"title":"共用一个评论框","slug":"共用一个评论框","date":"2019-01-22T09:41:12.827Z","updated":"2019-01-22T09:40:12.175Z","comments":true,"path":"2019/01/22/共用一个评论框/","link":"","permalink":"https://singularityzed.github.io/2019/01/22/共用一个评论框/","excerpt":"","text":"写法示例： 123456---title: 共用一个评论框valine: path: /top/ placeholder: 你觉得共用一个评论框有意义吗？---","categories":[{"name":"教程","slug":"教程","permalink":"https://singularityzed.github.io/categories/教程/"}],"tags":[]},{"title":"多语言","slug":"多语言","date":"2019-01-22T09:41:12.826Z","updated":"2019-01-22T09:40:12.176Z","comments":true,"path":"2019/01/22/多语言/","link":"","permalink":"https://singularityzed.github.io/2019/01/22/多语言/","excerpt":"","text":"在主目录找到或者新增language，例如： 12345language:- zh-CN- en- zh-HK- zh-TW 博客将按照给定的优先级显示语言。","categories":[{"name":"教程","slug":"教程","permalink":"https://singularityzed.github.io/categories/教程/"}],"tags":[]},{"title":"置顶","slug":"top","date":"2019-01-22T09:41:12.823Z","updated":"2019-01-23T06:43:42.130Z","comments":true,"path":"2019/01/22/top/","link":"","permalink":"https://singularityzed.github.io/2019/01/22/top/","excerpt":"文章的Front-matter填写top: true就置顶了。1top: true 这是一个示例博客。源码目录：https://github.com/mxclub/example","text":"文章的Front-matter填写top: true就置顶了。1top: true 这是一个示例博客。源码目录：https://github.com/mxclub/example 没有更多了哦。","categories":[{"name":"教程","slug":"教程","permalink":"https://singularityzed.github.io/categories/教程/"}],"tags":[]},{"title":"My New Post","slug":"My-New-Post","date":"2019-01-22T04:05:04.000Z","updated":"2019-01-22T04:05:04.884Z","comments":true,"path":"2019/01/22/My-New-Post/","link":"","permalink":"https://singularityzed.github.io/2019/01/22/My-New-Post/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2019-01-22T02:33:16.635Z","updated":"2019-01-22T02:33:16.635Z","comments":true,"path":"2019/01/22/hello-world/","link":"","permalink":"https://singularityzed.github.io/2019/01/22/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]},{"title":"文章专属BGM","slug":"文章专属BGM","date":"2018-12-29T16:00:00.000Z","updated":"2019-01-22T09:40:12.177Z","comments":true,"path":"2018/12/30/文章专属BGM/","link":"","permalink":"https://singularityzed.github.io/2018/12/30/文章专属BGM/","excerpt":"","text":"1234567---title: 文章专属BGMdate: 2018-12-30music: type: song # song （单曲） album （专辑） playlist （歌单） search （搜索） id: 26664345 # 歌曲/专辑/歌单 ID--- 详情见文档：https://xaoxuu.com/wiki/material-x/third-party-services/","categories":[{"name":"教程","slug":"教程","permalink":"https://singularityzed.github.io/categories/教程/"}],"tags":[]},{"title":"Images","slug":"images","date":"2013-12-26T14:46:49.000Z","updated":"2019-01-23T04:19:34.242Z","comments":true,"path":"2013/12/26/images/","link":"","permalink":"https://singularityzed.github.io/2013/12/26/images/","excerpt":"","text":"This is a image test post.","categories":[],"tags":[]},{"title":"","slug":"no-title","date":"2013-12-25T14:57:49.000Z","updated":"2019-01-22T09:40:12.172Z","comments":true,"path":"2013/12/25/no-title/","link":"","permalink":"https://singularityzed.github.io/2013/12/25/no-title/","excerpt":"","text":"This post doesn’t have a title. Make sure it’s accessible.","categories":[],"tags":[]},{"title":"Excerpts","slug":"excerpts","date":"2013-12-24T16:23:23.000Z","updated":"2019-01-22T09:40:12.169Z","comments":true,"path":"2013/12/25/excerpts/","link":"","permalink":"https://singularityzed.github.io/2013/12/25/excerpts/","excerpt":"The following contents should be invisible in home/archive page.","text":"The following contents should be invisible in home/archive page. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce eget urna vitae velit eleifend interdum at ac nisi. In nec ligula lacus. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Sed eu cursus erat, ut dapibus quam. Aliquam eleifend dolor vitae libero pharetra adipiscing. Etiam adipiscing dolor a quam tempor, eu convallis nulla varius. Aliquam sollicitudin risus a porta aliquam. Ut nec velit dolor. Proin eget leo lobortis, aliquam est sed, mollis mauris. Fusce vitae leo pretium massa accumsan condimentum. Fusce malesuada gravida lectus vel vulputate. Donec bibendum porta nibh ut aliquam. Sed lorem felis, congue non fringilla eu, aliquam eu eros. Curabitur orci libero, mollis sed semper vitae, adipiscing in lectus. Aenean non egestas odio. Donec sollicitudin nisi quis lorem gravida, in pharetra mauris fringilla. Duis sit amet faucibus dolor, id aliquam neque. In egestas, odio gravida tempor dictum, mauris felis faucibus purus, sit amet commodo lacus diam vitae est. Ut ut quam eget massa semper sodales. Aenean non ipsum cursus, blandit lectus in, ornare odio. Curabitur ultrices porttitor vulputate.","categories":[],"tags":[]},{"title":"Videos","slug":"videos","date":"2013-12-24T16:19:15.000Z","updated":"2019-01-23T06:27:18.795Z","comments":true,"path":"2013/12/25/videos/","link":"","permalink":"https://singularityzed.github.io/2013/12/25/videos/","excerpt":"","text":"This is a video test post. YouKu Vimeo","categories":[],"tags":[]},{"title":"Gallery Post","slug":"gallery-post","date":"2013-12-24T16:16:18.000Z","updated":"2019-01-22T09:40:12.170Z","comments":true,"path":"2013/12/25/gallery-post/","link":"","permalink":"https://singularityzed.github.io/2013/12/25/gallery-post/","excerpt":"","text":"This post contains 4 photos: Widescreen wallpaper Portrait photo Dual widescreen wallpaper Small photo All photos should be displayed properly. From Wallbase.cc","categories":[],"tags":[]},{"title":"Tag Plugins","slug":"tag-plugins","date":"2013-12-24T16:14:39.000Z","updated":"2019-01-22T09:40:12.173Z","comments":true,"path":"2013/12/25/tag-plugins/","link":"","permalink":"https://singularityzed.github.io/2013/12/25/tag-plugins/","excerpt":"This post is used for testing tag plugins. See docs for more info.","text":"This post is used for testing tag plugins. See docs for more info. Block QuoteNormal blockquote Praesent diam elit, interdum ut pulvinar placerat, imperdiet at magna. Quote from a bookDo not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy. David LevithanWide Awake Quote from TwitterNEW: DevDocs now comes with syntax highlighting. http://devdocs.io @DevDocstwitter.com/devdocs/status/356095192085962752 Quote from an article on the webEvery interaction is both precious and an opportunity to delight. Seth GodinWelcome to Island Marketing Code BlockNormal code block1alert('Hello World!'); With captionArray.map1array.map(callback[, thisArg]) With caption and URL.compactUnderscore.js12.compact([0, 1, false, 2, ‘’, 3]);=&gt; [1, 2, 3] With marked linesLine 1,7-8,10 should be marked with different color. 1234567891011const http = require('http');const hostname = '127.0.0.1';const port = 1337;http.createServer((req, res) =&gt; &#123; res.writeHead(200, &#123; 'Content-Type': 'text/plain' &#125;); res.end('Hello World\\n');&#125;).listen(port, hostname, () =&gt; &#123; console.log(`Server running at http://$&#123;hostname&#125;:$&#123;port&#125;/`);&#125;); Note: Theme’s style should support .highlight.line.marked (recommend to use the selection or current line color). Gist jsFiddle PullquoteLeftLorem ipsum dolor sit amet, consectetur adipiscing elit. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas tempus molestie arcu, et fringilla mauris placerat ac. Nullam luctus bibendum risus. Ut cursus sed ipsum feugiat egestas. Suspendisse elementum, velit eu consequat consequat, augue lorem dapibus libero, eget pulvinar dolor est sit amet nulla. Suspendisse a porta tortor, et posuere mi. Pellentesque ultricies, mi quis volutpat malesuada, erat felis vulputate nisl, ac congue ante tortor ut ante. Proin aliquam sem vel mauris tincidunt, eget scelerisque tortor euismod. Nulla tincidunt enim nec commodo dictum. Mauris id sapien et orci gravida luctus id ut dui. In vel vulputate odio. Duis vel turpis molestie, scelerisque enim eu, lobortis eros. Cras at ipsum gravida, sagittis ante vel, viverra tellus. Nunc mauris turpis, elementum ullamcorper nisl pretium, ultrices cursus justo. Mauris porttitor commodo eros, ac ornare orci interdum in. Cras fermentum cursus leo sed mattis. In dignissim lorem sem, sit amet elementum mauris venenatis ac. RightLorem ipsum dolor sit amet, consectetur adipiscing elit. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed ligula justo, lobortis sit amet semper vel, dignissim sit amet libero. Praesent ac tempus ligula. Maecenas at gravida odio. Etiam tristique volutpat lacus eu faucibus. Donec non tempus arcu. Phasellus adipiscing, mauris nec mollis egestas, ipsum nunc auctor velit, et rhoncus lorem ipsum at ante. Praesent et sem in velit volutpat auctor. Duis vel mauris nulla. Maecenas mattis interdum ante, quis sagittis nibh cursus et. Nulla facilisi. Morbi convallis gravida tortor, ut fermentum enim gravida et. Nunc vel dictum nisl, non ultrices libero. Proin vestibulum felis eget orci consectetur lobortis. Vestibulum augue nulla, iaculis vitae augue vehicula, dignissim ultrices libero. Sed imperdiet urna et quam ultrices tincidunt nec ac magna. Etiam vel pharetra elit.","categories":[],"tags":[]},{"title":"www.google.com","slug":"link-post-without-title","date":"2013-12-24T15:44:13.000Z","updated":"2019-01-22T09:40:12.171Z","comments":true,"path":"2013/12/24/link-post-without-title/","link":"http://www.google.com/","permalink":"https://singularityzed.github.io/2013/12/24/link-post-without-title/","excerpt":"","text":"This is a link post without a title. The title should be the link with or without protocol. Clicking on the link should open Google in a new tab or window.","categories":[],"tags":[]},{"title":"日本語テスト","slug":"日本語テスト","date":"2013-12-24T15:33:26.000Z","updated":"2019-01-22T09:40:12.178Z","comments":true,"path":"2013/12/24/日本語テスト/","link":"","permalink":"https://singularityzed.github.io/2013/12/24/日本語テスト/","excerpt":"","text":"This is a Japanese test post. 私は昨日ついにその助力家というのの上よりするたなけれ。 最も今をお話団はちょうどこの前後なかろでくらいに困りがいるたをは帰着考えたなかって、そうにもするでうたらない。 がたを知っないはずも同時に九月をいよいよたありた。 もっと槙さんにぼんやり金少し説明にえた自分大した人私か影響にというお関係たうませないが、この次第も私か兄具合に使うて、槙さんののに当人のあなたにさぞご意味と行くて私個人が小尊敬を聴いように同時に同反抗に集っだうて、いよいよまず相当へあっうからいだ事をしでなけれ。 それでそれでもご時日をしはずはたったいやと突き抜けるますて、その元がは行ったてという獄を尽すていけですた。 この中道具の日その学校はあなたごろがすまなりかとネルソンさんの考えるですん、辺の事実ないというご盲従ありたですと、爺さんのためが薬缶が結果までの箸の当時してならて、多少の十月にためからそういう上からとにかくしましないと触れべきものたで、ないうですと多少お人達したのでたた。 From すぐ使えるダミーテキスト - 日本語 Lorem ipsum","categories":[],"tags":[]},{"title":"中文測試","slug":"中文測試","date":"2013-12-24T15:31:30.000Z","updated":"2019-01-22T09:40:12.175Z","comments":true,"path":"2013/12/24/中文測試/","link":"","permalink":"https://singularityzed.github.io/2013/12/24/中文測試/","excerpt":"","text":"This is a Chinese test post. 善我王上魚、產生資西員合兒臉趣論。畫衣生這著爸毛親可時，安程幾？合學作。觀經而作建。都非子作這！法如言子你關！手師也。 以也座論頭室業放。要車時地變此親不老高小是統習直麼調未，行年香一？ 就竟在，是我童示讓利分和異種百路關母信過明驗有個歷洋中前合著區亮風值新底車有正結，進快保的行戰從：弟除文辦條國備當來際年每小腳識世可的的外的廣下歌洲保輪市果底天影；全氣具些回童但倒影發狀在示，數上學大法很，如要我……月品大供這起服滿老？應學傳者國：山式排只不之然清同關；細車是！停屋常間又，資畫領生，相們制在？公別的人寫教資夠。資再我我！只臉夫藝量不路政吃息緊回力之；兒足灣電空時局我怎初安。意今一子區首者微陸現際安除發連由子由而走學體區園我車當會，經時取頭，嚴了新科同？很夫營動通打，出和導一樂，查旅他。坐是收外子發物北看蘭戰坐車身做可來。道就學務。 國新故。 工步他始能詩的，裝進分星海演意學值例道……於財型目古香亮自和這乎？化經溫詩。只賽嚴大一主價世哥受的沒有中年即病行金拉麼河。主小路了種就小為廣不？ From 亂數假文產生器 - Chinese Lorem Ipsum","categories":[],"tags":[]},{"title":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam justo turpis, tincidunt ac convallis id.","slug":"long-title","date":"2013-12-24T15:31:06.000Z","updated":"2019-01-22T09:40:12.172Z","comments":true,"path":"2013/12/24/long-title/","link":"","permalink":"https://singularityzed.github.io/2013/12/24/long-title/","excerpt":"","text":"This post has a long title. Make sure the title displayed right.","categories":[],"tags":[]},{"title":"Categories","slug":"categories","date":"2013-12-24T15:30:09.000Z","updated":"2019-01-23T06:04:31.732Z","comments":true,"path":"2013/12/24/categories/","link":"","permalink":"https://singularityzed.github.io/2013/12/24/categories/","excerpt":"","text":"This post contains 3 categories. Make sure your theme can display all of the categories.","categories":[{"name":"Java","slug":"Java","permalink":"https://singularityzed.github.io/categories/Java/"},{"name":"Python","slug":"Java/Python","permalink":"https://singularityzed.github.io/categories/Java/Python/"},{"name":"Angular","slug":"Java/Python/Angular","permalink":"https://singularityzed.github.io/categories/Java/Python/Angular/"},{"name":"LOL","slug":"Java/Python/Angular/LOL","permalink":"https://singularityzed.github.io/categories/Java/Python/Angular/LOL/"},{"name":"Hearthstone","slug":"Java/Python/Angular/LOL/Hearthstone","permalink":"https://singularityzed.github.io/categories/Java/Python/Angular/LOL/Hearthstone/"}],"tags":[]},{"title":"Link Post","slug":"link-post","date":"2013-12-24T15:30:04.000Z","updated":"2019-01-22T09:40:12.172Z","comments":true,"path":"2013/12/24/link-post/","link":"http://www.google.com/","permalink":"https://singularityzed.github.io/2013/12/24/link-post/","excerpt":"","text":"This is a link post. Clicking on the link should open Google in a new tab or window.","categories":[],"tags":[]},{"title":"Tags","slug":"tags","date":"2013-12-24T15:29:53.000Z","updated":"2019-01-23T06:10:25.530Z","comments":true,"path":"2013/12/24/tags/","link":"","permalink":"https://singularityzed.github.io/2013/12/24/tags/","excerpt":"","text":"This post contains 3 tags. Make sure your theme can display all of the tags.","categories":[],"tags":[{"name":"Java","slug":"Java","permalink":"https://singularityzed.github.io/tags/Java/"},{"name":"Python","slug":"Python","permalink":"https://singularityzed.github.io/tags/Python/"},{"name":"Angular","slug":"Angular","permalink":"https://singularityzed.github.io/tags/Angular/"},{"name":"LOL","slug":"LOL","permalink":"https://singularityzed.github.io/tags/LOL/"},{"name":"Hearthstone","slug":"Hearthstone","permalink":"https://singularityzed.github.io/tags/Hearthstone/"}]},{"title":"Elements","slug":"elements","date":"2013-12-24T15:29:08.000Z","updated":"2019-01-22T09:40:12.169Z","comments":true,"path":"2013/12/24/elements/","link":"","permalink":"https://singularityzed.github.io/2013/12/24/elements/","excerpt":"","text":"The purpose of this post is to help you make sure all of HTML elements can display properly. If you use CSS reset, don’t forget to redefine the style by yourself. Heading 1Heading 2Heading 3Heading 4Heading 5Heading 6 ParagraphLorem ipsum dolor sit amet, test link consectetur adipiscing elit. Strong text pellentesque ligula commodo viverra vehicula. Italic text at ullamcorper enim. Morbi a euismod nibh. Underline text non elit nisl. Deleted text tristique, sem id condimentum tempus, metus lectus venenatis mauris, sit amet semper lorem felis a eros. Fusce egestas nibh at sagittis auctor. Sed ultricies ac arcu quis molestie. Donec dapibus nunc in nibh egestas, vitae volutpat sem iaculis. Curabitur sem tellus, elementum nec quam id, fermentum laoreet mi. Ut mollis ullamcorper turpis, vitae facilisis velit ultricies sit amet. Etiam laoreet dui odio, id tempus justo tincidunt id. Phasellus scelerisque nunc sed nunc ultricies accumsan. Interdum et malesuada fames ac ante ipsum primis in faucibus. Sed erat diam, blandit eget felis aliquam, rhoncus varius urna. Donec tellus sapien, sodales eget ante vitae, feugiat ullamcorper urna. Praesent auctor dui vitae dapibus eleifend. Proin viverra mollis neque, ut ullamcorper elit posuere eget. Praesent diam elit, interdum ut pulvinar placerat, imperdiet at magna. Maecenas ornare arcu at mi suscipit, non molestie tortor ultrices. Aenean convallis, diam et congue ultricies, erat magna tincidunt orci, pulvinar posuere mi sapien ac magna. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Praesent vitae placerat mauris. Nullam laoreet ante posuere tortor blandit auctor. Sed id ligula volutpat leo consequat placerat. Mauris fermentum dolor sed augue malesuada sollicitudin. Vivamus ultrices nunc felis, quis viverra orci eleifend ut. Donec et quam id urna cursus posuere. Donec elementum scelerisque laoreet. List TypesDefinition List (dl)Definition List TitleThis is a definition list division. Ordered List (ol) List Item 1 List Item 2 List Item 3 Unordered List (ul) List Item 1 List Item 2 List Item 3 Table Table Header 1 Table Header 2 Table Header 3 Division 1 Division 2 Division 3 Division 1 Division 2 Division 3 Division 1 Division 2 Division 3 Misc Stuff - abbr, acronym, sub, sup, etc.Lorem superscript dolor subscript amet, consectetuer adipiscing elit. Nullam dignissim convallis est. Quisque aliquam. cite. Nunc iaculis suscipit dui. Nam sit amet sem. Aliquam libero nisi, imperdiet at, tincidunt nec, gravida vehicula, nisl. Praesent mattis, massa quis luctus fermentum, turpis mi volutpat justo, eu volutpat enim diam eget metus. Maecenas ornare tortor. Donec sed tellus eget sapien fringilla nonummy. NBA Mauris a ante. Suspendisse quam sem, consequat at, commodo vitae, feugiat in, nunc. Morbi imperdiet augue quis tellus. AVE","categories":[],"tags":[]}]}